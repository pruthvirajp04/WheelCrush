var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALDEventDef;
(function (ALDEventDef) {
    ALDEventDef["None"] = "";
    ALDEventDef["ReportAdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ALDEventDef["ReportAdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    ALDEventDef["ReportLaunchOptions"] = "\u7528\u6237\u542F\u52A8\u53C2\u6570";
    //todo:添加你自己的阿拉丁事件
})(ALDEventDef = exports.ALDEventDef || (exports.ALDEventDef = {}));
//阿拉丁相关接口
var ALD = /** @class */ (function () {
    function ALD() {
    }
    ALD.aldSendOpenId = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    ALD.aldSendEvent = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendEvent(eventName, data);
        }
    };
    ALD.aldSendReportAdClickSuccess = function (data) {
        var type = ALDEventDef.ReportAdClickSuccess + " " + data.title + ":" + String(data.appid);
        ALD.aldSendEvent(type, {
            "导出成功": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSendReportAdClickFail = function (data) {
        var type = ALDEventDef.ReportAdClickFail + " " + data.title + ":" + String(data.appid);
        ALD.aldSendEvent(type, {
            "导出失败": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSendReportLaunchOptions = function (sceneid, ip, location) {
        var type = ALDEventDef.ReportLaunchOptions;
        ALD.aldSendEvent(type, {
            "场景值：": String(sceneid),
            "Ip：": String(ip),
            "地区：": JSON.stringify(location)
        });
    };
    return ALD;
}());
exports.default = ALD;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig = /** @class */ (function () {
    function AppConfig() {
    }
    AppConfig.AppID = "wx0767508ac29d3546";
    AppConfig.ResServer = "https://oss.renyouwangluo.cn/"; //资源服务器地址
    AppConfig.LocalTestReServer = "subRes"; //本地测试资源服务器地址
    AppConfig.Versions = "0.0.0";
    AppConfig.onTTMiniGame = false; //是否是头条小游戏
    return AppConfig;
}());
exports.default = AppConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var CachedQQBannerAd = /** @class */ (function () {
    function CachedQQBannerAd() {
    }
    CachedQQBannerAd.preloadBanner = function () {
    };
    CachedQQBannerAd.show = function (bannerid) {
        var wxWuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerTodayBannerMax;
        bannerid = wxWuDianBanners[Math.floor(Math.random() * wxWuDianBanners.length)];
        if (Laya.Browser.onQQMiniGame && null != bannerid) {
            var sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner_1 = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner_1) {
                CachedQQBannerAd._onLoad = function (res) {
                    console.log("CachedQQBanner 广告 加载完成", bannerid);
                    console.log(res);
                    banner_1.show();
                };
                banner_1.onLoad(CachedQQBannerAd._onLoad);
                CachedQQBannerAd._onError = function (err) {
                    console.log("CachedQQBanner 广告 加载失败", bannerid);
                    console.log(err);
                    banner_1.offLoad(CachedQQBannerAd._onLoad);
                    banner_1.offError(CachedQQBannerAd._onError);
                    banner_1.destroy();
                };
                banner_1.onError(CachedQQBannerAd._onError);
                CachedQQBannerAd._curBanner = banner_1;
            }
        }
    };
    CachedQQBannerAd.hide = function () {
        Laya.timer.clearAll(CachedQQBannerAd);
        if (null != CachedQQBannerAd._curBanner) {
            CachedQQBannerAd._curBanner.offLoad(CachedQQBannerAd._onLoad);
            CachedQQBannerAd._curBanner.offError(CachedQQBannerAd._onError);
            CachedQQBannerAd._curBanner.destroy();
            CachedQQBannerAd._curBanner = null;
            console.log("CachedQQBanner 广告隐藏");
        }
    };
    CachedQQBannerAd.changeShow = function () {
        if (null != CachedQQBannerAd._curBanner) {
            CachedQQBannerAd._curBanner.hide();
            CachedQQBannerAd._curBanner = null;
        }
        CachedQQBannerAd.show();
    };
    CachedQQBannerAd.clear = function () {
    };
    CachedQQBannerAd._curBanner = null;
    CachedQQBannerAd._onLoad = null;
    CachedQQBannerAd._onError = null;
    return CachedQQBannerAd;
}());
exports.default = CachedQQBannerAd;
},{"./Config/AppSwitchConfig":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var CachedWXBannerAd = /** @class */ (function () {
    function CachedWXBannerAd() {
    }
    CachedWXBannerAd.preloadBanner = function () {
        var wxWuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerTodayBannerMax;
        var preLoadBanners = new Array();
        for (var i = 0; i < wxWuDianBanners.length; ++i) {
            preLoadBanners.push(wxWuDianBanners[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, CachedWXBannerAd._preLoopObj, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(CachedWXBannerAd._preLoopObj);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = CachedWXBannerAd._bannerCache[bannerid];
            if (null == banner) {
                banner = CachedWXBannerAd.create(bannerid);
                if (null != banner) {
                    CachedWXBannerAd._bannerCache[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    CachedWXBannerAd.getBanner = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = CachedWXBannerAd._bannerCache[bannerid];
        if (null == banner) {
            banner = CachedWXBannerAd.create(bannerid);
            if (null != banner) {
                CachedWXBannerAd._bannerCache[bannerid] = banner;
            }
        }
        return banner;
    };
    CachedWXBannerAd.create = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                    console.log(res);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                    console.log(err);
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    CachedWXBannerAd.show = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        var wuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerid = wuDianBanners[Math.floor(Math.random() * wuDianBanners.length)];
        var banner = CachedWXBannerAd.getBanner(bannerid);
        if (banner) {
            CachedWXBannerAd._curBanner = banner;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            CachedWXBannerAd._curBanner.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh;
            CachedWXBannerAd._curBanner.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", bannerid);
        }
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerFreshTimer;
        //Laya.timer.once(time * 1000,CachedWXBannerAd,CachedWXBannerAd.changeShow);
    };
    CachedWXBannerAd.hide = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        console.log("CachedWXBanner 广告隐藏");
    };
    CachedWXBannerAd.changeShow = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        CachedWXBannerAd.show();
    };
    CachedWXBannerAd.clear = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        for (var key in CachedWXBannerAd._bannerCache) {
            var banner = CachedWXBannerAd._bannerCache[key];
            if (null != banner) {
                banner.destroy();
            }
            CachedWXBannerAd._bannerCache[key] = null;
        }
    };
    CachedWXBannerAd._bannerCache = {};
    CachedWXBannerAd._curBanner = null;
    CachedWXBannerAd._preLoopObj = {};
    return CachedWXBannerAd;
}());
exports.default = CachedWXBannerAd;
},{"./Config/AppSwitchConfig":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var AppSwitchData = /** @class */ (function () {
    function AppSwitchData() {
        this.version = "";
        this.banner = 0;
        this.wudian = 0;
        this.wudianAvailableTime = {
            "0": 0, "1": 0, "2": 0, "3": 0,
            "4": 0, "5": 0, "6": 0, "7": 0,
            "8": 0, "9": 0, "10": 0, "11": 0,
            "12": 0, "13": 0, "14": 0, "15": 0,
            "16": 0, "17": 0, "18": 0, "19": 0,
            "20": 0, "21": 0, "22": 0, "23": 0
        };
        this.mailiang = 1;
        this.mailianglist = new Array();
        this.mailiangSceneList = new Array();
        this.wxWuDianBanners = new Array();
        this.btnMoveTimer = 1;
        this.bannerMoveTimer = 0.5;
        this.bannerFreshTimer = 200;
        this.bannerCreateFailNum = 3;
        this.bannerTodayBannerMax = 10;
        this.adSwitch = 1;
        this.wudianSceneList = new Array();
        this.continueBtnDelayTime = 2;
        this.bannerShowTime = 30;
        this.oppocfg = new OPPOCfg();
        this.qqcfg = new QQCfg();
        this.ttcfg = new TTCfg();
    }
    Object.defineProperty(AppSwitchData.prototype, "wudianTimeAvaliable", {
        /**
         * 得到当前时间开关是否打开
         *
         * @readonly
         * @type {boolean}
         * @memberof AppSwitchData
         */
        get: function () {
            return this.wudianAvailableTime[new Date().getHours()] == 1;
        },
        enumerable: true,
        configurable: true
    });
    return AppSwitchData;
}());
exports.AppSwitchData = AppSwitchData;
var OPPOCfg = /** @class */ (function () {
    function OPPOCfg() {
        this.yuansheng = 100;
        this.yuanshengSwitch = 1;
        this.addToDesktop = 0;
        this.oppoversions = "";
        this.btnShowTimer = 0;
        this.indexAdSwitch = 0;
        this.endAdSwitch = 0;
    }
    return OPPOCfg;
}());
exports.OPPOCfg = OPPOCfg;
var QQCfg = /** @class */ (function () {
    function QQCfg() {
        this.kuangdianBanner = 0;
        this.kuangdianBox = 0;
        this.box = 0;
        this.weiyi = 0;
    }
    return QQCfg;
}());
exports.QQCfg = QQCfg;
var TTCfg = /** @class */ (function () {
    function TTCfg() {
        this.moreGameSwitch = 0;
        this.kuangdianBanner = 0;
        this.luping = 0;
    }
    return TTCfg;
}());
exports.TTCfg = TTCfg;
var AppSwitchConfig = /** @class */ (function () {
    function AppSwitchConfig() {
        this._data = new Array();
    }
    AppSwitchConfig.getInstance = function () {
        if (null == AppSwitchConfig._instance) {
            AppSwitchConfig._instance = AppSwitchConfig.load();
        }
        return AppSwitchConfig._instance;
    };
    AppSwitchConfig.load = function () {
        var config = new AppSwitchConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ResServer + "/json/appswitch.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new AppSwitchData();
                rowData.version = String(row["version"]);
                rowData.banner = Number(row["banner"]);
                rowData.wudian = Number(row["wudian"]);
                rowData.wudianAvailableTime = Object(row["wudianTime"]);
                rowData.mailiang = Number(row["mailiang"]);
                var mailianglist = row["mailianglist"];
                if (null != mailianglist) {
                    for (var j = 0; j < mailianglist.length; ++j) {
                        var flag = Number(mailianglist[j]);
                        rowData.mailianglist.push(flag);
                    }
                }
                var mailiangScenelist = row["mailiangScenelist"];
                if (null != mailiangScenelist) {
                    for (var j = 0; j < mailiangScenelist.length; ++j) {
                        var sceneValue = Number(mailiangScenelist[j]);
                        rowData.mailiangSceneList.push(sceneValue);
                    }
                }
                var wxwudianbanners = row["wxwudianbanners"];
                if (null != wxwudianbanners) {
                    for (var j = 0; j < wxwudianbanners.length; ++j) {
                        var bannerid = String(wxwudianbanners[j]);
                        rowData.wxWuDianBanners.push(bannerid);
                    }
                }
                rowData.btnMoveTimer = Number(row["btnMoveTimer"]);
                rowData.bannerMoveTimer = Number(row["bannerMoveTimer"]);
                rowData.bannerCreateFailNum = Number(row["createFailNum"]);
                rowData.bannerFreshTimer = Number(row["bannerFreshTimer"]);
                rowData.bannerTodayBannerMax = Number(row["todayBannerMax"]);
                rowData.adSwitch = Number(row["adSwitch"]);
                var wudianSceneList = row["wudianSceneList"];
                if (null != wudianSceneList) {
                    for (var j = 0; j < wudianSceneList.length; ++j) {
                        var wudianSceneValue = Number(wudianSceneList[j]);
                        rowData.wudianSceneList.push(wudianSceneValue);
                    }
                }
                rowData.continueBtnDelayTime = Number(row["continueBtnDelayTime"]);
                rowData.bannerShowTime = Number(row["bannerShowTime"]);
                if (null != row["oppocfg"]) {
                    var cfg = row["oppocfg"];
                    rowData.oppocfg.yuansheng = Number(cfg["yuansheng"]);
                    rowData.oppocfg.yuanshengSwitch = Number(cfg["yuanshengSwitch"]);
                    rowData.oppocfg.addToDesktop = Number(cfg["addToDesktop"]);
                    rowData.oppocfg.oppoversions = String(cfg["oppoversions"]);
                    rowData.oppocfg.btnShowTimer = Number(cfg["btnShowTimer"]);
                    rowData.oppocfg.indexAdSwitch = Number(cfg["indexAdSwitch"]);
                    rowData.oppocfg.endAdSwitch = Number(cfg["endAdSwitch"]);
                }
                if (null != row["qqcfg"]) {
                    var cfg = row["qqcfg"];
                    rowData.qqcfg.kuangdianBanner = Number(cfg["kuangdianBanner"]);
                    rowData.qqcfg.kuangdianBox = Number(cfg["kuangdianBox"]);
                    rowData.qqcfg.box = Number(cfg["box"]);
                    rowData.qqcfg.weiyi = Number(cfg["weiyi"]);
                }
                if (null != row["ttcfg"]) {
                    var cfg = row["ttcfg"];
                    rowData.ttcfg.moreGameSwitch = Number(cfg["moreGameSwitch"]);
                    rowData.ttcfg.kuangdianBanner = Number(cfg["kuangdianBanner"]);
                    rowData.ttcfg.luping = Number(cfg["luping"]);
                }
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new AppSwitchData());
            return config;
        }
    };
    AppSwitchConfig.prototype.getAppSwitchData = function () {
        return this._data[0];
    };
    return AppSwitchConfig;
}());
exports.default = AppSwitchConfig;
},{"../AppConfig":2}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDef;
(function (EventDef) {
    EventDef[EventDef["None"] = 0] = "None";
    EventDef[EventDef["App_CloseFirstLoadingView"] = 500] = "App_CloseFirstLoadingView";
    EventDef[EventDef["AD_OnShareAdFail"] = 501] = "AD_OnShareAdFail";
    //当界面打开
    EventDef[EventDef["Game_OnViewOpen"] = 600] = "Game_OnViewOpen";
    //当界面关闭
    EventDef[EventDef["Game_OnViewClose"] = 601] = "Game_OnViewClose";
    //当玩家金币变动
    EventDef[EventDef["Game_OnUserMoneyChange"] = 701] = "Game_OnUserMoneyChange";
    //当玩家钻石变动
    EventDef[EventDef["Game_OnUserCrystalChange"] = 702] = "Game_OnUserCrystalChange";
    //当关卡开始
    EventDef[EventDef["Game_OnLevelStart"] = 1000] = "Game_OnLevelStart";
    //当关卡结束
    EventDef[EventDef["Game_OnLevelComplate"] = 1001] = "Game_OnLevelComplate";
    //误点预加载完毕
    EventDef[EventDef["AD_WudianBanner_LoadComplete"] = 2217] = "AD_WudianBanner_LoadComplete";
    //显示误点Banner
    EventDef[EventDef["AD_WudianBanner_Show"] = 2218] = "AD_WudianBanner_Show";
    //影藏误点Banner
    EventDef[EventDef["AD_WudianBanner_Hide"] = 2219] = "AD_WudianBanner_Hide";
    //预加载Banner
    EventDef[EventDef["AD_WudianBanner_PreLoad"] = 2220] = "AD_WudianBanner_PreLoad";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
    EventDef[EventDef["MOUSE_DOWN"] = 10000] = "MOUSE_DOWN";
    EventDef[EventDef["MOUSE_UP"] = 10001] = "MOUSE_UP";
    EventDef[EventDef["BaoZha"] = 10002] = "BaoZha";
    EventDef[EventDef["LoadLevels"] = 10003] = "LoadLevels";
})(EventDef = exports.EventDef || (exports.EventDef = {}));
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = Laya.EventDispatcher;
var EventMgr = /** @class */ (function (_super) {
    __extends(EventMgr, _super);
    function EventMgr() {
        return _super.call(this) || this;
    }
    ;
    //广播事件
    EventMgr.prototype.dispatch = function (InName, agv) {
        EventMgr.eventDispatcher.event(InName, agv);
    };
    //注册事件
    EventMgr.prototype.regEvemt = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    EventMgr.prototype.regOnceEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    EventMgr.prototype.removeEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.off(InName, caller, listener);
    };
    EventMgr.eventDispatcher = new EventDispatcher();
    EventMgr.instance = new EventMgr();
    return EventMgr;
}(EventDispatcher));
exports.default = EventMgr;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var KRQ_LoopAdBox_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox");
var KRQ_VLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var KRQ_Banner_1 = require("./KRQ/Com/KRQ_Banner");
var KRQ_Export_1 = require("./KRQ/ViewCom/KRQ_Export");
var KRQ_HistoryBox_1 = require("./KRQ/Com/KRQ_History/KRQ_HistoryBox");
var KRQ_History_1 = require("./KRQ/Com/KRQ_History/KRQ_History");
var KRQ_RockSingleAd_1 = require("./KRQ/Com/KRQ_RockSingleAd");
var KRQ_Floating_1 = require("./KRQ/ViewCom/KRQ_Floating");
var KRQ_RollSingleAd_1 = require("./KRQ/Com/KRQ_RollSingleAd");
var KRQ_GameOver_1 = require("./KRQ/ViewCom/KRQ_GameOver");
var KRQ_SidePull_1 = require("./KRQ/ViewCom/KRQ_SidePull");
var KRQ_HLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd");
var KRQ_Main_1 = require("./KRQ/ViewCom/KRQ_Main");
var KRQ_SingleAd_1 = require("./KRQ/Com/KRQ_SingleAd");
var KRQ_GamingBanner_1 = require("./KRQ/Com/KRQ_GamingBanner");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var ClickGetPrize_1 = require("./View/ClickGetPrize/ClickGetPrize");
var LogoAni_1 = require("./View/LoadingView/LogoAni");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var Exprot2ViewTemplate_1 = require("./View/TemplateViews/Export2/Exprot2ViewTemplate");
var ButtonAnim_1 = require("./View/ButtonAnim");
var ExportViewTemplate_1 = require("./View/TemplateViews/Export/ExportViewTemplate");
var GameFailViewTemplate_1 = require("./View/TemplateViews/GameFail/GameFailViewTemplate");
var GameWinViewTemplate_1 = require("./View/TemplateViews/GameWin/GameWinViewTemplate");
var InGameViewTemplate_1 = require("./View/TemplateViews/InGame/InGameViewTemplate");
var MainViewTemplate_1 = require("./View/TemplateViews/Main/MainViewTemplate");
var MiniGameViewTemplate_1 = require("./View/TemplateViews/MiniGame/MiniGameViewTemplate");
var OPPONativeAdViewTemplate_1 = require("./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate");
var QQCrazyClick_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick");
var QQCrazyClick2_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick2");
var QQGameFailViewTemplate_1 = require("./View/QQTemplate/GameFail/QQGameFailViewTemplate");
var QQGameWinViewTemplate_1 = require("./View/QQTemplate/GameWin/QQGameWinViewTemplate");
var QQInGameViewTemplate_1 = require("./View/QQTemplate/InGame/QQInGameViewTemplate");
var QQMainViewTemplate_1 = require("./View/QQTemplate/Main/QQMainViewTemplate");
var RewardViewTemplate_1 = require("./View/TemplateViews/Reward/RewardViewTemplate");
var TTCrazyClick_1 = require("./View/TTTemplate/TTCrazyClick/TTCrazyClick");
var TTGameFailViewTemplate_1 = require("./View/TTTemplate/GameFail/TTGameFailViewTemplate");
var TTMainViewTemplate_1 = require("./View/TTTemplate/Main/TTMainViewTemplate");
var TipsView_1 = require("./View/TipsView/TipsView");
var LoopAdBox_1 = require("./ShareAd/View/LoopAdBox");
var HorizontalLoopAdView_1 = require("./ShareAd/View/HorizontalLoopAdView");
var BannerAdView_1 = require("./ShareAd/View/BannerAdView");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox.ts", KRQ_LoopAdBox_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd.ts", KRQ_VLoopAd_1.default);
        reg("KRQ/Com/KRQ_Banner.ts", KRQ_Banner_1.default);
        reg("KRQ/ViewCom/KRQ_Export.ts", KRQ_Export_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_HistoryBox.ts", KRQ_HistoryBox_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_History.ts", KRQ_History_1.default);
        reg("KRQ/Com/KRQ_RockSingleAd.ts", KRQ_RockSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_Floating.ts", KRQ_Floating_1.default);
        reg("KRQ/Com/KRQ_RollSingleAd.ts", KRQ_RollSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_GameOver.ts", KRQ_GameOver_1.default);
        reg("KRQ/ViewCom/KRQ_SidePull.ts", KRQ_SidePull_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd.ts", KRQ_HLoopAd_1.default);
        reg("KRQ/ViewCom/KRQ_Main.ts", KRQ_Main_1.default);
        reg("KRQ/Com/KRQ_SingleAd.ts", KRQ_SingleAd_1.default);
        reg("KRQ/Com/KRQ_GamingBanner.ts", KRQ_GamingBanner_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("View/ClickGetPrize/ClickGetPrize.ts", ClickGetPrize_1.default);
        reg("View/LoadingView/LogoAni.ts", LogoAni_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("View/TemplateViews/Export2/Exprot2ViewTemplate.ts", Exprot2ViewTemplate_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("View/TemplateViews/Export/ExportViewTemplate.ts", ExportViewTemplate_1.default);
        reg("View/TemplateViews/GameFail/GameFailViewTemplate.ts", GameFailViewTemplate_1.default);
        reg("View/TemplateViews/GameWin/GameWinViewTemplate.ts", GameWinViewTemplate_1.default);
        reg("View/TemplateViews/InGame/InGameViewTemplate.ts", InGameViewTemplate_1.default);
        reg("View/TemplateViews/Main/MainViewTemplate.ts", MainViewTemplate_1.default);
        reg("View/TemplateViews/MiniGame/MiniGameViewTemplate.ts", MiniGameViewTemplate_1.default);
        reg("View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate.ts", OPPONativeAdViewTemplate_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick.ts", QQCrazyClick_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick2.ts", QQCrazyClick2_1.default);
        reg("View/QQTemplate/GameFail/QQGameFailViewTemplate.ts", QQGameFailViewTemplate_1.default);
        reg("View/QQTemplate/GameWin/QQGameWinViewTemplate.ts", QQGameWinViewTemplate_1.default);
        reg("View/QQTemplate/InGame/QQInGameViewTemplate.ts", QQInGameViewTemplate_1.default);
        reg("View/QQTemplate/Main/QQMainViewTemplate.ts", QQMainViewTemplate_1.default);
        reg("View/TemplateViews/Reward/RewardViewTemplate.ts", RewardViewTemplate_1.default);
        reg("View/TTTemplate/TTCrazyClick/TTCrazyClick.ts", TTCrazyClick_1.default);
        reg("View/TTTemplate/GameFail/TTGameFailViewTemplate.ts", TTGameFailViewTemplate_1.default);
        reg("View/TTTemplate/Main/TTMainViewTemplate.ts", TTMainViewTemplate_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
        reg("ShareAd/View/LoopAdBox.ts", LoopAdBox_1.default);
        reg("ShareAd/View/HorizontalLoopAdView.ts", HorizontalLoopAdView_1.default);
        reg("ShareAd/View/BannerAdView.ts", BannerAdView_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./KRQ/Com/KRQ_Banner":9,"./KRQ/Com/KRQ_GamingBanner":11,"./KRQ/Com/KRQ_History/KRQ_History":12,"./KRQ/Com/KRQ_History/KRQ_HistoryBox":13,"./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd":14,"./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox":15,"./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"./KRQ/Com/KRQ_RockSingleAd":17,"./KRQ/Com/KRQ_RollSingleAd":18,"./KRQ/Com/KRQ_SingleAd":19,"./KRQ/ViewCom/KRQ_Export":20,"./KRQ/ViewCom/KRQ_Floating":21,"./KRQ/ViewCom/KRQ_GameOver":22,"./KRQ/ViewCom/KRQ_Main":23,"./KRQ/ViewCom/KRQ_SidePull":24,"./Mgr/GameMgr":28,"./ShareAd/View/BannerAdView":41,"./ShareAd/View/HorizontalLoopAdView":42,"./ShareAd/View/LoopAdBox":43,"./View/ButtonAnim":47,"./View/ClickGetPrize/ClickGetPrize":48,"./View/Common/UniversalBottomZone":49,"./View/LoadingView/LoadingView":51,"./View/LoadingView/LogoAni":52,"./View/QQTemplate/GameFail/QQGameFailViewTemplate":53,"./View/QQTemplate/GameWin/QQGameWinViewTemplate":54,"./View/QQTemplate/InGame/QQInGameViewTemplate":55,"./View/QQTemplate/Main/QQMainViewTemplate":56,"./View/QQTemplate/QQCrazyClick/QQCrazyClick":57,"./View/QQTemplate/QQCrazyClick/QQCrazyClick2":58,"./View/TTTemplate/GameFail/TTGameFailViewTemplate":60,"./View/TTTemplate/Main/TTMainViewTemplate":61,"./View/TTTemplate/TTCrazyClick/TTCrazyClick":62,"./View/TemplateViews/Export/ExportViewTemplate":65,"./View/TemplateViews/Export2/Exprot2ViewTemplate":64,"./View/TemplateViews/GameFail/GameFailViewTemplate":66,"./View/TemplateViews/GameWin/GameWinViewTemplate":67,"./View/TemplateViews/InGame/InGameViewTemplate":68,"./View/TemplateViews/Main/MainViewTemplate":69,"./View/TemplateViews/MiniGame/MiniGameViewTemplate":70,"./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate":71,"./View/TemplateViews/Reward/RewardViewTemplate":72,"./View/TipsView/TipsView":74,"./View/TwinkleSprite":75}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var WXAPI_1 = require("../../WXAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var KRQ_Banner = /** @class */ (function (_super) {
    __extends(KRQ_Banner, _super);
    function KRQ_Banner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._wxBanner = null;
        _this._onLoad = null;
        _this._onError = null;
        _this._onResize = null;
        return _this;
    }
    Object.defineProperty(KRQ_Banner.prototype, "Clip", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_Banner.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.BannerAdLocationID;
    };
    KRQ_Banner.prototype.onStart = function () {
        this.refresh();
    };
    KRQ_Banner.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_Banner.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_Banner.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
    };
    KRQ_Banner.prototype.refresh = function (onComplate) {
        var _this = this;
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner) {
            this.refreshWXBanner();
        }
        else {
            _super.prototype.refresh.call(this, function () {
                _this.refreshBanner();
            });
        }
    };
    KRQ_Banner.prototype.refreshBanner = function () {
        if (null == this.Sprite || !this.Sprite.visible)
            return;
        if (null != this._data) {
            var self_1 = this;
            this.Sprite.loadImage(this._data.logo, Laya.Handler.create(this, function () {
                if (null != self_1.Sprite && !self_1.Sprite.destroyed) {
                    self_1.Sprite.width = 600;
                    self_1.Sprite.height = 205;
                }
            }));
        }
    };
    KRQ_Banner.prototype.refreshWXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame) || null == this.Sprite || !this.Sprite.visible)
            return;
        this.clearWXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this.Sprite.localToGlobal(new Laya.Point(0, 0));
        var width = 300;
        var scale = self.Sprite.width / Laya.stage.width;
        var realWidth = sw * scale;
        var offset = (realWidth - width) / 2;
        var left = pos.x / Laya.stage.width * sw + offset;
        var top = pos.y / Laya.stage.height * sh;
        if (Laya.Browser.onMiniGame) {
            this._wxBanner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: WXAPI_1.default.bannerAdUnitId,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wxBanner) {
                self._wxBanner.onLoad(function (res) {
                    console.log("KRQ  WXBanner广告 加载完成 : ", WXAPI_1.default.bannerAdUnitId);
                    console.log(res);
                    self._wxBanner.show();
                });
                self._wxBanner.onError(function (err) {
                    console.log("KRQ WXBanner广告 加载失败 : ", WXAPI_1.default.bannerAdUnitId);
                    console.log(err);
                    self.refreshBanner();
                    self.clearWXBaner();
                });
                self._wxBanner.onResize(function (res) {
                });
            }
            else {
                self.refreshBanner();
            }
        }
        else if (Laya.Browser.onQQMiniGame) {
            self._wxBanner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: QQMiniGameAPI_1.default.bannerAdUnitId,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wxBanner) {
                self._onLoad = function (res) {
                    console.log("KRQ  QQBanner广告 加载完成 : ", WXAPI_1.default.bannerAdUnitId);
                    console.log(res);
                    self._wxBanner.show();
                };
                self._wxBanner.onLoad(self._onLoad);
                self._onError = function (err) {
                    console.log("KRQ QQBanner广告 加载失败 : ", WXAPI_1.default.bannerAdUnitId);
                    console.log(err);
                    self.refreshBanner();
                    self.clearWXBaner();
                };
                self._wxBanner.onError(self._onError);
                self._onResize = function (res) {
                };
                self._wxBanner.onResize(self._onResize);
            }
            else {
                self.refreshBanner();
            }
        }
    };
    KRQ_Banner.prototype.clearWXBaner = function () {
        if (this._wxBanner) {
            this._wxBanner.offLoad(this._onLoad);
            this._wxBanner.offError(this._onError);
            this._wxBanner.offResize(this._onResize);
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
    };
    KRQ_Banner.prototype.onViewShow = function () {
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner && null == this._wxBanner) {
            this.refreshWXBanner();
        }
    };
    KRQ_Banner.prototype.onViewHide = function () {
        this.clearWXBaner();
    };
    KRQ_Banner.prototype.onDestroy = function () {
        this.clearWXBaner();
    };
    KRQ_Banner.prototype.show = function () {
        _super.prototype.show.call(this);
        this.onViewShow();
    };
    KRQ_Banner.prototype.hide = function () {
        _super.prototype.hide.call(this);
        this.onViewHide();
    };
    return KRQ_Banner;
}(KRQ_ComBase_1.default));
exports.default = KRQ_Banner;
},{"../../Config/AppSwitchConfig":5,"../../QQMiniGameAPI":39,"../../ShareAd/ShareAd":40,"../../WXAPI":77,"./KRQ_ComBase":10}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var KRQ_ComBase = /** @class */ (function (_super) {
    __extends(KRQ_ComBase, _super);
    function KRQ_ComBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = -10086;
        _this._datas = [];
        _this._data = null;
        return _this;
    }
    Object.defineProperty(KRQ_ComBase.prototype, "Sprite", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KRQ_ComBase.prototype, "Data", {
        get: function () {
            return this._data;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_ComBase.prototype.refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                self._data = self._datas[Math.floor(Math.random() * datas.length)];
                if (null != onComplate) {
                    onComplate();
                }
            }
        }, false);
    };
    KRQ_ComBase.prototype.navigateToMiniProgram = function (d) {
        var data = null == d ? this._data : d;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    KRQ_ComBase.prototype.show = function () {
        this.Sprite.visible = true;
    };
    KRQ_ComBase.prototype.hide = function () {
        this.Sprite.visible = false;
    };
    KRQ_ComBase.prototype.autoScrollText = function (text) {
        if (text.overflow != Laya.Text.SCROLL)
            return;
        var forward = true;
        var deltaDis = 0;
        Laya.timer.frameLoop(1, text, function () {
            var d = Laya.timer.delta / 1000 * 10;
            deltaDis += d;
            if (deltaDis >= text.textWidth / 2) {
                forward = !forward;
                deltaDis = 0;
            }
            if (forward) {
                text.scrollX += d;
            }
            else {
                text.scrollX -= d;
            }
        });
    };
    return KRQ_ComBase;
}(Laya.Script));
exports.default = KRQ_ComBase;
},{"../../ALD":1,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":38,"../../QQMiniGameAPI":39,"../../ShareAd/ShareAd":40,"../../WXAPI":77}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("./KRQ_Banner");
var WXAPI_1 = require("../../WXAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var KRQ_GamingBanner = /** @class */ (function (_super) {
    __extends(KRQ_GamingBanner, _super);
    function KRQ_GamingBanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_GamingBanner.prototype.refresh = function (onComplate) {
        var _this = this;
        var launchScene = null;
        if (Laya.Browser.onMiniGame) {
            launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
        }
        else if (Laya.Browser.onQQMiniGame) {
            launchScene = QQMiniGameAPI_1.default.getLaunchOptionsSync().scene;
        }
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.GetIpBlocked();
        if (!ipBlocked || !noEnterBySearch) {
            this.Sprite.visible = false;
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner) {
            this.refreshWXBanner();
        }
        else {
            _super.prototype.refresh.call(this, function () {
                _this.refreshBanner();
                if (null != onComplate) {
                    onComplate();
                }
            });
        }
    };
    return KRQ_GamingBanner;
}(KRQ_Banner_1.default));
exports.default = KRQ_GamingBanner;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/WudianMgr":33,"../../QQMiniGameAPI":39,"../../WXAPI":77,"./KRQ_Banner":9}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HistoryBox_1 = require("./KRQ_HistoryBox");
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_History = /** @class */ (function (_super) {
    __extends(KRQ_History, _super);
    function KRQ_History() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.OnBackBtnClick = null;
        _this._topZone = null;
        _this._backBtn = null;
        _this._startList = new Array();
        return _this;
    }
    KRQ_History.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.HistoryLocationID;
        this._topZone = this.Sprite.getChildByName("TopZone");
        this._backBtn = this._topZone.getChildByName("BackBtn");
        this._list = this.Sprite.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    KRQ_History.prototype.onStart = function () {
        this.refresh();
    };
    KRQ_History.prototype.onEnable = function () {
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
    };
    KRQ_History.prototype.onDisable = function () {
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
    };
    KRQ_History.prototype.refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                self._startList.splice(0);
                for (var i = 0; i < self._datas.length; ++i) {
                    self._startList.push(false);
                }
                var num = Math.floor(self._startList.length * 0.33);
                while (num > 0) {
                    var index = Math.floor(Math.random() * self._startList.length);
                    if (false == self._startList[index]) {
                        self._startList[index] = true;
                        --num;
                    }
                }
                self._list.array = self._datas;
            }
        });
    };
    KRQ_History.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var star = this._startList[index];
        var historyBox = cell.getComponent(KRQ_HistoryBox_1.default);
        historyBox.setData(data, star);
    };
    KRQ_History.prototype.onBackBtn = function () {
        this.hide();
        if (null != this.OnBackBtnClick) {
            this.OnBackBtnClick();
        }
    };
    KRQ_History.prototype.show = function () {
        _super.prototype.show.call(this);
        this.refresh();
    };
    return KRQ_History;
}(KRQ_ComBase_1.default));
exports.default = KRQ_History;
},{"../../../ShareAd/ShareAd":40,"../KRQ_ComBase":10,"./KRQ_HistoryBox":13}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../../Com/KRQ_ComBase");
var KRQ_HistoryBox = /** @class */ (function (_super) {
    __extends(KRQ_HistoryBox, _super);
    function KRQ_HistoryBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._icon = null;
        _this._text = null;
        _this._mark = null;
        return _this;
    }
    KRQ_HistoryBox.prototype.onAwake = function () {
        this._icon = this.Sprite.getChildByName("Icon");
        this._text = this.Sprite.getChildByName("Text");
        this._text.overflow = Laya.Text.SCROLL;
        this._text.text = "";
        this._mark = this.Sprite.getChildByName("Mark");
        this._mark.visible = false;
    };
    KRQ_HistoryBox.prototype.onStart = function () {
        this.autoScrollText(this._text);
    };
    KRQ_HistoryBox.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_HistoryBox.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_HistoryBox.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
    };
    KRQ_HistoryBox.prototype.setData = function (data, star) {
        this._data = data;
        if (null != this._data) {
            var self = this;
            this._icon.loadImage(this._data.logo, Laya.Handler.create(this, function () {
                if (!self._icon.destroyed) {
                    self._icon.width = 100;
                    self._icon.height = 100;
                }
            }));
            var str = String(this._data.title);
            this._text.text = str;
            this._mark.visible = star;
        }
    };
    return KRQ_HistoryBox;
}(KRQ_ComBase_1.default));
exports.default = KRQ_HistoryBox;
},{"../../Com/KRQ_ComBase":10}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var KRQ_LoopAdBox_1 = require("./KRQ_LoopAdBox");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_HLoopAd = /** @class */ (function (_super) {
    __extends(KRQ_HLoopAd, _super);
    function KRQ_HLoopAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isEnable = true;
        _this.useMovePause = true;
        _this._scrollForward = true;
        _this._cellSize = new Laya.Point();
        return _this;
    }
    Object.defineProperty(KRQ_HLoopAd.prototype, "Clip", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_HLoopAd.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.hScrollBarSkin = "";
    };
    KRQ_HLoopAd.prototype.onStart = function () {
        var self = this;
        this._list.width = self.Clip.width;
        this._list.height = self.Clip.height;
        self.refresh(function () {
            if (null != self._list.cells && self._list.cells.length > 0) {
                var box = self._list.cells[0];
                self._cellSize.x = box.width;
                self._cellSize.y = box.height;
                if (self.useMovePause) {
                    setTimeout(function () {
                        if (self._list.scrollBar) {
                            self._list.scrollBar.value = 0;
                            self.move();
                        }
                    }, 2000);
                }
            }
        });
    };
    KRQ_HLoopAd.prototype.refresh = function (onComplate) {
        if (!this.isEnable) {
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas && datas.length > 0) {
                self._datas = datas;
                self._list.array = self._datas;
                if (null != self.Sprite && !self.Sprite.destroyed) {
                    self.Sprite.visible = true;
                }
                if (null != onComplate) {
                    onComplate();
                }
            }
            else {
                if (null != self.Sprite && !self.Sprite.destroyed) {
                    self.Sprite.visible = false;
                }
            }
        }, null, true);
    };
    KRQ_HLoopAd.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(KRQ_LoopAdBox_1.default);
        loopAdBox.setData(data);
    };
    KRQ_HLoopAd.prototype.move = function () {
        var tonum = this._cellSize.x + this._list.spaceX;
        var left = 0;
        if (!this._scrollForward) {
            tonum *= -1;
            left = (this._list.scrollBar.max - this._list.scrollBar.value) % tonum * -1;
        }
        else {
            left = this._list.scrollBar.value % tonum;
        }
        if (this._list.scrollBar) {
            this._list.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1._list.scrollBar, { value: self_1._list.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1._list.scrollBar.value >= self_1._list.scrollBar.max) {
                    self_1._scrollForward = false;
                }
                else if (self_1._list.scrollBar.value <= 0) {
                    self_1._scrollForward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1._list.scrollBar) {
                        self_1.move();
                    }
                });
            });
        }
    };
    KRQ_HLoopAd.prototype.onUpdate = function () {
        if (this.useMovePause)
            return;
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    return KRQ_HLoopAd;
}(KRQ_ComBase_1.default));
exports.default = KRQ_HLoopAd;
},{"../../../ShareAd/ShareAd":40,"../KRQ_ComBase":10,"./KRQ_LoopAdBox":15}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var KRQ_LoopAdBox = /** @class */ (function (_super) {
    __extends(KRQ_LoopAdBox, _super);
    function KRQ_LoopAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originW = 170;
        _this._originH = 170;
        return _this;
    }
    KRQ_LoopAdBox.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.overflow = Laya.Text.SCROLL;
        this._disText.text = "";
    };
    KRQ_LoopAdBox.prototype.onStart = function () {
        this.autoScrollText(this._disText);
    };
    KRQ_LoopAdBox.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_LoopAdBox.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_LoopAdBox.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
    };
    KRQ_LoopAdBox.prototype.setData = function (data) {
        this._data = data;
        if (null != this._data) {
            var self_1 = this;
            this._displaySp.loadImage(this._data.logo, Laya.Handler.create(this, function () {
                if (!self_1._displaySp.destroyed) {
                    self_1._displaySp.width = self_1._originW;
                    self_1._displaySp.height = self_1._originH;
                }
            }));
            var str = String(this._data.title);
            this._disText.text = str;
        }
    };
    return KRQ_LoopAdBox;
}(KRQ_ComBase_1.default));
exports.default = KRQ_LoopAdBox;
},{"../KRQ_ComBase":10}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HLoopAd_1 = require("./KRQ_HLoopAd");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_VLoopAd = /** @class */ (function (_super) {
    __extends(KRQ_VLoopAd, _super);
    function KRQ_VLoopAd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_VLoopAd.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    KRQ_VLoopAd.prototype.move = function () {
        var tonum = this._cellSize.y + this._list.spaceY;
        var left = 0;
        if (!this._scrollForward) {
            tonum *= -1;
            left = (this._list.scrollBar.max - this._list.scrollBar.value) % tonum * -1;
        }
        else {
            left = this._list.scrollBar.value % tonum;
        }
        if (this._list.scrollBar) {
            this._list.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1._list.scrollBar, { value: self_1._list.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1._list.scrollBar.value >= self_1._list.scrollBar.max) {
                    self_1._scrollForward = false;
                }
                else if (self_1._list.scrollBar.value <= 0) {
                    self_1._scrollForward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1._list.scrollBar) {
                        self_1.move();
                    }
                });
            });
        }
    };
    return KRQ_VLoopAd;
}(KRQ_HLoopAd_1.default));
exports.default = KRQ_VLoopAd;
},{"../../../ShareAd/ShareAd":40,"./KRQ_HLoopAd":14}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var KRQ_RockSingleAd = /** @class */ (function (_super) {
    __extends(KRQ_RockSingleAd, _super);
    function KRQ_RockSingleAd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_RockSingleAd.prototype.playAni = function (onComplate) {
        var self = this;
        self.Sprite.rotation = 0;
        Laya.Tween.to(self.Sprite, {
            rotation: 20,
        }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
            Laya.Tween.to(self.Sprite, {
                rotation: 0,
            }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
                self.Sprite.rotation = 0;
                if (null != onComplate) {
                    onComplate();
                }
            }));
        }));
    };
    return KRQ_RockSingleAd;
}(KRQ_SingleAd_1.default));
exports.default = KRQ_RockSingleAd;
},{"./KRQ_SingleAd":19}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var KRQ_RollSingleAd = /** @class */ (function (_super) {
    __extends(KRQ_RollSingleAd, _super);
    function KRQ_RollSingleAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originX = null;
        return _this;
    }
    KRQ_RollSingleAd.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._originX = this.Sprite.x;
        this.Sprite.x -= Laya.stage.width;
    };
    KRQ_RollSingleAd.prototype.playAni = function (onComplate) {
        var _this = this;
        var cur = this._originX;
        var next = cur - Laya.stage.width;
        this.Sprite.x = next;
        Laya.Tween.to(this.Sprite, {
            rotation: 360,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this.Sprite.rotation = 0;
        }));
        Laya.Tween.to(this.Sprite, {
            x: cur,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this.Sprite.x = cur;
            if (null != onComplate) {
                onComplate();
            }
        }));
    };
    return KRQ_RollSingleAd;
}(KRQ_SingleAd_1.default));
exports.default = KRQ_RollSingleAd;
},{"./KRQ_SingleAd":19}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var KRQ_SingleAd = /** @class */ (function (_super) {
    __extends(KRQ_SingleAd, _super);
    function KRQ_SingleAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originW = 300;
        _this._originH = 300;
        return _this;
    }
    KRQ_SingleAd.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        this._display = this.Sprite.getChildByName("Display");
        this._text = this.Sprite.getChildByName("Text");
        this._text.overflow = Laya.Text.SCROLL;
        this._text.text = "";
    };
    KRQ_SingleAd.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_SingleAd.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_SingleAd.prototype.onStart = function () {
        this.autoScrollText(this._text);
        this.refresh();
    };
    KRQ_SingleAd.prototype.refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                if (self.Sprite && !self.Sprite.destroyed) {
                    for (var i = 0; i < self._datas.length; ++i) {
                        var find = false;
                        var data = self._datas[i];
                        for (var j = 0; j < KRQ_SingleAd._repeatCheckList.length; ++j) {
                            var appid = KRQ_SingleAd._repeatCheckList[j];
                            if (appid == data.appid) {
                                find = true;
                                break;
                            }
                        }
                        if (!find) {
                            self.clearRepeat();
                            self._data = data;
                            break;
                        }
                    }
                    if (null == self._data) {
                        self._data = self._datas[Math.floor(Math.random() * datas.length)];
                    }
                    if (null != self._data) {
                        self._display.loadImage(self._data.logo, Laya.Handler.create(self, function () {
                            if (null != self.Sprite && !self.Sprite.destroy) {
                                self.Sprite.visible = true;
                                if (onComplate) {
                                    onComplate();
                                }
                            }
                        }));
                        var str = self._data.title;
                        self._text.text = str;
                        var isHas = false;
                        for (var j = 0; j < KRQ_SingleAd._repeatCheckList.length; ++j) {
                            var appid = KRQ_SingleAd._repeatCheckList[j];
                            if (appid == self._data.appid) {
                                isHas = true;
                                break;
                            }
                        }
                        if (!isHas) {
                            KRQ_SingleAd._repeatCheckList.push(self._data.appid);
                        }
                    }
                    else {
                        if (null != self.Sprite && !self.Sprite.destroy) {
                            self.Sprite.visible = false;
                        }
                        if (onComplate) {
                            onComplate();
                        }
                    }
                }
            }
            else {
                self.Sprite.visible = false;
                if (onComplate) {
                    onComplate();
                }
            }
        });
    };
    KRQ_SingleAd.prototype.hide = function () {
        this.Sprite.visible = false;
        this.clearRepeat();
    };
    KRQ_SingleAd.prototype.clearRepeat = function () {
        if (null != this._data) {
            for (var i = 0; i < KRQ_SingleAd._repeatCheckList.length; ++i) {
                var appid = KRQ_SingleAd._repeatCheckList[i];
                if (appid == this._data.appid) {
                    KRQ_SingleAd._repeatCheckList.splice(i, 1);
                    break;
                }
            }
        }
    };
    KRQ_SingleAd.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
        this.refresh();
    };
    KRQ_SingleAd.prototype.onDestroy = function () {
        this.clearRepeat();
    };
    KRQ_SingleAd._repeatCheckList = new Array();
    return KRQ_SingleAd;
}(KRQ_ComBase_1.default));
exports.default = KRQ_SingleAd;
},{"../../ShareAd/ShareAd":40,"./KRQ_ComBase":10}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var Utilit_1 = require("../../Utilit");
var KRQ_History_1 = require("../Com/KRQ_History/KRQ_History");
var KRQ_Banner_1 = require("../Com/KRQ_Banner");
var KRQ_Export = /** @class */ (function (_super) {
    __extends(KRQ_Export, _super);
    function KRQ_Export() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onContinueBtnClick = null;
        _this._topZone = null;
        _this._backBtn = null;
        _this._centerZone = null;
        _this._continueBtn = null;
        _this._krqHistory = null;
        _this._krqBanner = null;
        return _this;
    }
    Object.defineProperty(KRQ_Export.prototype, "BackBtn", {
        get: function () {
            if (null == this._backBtn) {
                this._backBtn = this.Sprite.getChildByName("TopZone").getChildByName("BackBtn");
            }
            return this._backBtn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KRQ_Export.prototype, "ContinueBtn", {
        get: function () {
            if (null == this._continueBtn) {
                this._continueBtn = this.Sprite.getChildByName("CenterZone").getChildByName("ContinueBtn");
            }
            return this._continueBtn;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_Export.prototype.onAwake = function () {
        this._topZone = this.Sprite.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = this._topZone.top + 75;
        }
        this._backBtn = this._topZone.getChildByName("BackBtn");
        this._centerZone = this.Sprite.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._continueBtn = this._centerZone.getChildByName("ContinueBtn");
        this._krqHistory = this.owner.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        this._krqBanner = this.owner.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        var self = this;
        this._krqHistory.OnBackBtnClick = function () {
            self._krqBanner.show();
        };
    };
    KRQ_Export.prototype.onEnable = function () {
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    KRQ_Export.prototype.onDisable = function () {
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    KRQ_Export.prototype.onBackBtn = function () {
        this._krqHistory.show();
        this._krqBanner.hide();
    };
    KRQ_Export.prototype.onContinueBtn = function () {
        if (null != this.onContinueBtnClick) {
            this.onContinueBtnClick();
        }
    };
    return KRQ_Export;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_Export;
},{"../../Utilit":46,"../Com/KRQ_Banner":9,"../Com/KRQ_History/KRQ_History":12,"./KRQ_ViewComBase":25}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RockSingleAd_1 = require("../Com/KRQ_RockSingleAd");
var KRQ_Floating = /** @class */ (function (_super) {
    __extends(KRQ_Floating, _super);
    function KRQ_Floating() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._rockSingleAds = new Array();
        _this._aniSpaceing = 3000;
        return _this;
    }
    KRQ_Floating.prototype.onAwake = function () {
        this._centerZone = this.Sprite.getChildByName("CenterZone");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var child = this._centerZone.getChildAt(i);
            if (child.visible) {
                var rockAd = child.getComponent(KRQ_RockSingleAd_1.default);
                this._rockSingleAds.push(rockAd);
            }
        }
    };
    KRQ_Floating.prototype.onStart = function () {
        var self = this;
        self.playAni();
        Laya.timer.loop(this._rockSingleAds.length * (this._aniSpaceing + 500), this, function () {
            self.playAni(function () {
                self.refreshAd();
            });
        });
    };
    KRQ_Floating.prototype.refreshAd = function () {
        for (var i = 0; i < this._rockSingleAds.length; ++i) {
            var ad = this._rockSingleAds[i];
            if (null == ad.Data) {
                ad.Sprite.visible = false;
            }
            ad.refresh();
        }
    };
    KRQ_Floating.prototype.playAni = function (onComplate) {
        var len = this._rockSingleAds.length;
        var _loop_1 = function (i) {
            var index = i;
            var ad = this_1._rockSingleAds[index];
            Laya.timer.once(this_1._aniSpaceing * i, ad, function () {
                if (index == len - 1) {
                    ad.playAni(onComplate);
                }
                else {
                    ad.playAni();
                }
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rockSingleAds.length; ++i) {
            _loop_1(i);
        }
    };
    return KRQ_Floating;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_Floating;
},{"../Com/KRQ_RockSingleAd":17,"./KRQ_ViewComBase":25}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RollSingleAd_1 = require("../Com/KRQ_RollSingleAd");
var KRQ_GameOver = /** @class */ (function (_super) {
    __extends(KRQ_GameOver, _super);
    function KRQ_GameOver() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._rollSingleAds = new Array();
        return _this;
    }
    KRQ_GameOver.prototype.onAwake = function () {
        this._centerZone = this.Sprite.getChildByName("CenterZone");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var ad = this._centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            this._rollSingleAds.push(ad);
        }
    };
    KRQ_GameOver.prototype.onStart = function () {
        var _loop_1 = function (i) {
            var ad = this_1._rollSingleAds[i];
            Laya.timer.once((this_1._rollSingleAds.length - i) * 150, this_1, function () {
                ad.playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rollSingleAds.length; ++i) {
            _loop_1(i);
        }
    };
    return KRQ_GameOver;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_GameOver;
},{"../Com/KRQ_RollSingleAd":18,"./KRQ_ViewComBase":25}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("../Com/KRQ_Banner");
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_History_1 = require("../Com/KRQ_History/KRQ_History");
var KRQ_HLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_HLoopAd");
var Utilit_1 = require("../../Utilit");
var KRQ_MainState;
(function (KRQ_MainState) {
    KRQ_MainState[KRQ_MainState["Normal"] = 0] = "Normal";
    KRQ_MainState[KRQ_MainState["NoLoopAd"] = 1] = "NoLoopAd";
    KRQ_MainState[KRQ_MainState["NoBannerAd"] = 2] = "NoBannerAd";
})(KRQ_MainState = exports.KRQ_MainState || (exports.KRQ_MainState = {}));
var KRQ_Main = /** @class */ (function (_super) {
    __extends(KRQ_Main, _super);
    function KRQ_Main() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._topZone = null;
        _this._historyBtn = null;
        _this._krqLoopAd = null;
        _this._bottomZone = null;
        _this._krqBanner = null;
        _this._krqHistory = null;
        return _this;
    }
    KRQ_Main.prototype.onAwake = function () {
        this._topZone = this.Sprite.getChildByName("TopZone");
        this._historyBtn = this._topZone.getChildByName("HistoryBtn");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = this._topZone.top + 75;
        }
        this._krqLoopAd = this.Sprite.getChildByName("KRQ_HLoopAd").getComponent(KRQ_HLoopAd_1.default);
        this._krqBanner = this.Sprite.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        this._krqHistory = this.Sprite.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        this._krqHistory.OnBackBtnClick = function () {
            if (aspectRatio < 0.5) {
                self._krqBanner.show();
            }
        };
        this._krqLoopAd.Sprite.visible = false;
        if (aspectRatio < 0.5) {
            this._krqLoopAd.Clip.top = 100;
            if (Utilit_1.default.isIphoneX()) {
                this._krqLoopAd.Clip.top = this._krqLoopAd.Clip.top + 75;
            }
            this._krqBanner.Sprite.visible = true;
        }
        else {
            this._krqLoopAd.Clip.top = Laya.stage.height - 280;
            this._krqBanner.Sprite.visible = false;
        }
    };
    KRQ_Main.prototype.switchState = function (state) {
        if (state == KRQ_MainState.Normal) {
            var aspectRatio = Laya.stage.width / Laya.stage.height;
            if (aspectRatio < 0.5) {
                this._krqLoopAd.Clip.top = 100;
                if (Utilit_1.default.isIphoneX()) {
                    this._krqLoopAd.Clip.top = this._krqLoopAd.Clip.top + 75;
                }
                this._krqBanner.Sprite.visible = true;
            }
            else {
                this._krqLoopAd.Clip.top = Laya.stage.height - 280;
                this._krqBanner.Sprite.visible = false;
            }
        }
        else if (state == KRQ_MainState.NoLoopAd) {
            this._krqLoopAd.isEnable = false;
            this._krqLoopAd.Sprite.visible = false;
            this._krqBanner.Sprite.visible = true;
        }
        else if (state == KRQ_MainState.NoBannerAd) {
            this._krqLoopAd.Clip.top = Laya.stage.height - 280;
            this._krqBanner.AdPosID = -1;
            this._krqBanner.Sprite.visible = false;
        }
    };
    KRQ_Main.prototype.onEnable = function () {
        this._historyBtn.on(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    KRQ_Main.prototype.onDisable = function () {
        this._historyBtn.off(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    KRQ_Main.prototype.onHistoryBtn = function () {
        this._krqHistory.show();
        this._krqBanner.hide();
    };
    return KRQ_Main;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_Main;
},{"../../Utilit":46,"../Com/KRQ_Banner":9,"../Com/KRQ_History/KRQ_History":12,"../Com/KRQ_LoopAd/KRQ_HLoopAd":14,"./KRQ_ViewComBase":25}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_VLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_VLoopAd");
var KRQ_SidePull = /** @class */ (function (_super) {
    __extends(KRQ_SidePull, _super);
    function KRQ_SidePull() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krqVLoopAd = null;
        _this._pullBtn = null;
        return _this;
    }
    KRQ_SidePull.prototype.onAwake = function () {
        this._krqVLoopAd = this.Sprite.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._pullBtn = this._krqVLoopAd.Sprite.getChildByName("PullBtn");
        this._krqVLoopAd.Sprite.x = -this._krqVLoopAd.Sprite.width;
    };
    KRQ_SidePull.prototype.onEnable = function () {
        this._pullBtn.on(Laya.Event.CLICK, this, this.onPullBtn);
    };
    KRQ_SidePull.prototype.onDisable = function () {
        this._pullBtn.off(Laya.Event.CLICK, this, this.onPullBtn);
    };
    KRQ_SidePull.prototype.onPullBtn = function () {
        if (this._krqVLoopAd.Sprite.x < 0) {
            this.pull();
        }
        else {
            this.push();
        }
    };
    KRQ_SidePull.prototype.pull = function () {
        Laya.Tween.to(this._krqVLoopAd.Sprite, {
            x: 0
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    KRQ_SidePull.prototype.push = function () {
        Laya.Tween.to(this._krqVLoopAd.Sprite, {
            x: -this._krqVLoopAd.Sprite.width
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    KRQ_SidePull.prototype.onShareAdFail = function () {
        this.pull();
    };
    return KRQ_SidePull;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_SidePull;
},{"../Com/KRQ_LoopAd/KRQ_VLoopAd":16,"./KRQ_ViewComBase":25}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase = /** @class */ (function (_super) {
    __extends(KRQ_ViewComBase, _super);
    function KRQ_ViewComBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onShow = null;
        _this.onHide = null;
        return _this;
    }
    Object.defineProperty(KRQ_ViewComBase.prototype, "Sprite", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_ViewComBase.prototype.show = function () {
        this.Sprite.visible = true;
        if (null != this.onShow) {
            this.onShow();
        }
    };
    KRQ_ViewComBase.prototype.hide = function () {
        this.Sprite.visible = false;
        if (null != this.onHide) {
            this.onHide();
        }
    };
    return KRQ_ViewComBase;
}(Laya.Script));
exports.default = KRQ_ViewComBase;
},{}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var WXAPI_1 = require("../WXAPI");
var User_1 = require("../User/User");
var OPPOAPI_1 = require("../OPPOAPI");
/**
 * 用于买量上报,以及停留时间上报的的类，本质上是对wx和买量接口做一个集成化的封装方便使用
 *
 * @export
 * @class MaiLiang
 */
var MaiLiang = /** @class */ (function () {
    function MaiLiang() {
    }
    /**
     * 发送数据的类
     *
     * @protected
     * @static
     * @param {requestData} req
     * @memberof MaiLiang
     */
    MaiLiang.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = MaiLiang.mainUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "MaiLiang http Success");
            res = JSON.parse(res);
            if (res.Status == "200") {
                if (res.Result["OpenId"] != null && res.Result["OpenId"] != "") {
                    MaiLiang.MaiLiangOpenId = res.Result["OpenId"];
                    MaiLiang.time = req.data.posttime;
                    console.log("获得买量系统OpenId " + MaiLiang.MaiLiangOpenId);
                }
                else {
                    console.log("上报买量系统停留时间成功");
                }
                if (req.onSuccess) {
                    req.onSuccess(res);
                }
            }
            else {
                if (req.onFail) {
                    req.onFail(res);
                }
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "MaiLiang http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            xhr.send(req.url, null, req.meth);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            xhr.send(req.url, para, req.meth, null, ["Content-Type", "application/x-www-form-urlencoded"]);
        }
    };
    /**
     * 获得买量系统唯一标识ID,此ID的作用是用来上报游戏时间
     *
     * @param {Function} res
     * @memberof MaiLiang
     */
    MaiLiang.GetMaiLiangOpenId = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            var option = WXAPI_1.default.getLaunchOptionsSync();
            if (option != null) {
                var key = option.query["key"];
                if (key != null && key != "" && User_1.default.openId != "") {
                    MaiLiang.key = key;
                    var req = new HttpUnit_1.requestData();
                    req.url = MaiLiang.uclick;
                    req.onSuccess = onSuccess;
                    req.onFail = onFail;
                    req.data.appid = AppConfig_1.default.AppID;
                    req.data.openid = "";
                    var time = new Date().getTime() / 1000;
                    req.data.posttime = time;
                    req.data.auth = 0;
                    req.data.key = key;
                    req.data.wxopenid = User_1.default.openId;
                    req.meth = "POST";
                    console.log("发送买量数据接口");
                    MaiLiang.request(req);
                }
            }
            else {
                console.log("上报买量数据失败");
                onFail(null);
            }
        }
        else if (Laya.Browser.onQGMiniGame) {
            var option = OPPOAPI_1.default.getLaunchOptionsSync();
            HttpUnit_1.default.reportImport(option.referrerInfo.package, option.referrerInfo.extraData.appid, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 上报买量数据成功");
                }
                else {
                    console.log("OPPO 上报买量数据失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 上报买量数据失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
        }
        else {
            console.log("不在微信模式下调用，默认上报买量数据失败");
            onFail(null);
        }
    };
    /**
     * 上报买量接口停留时间
     *
        appid －主体小程序appid
        openid －买量系统唯一标识（不可空）
        posttime － 请求时间刻度（精确到秒）
        time － 停留时长（精确到秒）
     * @static
     * @memberof MaiLiang
     */
    MaiLiang.ReportStayTime = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            if (MaiLiang.MaiLiangOpenId != "") {
                var req = new HttpUnit_1.requestData();
                req.url = MaiLiang.stay;
                req.onSuccess = onSuccess;
                req.onFail = onFail;
                req.data.appid = AppConfig_1.default.AppID;
                req.data.openid = MaiLiang.MaiLiangOpenId;
                var time = new Date().getTime() / 1000;
                req.data.posttime = time;
                var staytime = MaiLiang.time != 0 ? time - MaiLiang.time : 0;
                req.data.time = staytime;
                req.meth = "POST";
                console.log("发送停留时间至买量接口");
                MaiLiang.request(req);
            }
        }
        else {
            console.log("不在微信模式下调用，默认发送停留时间至买量接口失败");
            onFail(null);
        }
    };
    MaiLiang.mainUrl = "https://swtj.mrkzx.cn";
    MaiLiang.uclick = "/v1.1/api/Activity/uclick.html";
    MaiLiang.stay = "/v1.1/api/Activity/stay.html";
    MaiLiang.key = ""; //推广路径中同名参数，需要调用方法WXAPi.getLaunchOptionsSync()，从返回的参数中获得。
    MaiLiang.MaiLiangOpenId = ""; //买量系统唯一标识,执行GetMaiLiangOpenId()方法成功后自动获得。
    MaiLiang.time = 0; //买量系统唯一标识后，记录当前时间（精确到秒）。
    return MaiLiang;
}());
exports.default = MaiLiang;
},{"../AppConfig":2,"../Net/HttpUnit":35,"../OPPOAPI":38,"../User/User":45,"../WXAPI":77}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var HttpUnit_1 = require("./Net/HttpUnit");
var WXAPI_1 = require("./WXAPI");
var AppConfig_1 = require("./AppConfig");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./OPPOAPI");
var QQMiniGameAPI_1 = require("./QQMiniGameAPI");
var TTAPI_1 = require("./TTAPI");
var ALD_1 = require("./ALD");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (true == AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.onMiniGame = false;
        }
        if (!Laya.Browser.onMiniGame
            && !Laya.Browser.onQGMiniGame
            && !Laya.Browser.onQQMiniGame
            && !AppConfig_1.default.onTTMiniGame) //如果不是小游戏，资源服务器设置为本地测试地址
         {
            AppConfig_1.default.ResServer = AppConfig_1.default.LocalTestReServer;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        var firstConfigs = [
            { url: AppConfig_1.default.ResServer + "/json/appswitch.json", type: Laya.Loader.JSON }
        ];
        var self = this;
        Laya.loader.load(firstConfigs, Laya.Handler.create(this, function () {
            self.loadRes(); //加载资源
        }));
        EventMgr_1.default.instance.regOnceEvent(EventDef_1.EventDef.App_CloseFirstLoadingView, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this._loadingUI);
        this._loadingUI.width = Laya.stage.width;
        this._loadingUI.height = Laya.stage.height;
        this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        this._loadingView.setProcess(0);
    };
    Main.prototype.postResToOpenDataContext = function (onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("开始透传资源数据到开放域");
            Laya.loader.load([
                "openRes/Rank.atlas",
            ], Laya.Handler.create(null, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
                console.log("透传资源数据到开放域  完毕！！！");
                if (onComplate) {
                    onComplate();
                }
            }));
        }
        else {
            if (onComplate) {
                onComplate();
            }
        }
    };
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        //this._preLoadRes.push({ url: AppConfig.ResServer + "/json/example.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
        if (Laya.Browser.onMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["wx"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        // self.onLoadResComplate();//预加载完成
                        var loadSubResTask = Laya.Browser.window["wx"].loadSubpackage({
                            name: 'subRes1',
                            success: function (res) {
                                // 分包加载成功,开始预加载资源
                                if (resource.length > 0) {
                                    Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                                        self.onLoadResComplate(); //预加载完成
                                    }), Laya.Handler.create(_this, function (res) {
                                        //todo:跟新进度条
                                        self._loadingView.setProcess(res / 2 + 0.5);
                                    }));
                                }
                                else {
                                    self.onLoadResComplate(); //预加载完成
                                }
                            },
                            fail: function (res) {
                                _this.loadRes(); //加载失败，重新加载
                            }
                        });
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qg"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                // 加载进度百分比
                var progress = res["progress"];
                // 下载数据
                var totalBytesWritten = res["totalBytesWritten"];
                // 总长度
                var totalBytesExpectedToWrite = res["totalBytesExpectedToWrite"];
                self._loadingView.setProcess(progress / 2);
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qq"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else { //字节跳动没有分包
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    self._loadingView.setProcess(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
        }
    };
    Main.prototype.onLoadResComplate = function () {
        var _this = this;
        var self = this;
        this._loadingView.setProcess(1);
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default.wxLogin(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        ALD_1.default.aldSendOpenId(User_1.default.openId);
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            OPPOAPI_1.default.initAdService(function () {
            }, function () {
            }, function () {
            });
            OPPOAPI_1.default.Login(function (token) {
                var _this = this;
                User_1.default.code = token;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                                console.log("获取用户数据--------------------Start");
                                for (var key in res.data) {
                                    console.log(key, res.data[key]);
                                }
                                console.log("获取用户数据--------------------End");
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！", res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！", res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            QQMiniGameAPI_1.default.Login(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        ALD_1.default.aldSendOpenId(User_1.default.openId);
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (AppConfig_1.default.onTTMiniGame) //头条，字节跳动
         {
            TTAPI_1.default.ttLogin(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, function () {
                User_1.default.initiUser(null);
                GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                }));
            });
        }
        else {
            User_1.default.testInitUser(); //测试
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./ALD":1,"./AppConfig":2,"./Event/EventDef":6,"./Event/EventMgr":7,"./GameConfig":8,"./Net/HttpUnit":35,"./OPPOAPI":38,"./QQMiniGameAPI":39,"./TTAPI":44,"./User/User":45,"./View/LoadingView/LoadingView":51,"./WXAPI":77,"./ui/layaMaxUI":84}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var User_1 = require("../User/User");
var HttpUnit_1 = require("../Net/HttpUnit");
var MaiLiang_1 = require("../MaiLiangAPI/MaiLiang");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../WXAPI");
var WudianMgr_1 = require("./WudianMgr");
var CachedWXBannerAd_1 = require("../CachedWXBannerAd");
var ALD_1 = require("../ALD");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var WXADMgr_1 = require("./WXADMgr");
var CachedQQBannerAd_1 = require("../CachedQQBannerAd");
var GameManager_1 = require("../game/GameManager");
var StorageMgr_1 = require("./StorageMgr");
var DistanceManager_1 = require("../game/Animator/DistanceManager");
//游戏管理器，游戏代码的入口
var GameMgr = /** @class */ (function (_super) {
    __extends(GameMgr, _super);
    function GameMgr() {
        var _this = _super.call(this) || this;
        _this.Scene3d = null;
        GameMgr._instance = _this;
        return _this;
    }
    GameMgr.getInstance = function () { return GameMgr._instance; };
    GameMgr.prototype.onAwake = function () {
        MaiLiang_1.default.GetMaiLiangOpenId(function (res) {
            console.log("GameUI 买量数据上报成功");
            Laya.Browser.window["wx"].onShow(function () {
                MaiLiang_1.default.GetMaiLiangOpenId(null, null);
            });
            Laya.Browser.window["wx"].onHide(function () {
                MaiLiang_1.default.ReportStayTime(null, null);
            });
        }, function (res) {
            console.log("GameUI 买量数据上报失败");
        });
        WXAPI_1.default.SetShareMenu("", "", function () {
        }, function () {
        }, function () {
        });
        WudianMgr_1.default.UpdateIpBlockState();
        this.reportLaunchOptions();
        if (Laya.Browser.onMiniGame) {
            CachedWXBannerAd_1.default.preloadBanner();
            WXADMgr_1.default.init();
        }
        else if (Laya.Browser.onQQMiniGame) {
            CachedQQBannerAd_1.default.preloadBanner();
        }
        else if (Laya.Browser.onQGMiniGame) {
            if (null != Laya.Browser.window["qg"].reportMonitor && typeof (Laya.Browser.window["qg"].reportMonitor) == 'function') {
                Laya.Browser.window["qg"].reportMonitor('game_scene', 0);
            }
        }
    };
    GameMgr.prototype.onStart = function () {
        this.preCreateGame();
        var basePath = "subRes1/LayaScene_DemoScene/Conventional";
        Laya.URL.customFormat = function (url) {
            // console.log("----------------------------- url:", url);
            if (url.indexOf(".lh") == -1 && url.indexOf(basePath) > -1) {
                url = url.replace(basePath, "subRes/LayaScene_DemoScene/Conventional");
                // console.log("----------------------------- url111:", url);
                return url;
            }
            return url;
        };
    };
    GameMgr.prototype.preCreateGame = function () {
        //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        Laya.Scene3D.load("subRes/LayaScene_DemoScene/Conventional/DemoScene.ls", Laya.Handler.create(this, function (scene) {
            var _this = this;
            console.log("--------------------------------- 加载3D场景");
            //加载完成获取到了Scene3d
            this.Scene3d = scene;
            var Level = StorageMgr_1.default.getNowLevel();
            var SceneNum = 2;
            if (Level > DistanceManager_1.DistanceManager.MaxLevel) {
                Level = Math.floor(Math.random() * DistanceManager_1.DistanceManager.MaxLevel) + 1;
            }
            var urls = [
                "subRes1/LayaScene_DemoScene/Conventional/Level" + Level + ".lh",
                "subRes1/LayaScene_DemoScene/Conventional/Scene" + SceneNum + ".lh"
            ];
            this.LoadGamePrefab(urls, this, function () {
                Laya.stage.addChild(_this.Scene3d);
                scene.addComponent(GameManager_1.default);
                ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MainView);
                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.App_CloseFirstLoadingView);
            });
        }));
        // Laya.MiniAdpter.autoCacheFile = true;
    };
    GameMgr.prototype.LoadGamePrefab = function (urls, caller, complete) {
        var loadFinishCount = 0;
        var prepareLoadPrefabs = [].concat(urls);
        function LoadPrefabs() {
            var _this = this;
            if (prepareLoadPrefabs.length == 0) {
                complete && complete.call(caller);
                return;
            }
            var url = prepareLoadPrefabs.shift();
            Laya.Sprite3D.load(url, Laya.Handler.create(this, function (prefab) {
                var name = Laya.URL.getFileName(url);
                // this.Prefabs[name.split(".")[0]] = prefab;
                var AddChildNodeArr = StorageMgr_1.default.getAddChildNodeArr();
                var prefabNode = prefab;
                prefabNode.transform.position = new Laya.Vector3(0, 0, 0);
                for (var i = 0; i < prefabNode.numChildren; i++) {
                    var prefabChildNode = prefabNode.getChildAt(i);
                    var ChildNode = Laya.Sprite3D.instantiate(prefabChildNode, null, false);
                    AddChildNodeArr.push(ChildNode);
                }
                // console.log("------------------------------------- name:", name);
                // console.log("------------------------------------- prefab:", prefab);
                // console.log("------------------------------------- AddChildNodeArr:", AddChildNodeArr);
                for (var i = 0; i < AddChildNodeArr.length; i++) {
                    var AddChildNode = AddChildNodeArr[i];
                    _this.Scene3d.addChild(AddChildNode);
                }
                StorageMgr_1.default.setAddChildNodeArr(AddChildNodeArr);
                LoadPrefabs.call(_this);
            }));
        }
        LoadPrefabs.call(this);
    };
    //游戏存档,仅当作示例，实际存档根据实际项目各自实现
    GameMgr.prototype.saveGameData = function () {
        HttpUnit_1.default.saveGameData(User_1.default.getSaveData(), function (res) {
            if (res.code == 1) {
                console.log("存档成功");
            }
            else {
                console.log("存档失败");
            }
        }, function (res) {
            console.log("存档失败");
        });
    };
    GameMgr.prototype.reportLaunchOptions = function () {
        HttpUnit_1.default.Getuserip(function (res) {
            if (1 == res.code) {
                console.log("获取玩家ip,地区成功 ：", res.data.dqip, res.data.ipxq);
                var opt = null;
                if (Laya.Browser.onMiniGame) {
                    opt = WXAPI_1.default.getLaunchOptionsSync();
                }
                else if (Laya.Browser.onQQMiniGame) {
                    opt = QQMiniGameAPI_1.default.getLaunchOptionsSync();
                }
                if (null != opt) {
                    ALD_1.default.aldSendReportLaunchOptions(opt.scene, res.data.dqip, res.data.ipxq);
                }
            }
        }, function (res) {
            console.log("获取玩家ip,地区失败");
            var opt = null;
            if (Laya.Browser.onMiniGame) {
                opt = WXAPI_1.default.getLaunchOptionsSync();
            }
            else if (Laya.Browser.onQQMiniGame) {
                opt = QQMiniGameAPI_1.default.getLaunchOptionsSync();
            }
            if (null != opt) {
                ALD_1.default.aldSendReportLaunchOptions(opt.scene, "", "");
            }
        });
    };
    GameMgr._instance = null;
    return GameMgr;
}(Laya.Script));
exports.default = GameMgr;
},{"../ALD":1,"../CachedQQBannerAd":3,"../CachedWXBannerAd":4,"../Event/EventDef":6,"../Event/EventMgr":7,"../MaiLiangAPI/MaiLiang":26,"../Net/HttpUnit":35,"../QQMiniGameAPI":39,"../User/User":45,"../WXAPI":77,"../game/Animator/DistanceManager":79,"../game/GameManager":82,"./StorageMgr":30,"./ViewMgr":31,"./WXADMgr":32,"./WudianMgr":33}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr = /** @class */ (function () {
    function SoundMgr() {
        this._enabled = true;
    }
    Object.defineProperty(SoundMgr.prototype, "Enabled", {
        get: function () {
            return this._enabled;
        },
        set: function (e) {
            if (!e) {
                this.stopBGM();
            }
            this._enabled = e;
        },
        enumerable: true,
        configurable: true
    });
    SoundMgr.prototype.getSoundUrl = function (name) {
        var url = SoundMgr.soundResPath + name + ".mp3";
        return url;
    };
    SoundMgr.prototype.playSound = function (name) {
        if (!this._enabled)
            return;
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = SoundMgr.soundResPath + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    SoundMgr.prototype.playBGM = function (name) {
        if (!this._enabled)
            return;
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.bgm) {
                this.bgm = wx.createInnerAudioContext();
            }
            this.bgm.pause();
            this.bgm.src = url;
            this.bgm.loop = true;
            this.bgm.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    SoundMgr.prototype.stopBGM = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.pause();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    SoundMgr.soundResPath = "subRes/sound/";
    SoundMgr.instance = new SoundMgr();
    return SoundMgr;
}());
exports.default = SoundMgr;
},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StorageReq = /** @class */ (function () {
    function StorageReq() {
        this.key = null;
        this.data = {};
        this.success = null;
        this.fail = null;
        this.complete = null;
    }
    return StorageReq;
}());
exports.StorageReq = StorageReq;
//数据本地持久化保存
var StorageMgr = /** @class */ (function () {
    function StorageMgr() {
    }
    StorageMgr.setStorage = function (req) {
        var dataStr = JSON.stringify(req.data);
        if (!Laya.Browser.onMiniGame) {
            localStorage.setItem(req.key, dataStr);
            return;
        }
        wx.setStorage({
            key: req.key,
            data: dataStr,
            success: req.success,
            fail: req.fail,
            complete: req.complete
        });
    };
    StorageMgr.getStorage = function (key, defaultValue) {
        var value = null;
        try {
            if (!Laya.Browser.onMiniGame) {
                value = localStorage.getItem(key);
            }
            else {
                value = wx.getStorageSync(key);
            }
        }
        catch (e) {
        }
        if (!value) {
            return defaultValue;
        }
        return value;
    };
    //设置当前添加的节点
    StorageMgr.setAddChildNodeArr = function (AddChildNodeArr) {
        this.AddChildNodeArr = AddChildNodeArr;
    };
    StorageMgr.getAddChildNodeArr = function () {
        return this.AddChildNodeArr;
    };
    //保存当前关卡
    StorageMgr.setNowLevel = function (NowLevel) {
        var req = new StorageReq();
        req.key = "NowLevel";
        req.data = NowLevel;
        this.setStorage(req);
    };
    StorageMgr.getNowLevel = function () {
        var NowLevel = this.getStorage("NowLevel", 1);
        return Number(NowLevel);
    };
    StorageMgr.AddChildNodeArr = [];
    return StorageMgr;
}());
exports.default = StorageMgr;
},{}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewDef;
(function (ViewDef) {
    ViewDef["None"] = "";
    ViewDef["TipsView"] = "View/TipsView.json";
    ViewDef["ClickGetPrize"] = "View/ClickGetPrize.json";
    ViewDef["MainView"] = "View/Template/MainViewTemplate.json";
    ViewDef["MiniGameView"] = "View/Template/MiniGameViewTemplate.json";
    ViewDef["RewardView"] = "View/Template/RewardViewTemplate.json";
    ViewDef["InGameView"] = "View/Template/InGameViewTemplate.json";
    ViewDef["GameWinView"] = "View/Template/GameWinViewTemplate.json";
    ViewDef["GameFailView"] = "View/Template/GameFailViewTemplate.json";
    ViewDef["ExportView"] = "View/Template/ExportViewTemplate.json";
    ViewDef["Export2View"] = "View/Template/Export2ViewTemplate.json";
    ViewDef["OPPONativeView"] = "View/Template/OPPONativeViewTemplate.json";
    ViewDef["QQCrazyClickView"] = "View/Template/QQ/QQCrazyClick.json";
    ViewDef["QQCrazyClickView2"] = "View/Template/QQ/QQCrazyClick2.json";
    //todo:添加你的界面
})(ViewDef = exports.ViewDef || (exports.ViewDef = {}));
//界面管理器
var ViewMgr = /** @class */ (function () {
    function ViewMgr() {
        this._views = {};
        this._loadingList = new Array();
    }
    ViewMgr.prototype.openView = function (viewType, data, oncomplate) {
        if (this._views[viewType]) {
            var view = this._views[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        for (var i = 0; i < this._loadingList.length; ++i) {
            var def = this._loadingList[i];
            if (def == viewType) {
                console.log("界面 : " + String(def) + " 正在加载中，请不要重复加载");
                return;
            }
        }
        var viewUrl = String(viewType);
        var self = this;
        this._loadingList.push(viewType);
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self._views[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            for (var i = 0; i < self._loadingList.length; ++i) {
                var def = self._loadingList[i];
                if (def == viewType) {
                    self._loadingList.splice(i, 1);
                    break;
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    ViewMgr.prototype.closeView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this._views[viewType] = null;
        }
    };
    ViewMgr.prototype.ShowView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.hideView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.getView = function (viewType) {
        return this._views[viewType];
    };
    ViewMgr.prototype.showTips = function (msg) {
        this.openView(ViewDef.TipsView, msg);
    };
    ViewMgr.instance = new ViewMgr();
    return ViewMgr;
}());
exports.default = ViewMgr;
},{}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXBannderAd = /** @class */ (function () {
    function WXBannderAd(bannerid) {
        this._id = null;
        this._banner = null;
        this._createTime = 0;
        this._destroyed = false;
        this._error = null;
        this._loading = false;
        this._retryCount = 0;
        this._bannerTotalShowTime = 0;
        this._lastShowTime = 0;
        this._id = bannerid;
    }
    Object.defineProperty(WXBannderAd.prototype, "Id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "CreateTime", {
        get: function () {
            return this._createTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "Destroyed", {
        get: function () {
            return this._destroyed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "isReady", {
        get: function () {
            return null != this._banner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "isError", {
        get: function () {
            return null != this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "Error", {
        get: function () {
            return this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "Loading", {
        get: function () {
            return this._loading;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "RetryCount", {
        get: function () {
            return this._retryCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "BannerTotalShowTime", {
        get: function () {
            return this._bannerTotalShowTime;
        },
        enumerable: true,
        configurable: true
    });
    WXBannderAd.prototype.show = function () {
        if (this.isReady) {
            this._banner.hide();
            var self_1 = this;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var pos = new Laya.Point(0, 0);
            var width = 300;
            var left = sw / 2 - width / 2;
            var top_1 = sh - 130;
            this._banner.style.left = left;
            this._banner.style.top = top_1;
            this._lastShowTime = Laya.timer.currTimer;
            this._banner.show();
        }
    };
    WXBannderAd.prototype.hide = function () {
        if (this.isReady) {
            this._banner.hide();
            this._bannerTotalShowTime += (Laya.timer.currTimer - this._lastShowTime);
        }
    };
    WXBannderAd.prototype.destroy = function () {
        if (this._destroyed) {
            console.log("BannerAd 已经被销毁");
            return;
        }
        if (this._loading) {
            console.log("BannerAd 正在加载中，无法进行销毁");
            return;
        }
        if (null != this._banner) {
            this._banner.destroy();
        }
        this._banner = null;
        this._destroyed = true;
    };
    WXBannderAd.prototype.retry = function (callBack) {
        if (this._destroyed) {
            console.log("BannerAd 已被销毁，无法重试");
            return;
        }
        if (this.isReady) {
            console.log("BannerAd 已创建成功，无需重试");
            return;
        }
        if (this._loading) {
            console.log("BannerAd 正在创建中");
            return;
        }
        if (this._retryCount >= WXBannderAd.MAX_RETRY_COUNT) {
            console.log("此 BannerAd 重试次数已达最大");
            return;
        }
        var self = this;
        this._create(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
            ++self._retryCount;
        });
    };
    WXBannderAd.prototype._create = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var banner = null;
        if (Laya.Browser.onMiniGame) {
            banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: this._id,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            banner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: this._id,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        if (null != banner) {
            var self_2 = this;
            this._loading = true;
            banner.onLoad(function (res) {
                console.log("BannderAd 加载完成", self_2._id, res);
                self_2._banner = banner;
                self_2._createTime = Laya.timer.currTimer;
                self_2._loading = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            banner.onError(function (err) {
                console.log("BannderAd 加载失败", self_2._id, err);
                self_2._error = err;
                self_2._loading = false;
                banner.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    WXBannderAd.MAX_RETRY_COUNT = 3;
    return WXBannderAd;
}());
exports.WXBannderAd = WXBannderAd;
var WXGridAd = /** @class */ (function () {
    function WXGridAd(bannerid) {
        this._id = null;
        this._gridAd = null;
        this._createTime = 0;
        this._destroyed = false;
        this._error = null;
        this._loading = false;
        this._id = bannerid;
    }
    Object.defineProperty(WXGridAd.prototype, "CreateTime", {
        get: function () {
            return this._createTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "Destroyed", {
        get: function () {
            return this._destroyed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "isReady", {
        get: function () {
            return null != this._gridAd;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "isError", {
        get: function () {
            return null != this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "Error", {
        get: function () {
            return this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "Loading", {
        get: function () {
            return this._loading;
        },
        enumerable: true,
        configurable: true
    });
    WXGridAd.prototype.show = function () {
        if (this.isReady) {
            this._gridAd.show();
        }
    };
    WXGridAd.prototype.hide = function () {
        if (this.isReady) {
            this._gridAd.hide();
        }
    };
    WXGridAd.prototype.destroy = function () {
        if (this._destroyed) {
            console.log("GridAD 已经被销毁");
            return;
        }
        if (this._loading) {
            console.log("GridAD 正在加载中，无法进行销毁");
            return;
        }
        if (null != this._gridAd) {
            this._gridAd.destroy();
        }
        this._gridAd = null;
        this._destroyed = true;
    };
    WXGridAd.prototype.retry = function (callBack) {
        if (this._destroyed) {
            console.log("GridAD 已被销毁，无法重试");
            return;
        }
        if (this.isReady) {
            console.log("GridAD 已创建成功，无需重试");
            return;
        }
        if (this._loading) {
            console.log("GridAD 正在创建中");
            return;
        }
        var self = this;
        this._create(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
        });
    };
    WXGridAd.prototype._create = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var gridAd = Laya.Browser.window["wx"].createGridAd({
            adUnitId: this._id,
            adIntervals: 30,
            style: {
                left: 0,
                top: 0,
                width: 300,
                height: 150,
            }
        });
        if (null != gridAd) {
            var self_3 = this;
            this._loading = true;
            gridAd.onLoad(function (res) {
                console.log("GridAD 加载完成", self_3._id, res);
                self_3._gridAd = gridAd;
                self_3._createTime = Laya.timer.currTimer;
                self_3._loading = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            gridAd.onError(function (err) {
                console.log("GridAD 加载失败", self_3._id, err);
                self_3._error = err;
                self_3._loading = false;
                gridAd.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    return WXGridAd;
}());
exports.WXGridAd = WXGridAd;
var WXADMgr = /** @class */ (function () {
    function WXADMgr() {
    }
    WXADMgr.init = function () {
        if (WXADMgr._inited)
            return;
        var banners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        for (var i = 0; i < banners.length; ++i) {
            WXADMgr._bannerIds.push(banners[i]);
        }
        for (var i = 0; i < WXADMgr._bannerIds.length; ++i) {
            var cur = WXADMgr._bannerIds[i];
            WXADMgr._bannerIds[i] = banners[Math.floor(Math.random() * banners.length)];
        }
        WXADMgr._createBannerAd();
        var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerCreateFailNum * 1000;
        Laya.timer.loop(bannerRecreateTime, WXADMgr, function () {
            WXADMgr._checkBannerAd();
            WXADMgr._createBannerAd();
        });
        //WXADMgr._createGirdAd();
        WXADMgr._inited = true;
    };
    WXADMgr.getBanner = function (callBack) {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < WXADMgr._banners.length; ++i) {
            var bannerAd_1 = WXADMgr._banners[i];
            if (!bannerAd_1.Destroyed) {
                if (bannerAd_1.isReady) {
                    readyBannerAd.push(bannerAd_1);
                }
                else {
                    UnreadyBannerAd.push(bannerAd_1);
                }
            }
        }
        if (WXADMgr._curBannerGetIndex >= readyBannerAd.length) {
            WXADMgr._curBannerGetIndex = 0;
        }
        var bannerAd = readyBannerAd[WXADMgr._curBannerGetIndex];
        ++WXADMgr._curBannerGetIndex;
        if (null != bannerAd) {
            callBack(bannerAd);
        }
        else {
            bannerAd = WXADMgr._createBannerAd();
            if (null == bannerAd) {
                bannerAd = WXADMgr._banners[Math.floor(Math.random() * WXADMgr._banners.length)];
            }
            if (null == bannerAd) {
                callBack(null);
            }
            else {
                bannerAd.retry(function (ok) {
                    if (ok) {
                        callBack(bannerAd);
                    }
                    else {
                        callBack(null);
                    }
                });
            }
        }
    };
    WXADMgr._createBannerAd = function () {
        if (WXADMgr._curBannerCreateIndex >= WXADMgr._bannerIds.length)
            return null;
        var bannerAd = new WXBannderAd(WXADMgr._bannerIds[WXADMgr._curBannerCreateIndex]);
        WXADMgr._banners.push(bannerAd);
        bannerAd.retry();
        ++WXADMgr._curBannerCreateIndex;
        return bannerAd;
    };
    WXADMgr._checkBannerAd = function () {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < WXADMgr._banners.length; ++i) {
            var bannerAd = WXADMgr._banners[i];
            if (!bannerAd.Destroyed) {
                if (bannerAd.isReady) {
                    readyBannerAd.push(bannerAd);
                }
                else {
                    UnreadyBannerAd.push(bannerAd);
                }
            }
        }
        for (var i = 0; i < WXADMgr._banners.length; ++i) {
            var bannerAd = WXADMgr._banners[i];
            var bannerShowTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerShowTime;
            if (!bannerAd.isReady) {
                if (bannerAd.RetryCount >= WXBannderAd.MAX_RETRY_COUNT) {
                    console.log("BannerAd 超过重试次数，销毁 : ", bannerAd.Id);
                    bannerAd.destroy();
                }
                else {
                    bannerAd.retry();
                }
            }
            else if (readyBannerAd.length >= 2 && bannerAd.BannerTotalShowTime >= bannerShowTime * 1000) {
                console.log("BannerAd 展示时间超过限制，销毁 : ", bannerAd.Id);
                bannerAd.destroy();
            }
        }
    };
    WXADMgr.getBoxAd = function (callBack) {
        if (this._wxGridAd.isReady) {
            callBack(this._wxGridAd);
        }
        else {
            var gridAd_1 = this._wxGridAd;
            gridAd_1.retry(function (isOk) {
                if (isOk) {
                    callBack(gridAd_1);
                }
                else {
                    callBack(null);
                }
            });
        }
    };
    WXADMgr._createGirdAd = function () {
        if (null != this._wxGridAd)
            return;
        var gridAd = new WXGridAd("");
        gridAd.retry();
        this._wxGridAd = gridAd;
    };
    WXADMgr._inited = false;
    WXADMgr._bannerIds = new Array();
    WXADMgr._banners = new Array();
    WXADMgr._curBannerCreateIndex = 0;
    WXADMgr._curBannerGetIndex = 0;
    WXADMgr._wxGridAd = null;
    return WXADMgr;
}());
exports.default = WXADMgr;
},{"../Config/AppSwitchConfig":5}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXAPI_1 = require("../WXAPI");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var WudianMgr = /** @class */ (function () {
    function WudianMgr() {
    }
    WudianMgr.IpBlockFlag = function () {
        return this._ipBlockFlag;
    };
    /**
     * 此方法调用很慢，所以要在游戏初始化的时候调用一次此方法
     *
     * @static
     * @memberof WudianMgr
     */
    WudianMgr.UpdateIpBlockState = function () {
        HttpUnit_1.default.GetIpBlock(function (res) {
            console.log("调用IpBlock接口成功,结果为:", res);
            WudianMgr._ipBlockFlag = res.code;
        }, null);
    };
    /**
     * IP是否被屏蔽
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    WudianMgr.GetIpBlocked = function () {
        return this._ipBlockFlag == 0;
    };
    /**
     * 得到用户进入的场景值
     *
     * @static
     * @returns {number}
     * @memberof WudianMgr
     */
    WudianMgr.GetEntryScene = function () {
        return WXAPI_1.default.getLaunchOptionsSync().scene == 1006;
    };
    /**
     * 误点开关是否打开，包括了总开关和分时开关
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    WudianMgr.IsSwitchOpen = function () {
        var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
        var isOpenTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianTimeAvaliable;
        console.log("误点Flag状态: ", "总开关:", mainSwitch, "打开时间", isOpenTime);
        return mainSwitch && isOpenTime;
    };
    Object.defineProperty(WudianMgr, "WudianFlag", {
        /**
         * 完全封装好的误点Flag
         *
         * @readonly
         * @static
         * @type {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
            var launchScene = null;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.getLaunchOptionsSync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var isOpenTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianTimeAvaliable;
            var ipnotBlock = this._ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽", ipnotBlock, "打开时间", isOpenTime);
            return mainSwitch && noEnterBySearch && ipnotBlock && isOpenTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "NoTimeWudianFlag", {
        /**
         * 没有涉及到定时开关的wudianFlag,自行整合按照时间开关的效果
         *
         * @static
         * @returns {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
            var launchScene = null;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.getLaunchOptionsSync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var ipnotBlock = this._ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽");
            return mainSwitch && noEnterBySearch && ipnotBlock;
        },
        enumerable: true,
        configurable: true
    });
    WudianMgr._ipBlockFlag = -1;
    return WudianMgr;
}());
exports.default = WudianMgr;
},{"../Config/AppSwitchConfig":5,"../Net/HttpUnit":35,"../QQMiniGameAPI":39,"../WXAPI":77}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var AesTools = /** @class */ (function () {
    function AesTools() {
    }
    //加密
    AesTools.encrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    AesTools.decrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    AesTools.KEY = 'b#63fFJ6AvkK3YT*';
    AesTools.IV = 'J$f4DU%sNL73M&Go';
    return AesTools;
}());
exports.default = AesTools;
},{"./aes.js":37}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var AppConfig_1 = require("../AppConfig");
var requestData = /** @class */ (function () {
    function requestData() {
        this.meth = "post";
        this.url = "";
        this.onSuccess = null;
        this.onFail = null;
        this.data = {};
    }
    return requestData;
}());
exports.requestData = requestData;
var HttpUnit = /** @class */ (function () {
    function HttpUnit() {
    }
    HttpUnit.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = NetConfig_1.default.serverUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        var dataStr = JSON.stringify(req.data);
        if (Laya.Browser.onMiniGame || AppConfig_1.default.onTTMiniGame) {
            req.data.code = User_1.default.code;
        }
        else if (Laya.Browser.onQGMiniGame) //OPPO小游戏
         {
            req.data.oppotoken = User_1.default.code;
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            req.data.code = User_1.default.code;
        }
        else {
            req.data.code = User_1.default.code;
        }
        var time = "time=" + String(Date.now());
        var header = [
            "Content-Type", "application/json",
            "state", NetConfig_1.default.state,
            "gameid", NetConfig_1.default.gameid,
            "sign", AesTools_1.default.encrypt(time),
        ];
        if (User_1.default.token) {
            header.push("token");
            header.push(User_1.default.token);
        }
        xhr.send(req.url, JSON.stringify(req.data), req.meth, "json", header);
    };
    //todo:这里添加你们和服务器相互的接口
    HttpUnit.login = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.Login;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.saveGameData = function (gameData, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.SaveGameData;
        req.data.gameData = gameData;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.getGameData = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.GetUser;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    HttpUnit.GetIpBlock = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.gameid) {
            var req = new requestData();
            req.url = NetConfig_1.default.IpBlock;
            req.onSuccess = onSuccess;
            req.onFail = onFail;
            HttpUnit.request(req);
        }
    };
    HttpUnit.reportExport = function (appid, game_name, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.reportExport;
        req.data.wbappid = appid;
        req.data.game_name = game_name;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.reportImport = function (appid, channel, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.reportImport;
        req.data.wbappid = appid;
        req.data.channel = channel;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.Getuserip = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.getuserip;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    return HttpUnit;
}());
exports.default = HttpUnit;
},{"../AppConfig":2,"../User/User":45,"./AesTools":34,"./NetConfig":36}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig = /** @class */ (function () {
    function NetConfig() {
    }
    NetConfig.state = 0;
    NetConfig.gameid = 13;
    NetConfig.serverUrl = "https://javaapi.renyouwangluo.cn";
    NetConfig.Login = "/api/user/login";
    NetConfig.SaveGameData = "/api/user/game/data/write";
    NetConfig.GetUser = "/api/user/game/data/read";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    NetConfig.IpBlock = "/api/user/ip/select";
    NetConfig.reportExport = "/api/share/getwaibuad";
    NetConfig.reportImport = "/api/share/getzjadml";
    NetConfig.getuserip = "/api/user/ip";
    return NetConfig;
}());
exports.default = NetConfig;
},{}],37:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var HttpUnit_1 = require("./Net/HttpUnit");
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var ViewMgr_1 = require("./Mgr/ViewMgr");
var OPPOAPI = /** @class */ (function () {
    function OPPOAPI() {
    }
    Object.defineProperty(OPPOAPI, "BannerInstance", {
        get: function () {
            return this._banner;
        },
        enumerable: true,
        configurable: true
    });
    OPPOAPI.Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    OPPOAPI.initAdService = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: AppConfig_1.default.AppID,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    OPPOAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: OPPOAPI.adUnitId,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    OPPOAPI.navigateToMiniProgram = function (pkgName, gameName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            HttpUnit_1.default.reportExport(pkgName, gameName, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 导出上报成功");
                }
                else {
                    console.log("OPPO 导出上报失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 导出上报失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
            var time = Date.now();
            while (Date.now() - time <= 500) {
            }
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: AppConfig_1.default.AppID
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
            });
        }
    };
    OPPOAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var insertAd = qg.createInsertAd({
                posId: OPPOAPI.InsAdUnitId
            });
            insertAd.load();
            insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
                insertAd.show();
            });
            insertAd.onShow(function () {
                console.log("插屏广告显示成功");
            });
            insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", err);
                insertAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    OPPOAPI.showBannaer = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.show();
            return;
        }
        var bannerAd = qg.createBannerAd({
            posId: OPPOAPI.bannerAdUnitId
        });
        bannerAd.show();
        OPPOAPI._banner = bannerAd;
    };
    OPPOAPI.hideBanner = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.hide();
        }
    };
    OPPOAPI.destroyBanner = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.destroy();
        }
        OPPOAPI._banner = null;
    };
    OPPOAPI.getLaunchOptionsSync = function () {
        var obj = { query: "", referrerInfo: { package: "", extraData: { appid: "" } } };
        if (Laya.Browser.onQGMiniGame) {
            var options = Laya.Browser.window["qg"].getLaunchOptionsSync();
            if (null != options && options != "") {
                obj = options;
            }
            else {
                console.log("没有启动设置！！！");
            }
            return obj;
        }
        return obj;
    };
    OPPOAPI.share = function (complate, titel, imageUrl) {
        complate(false);
    };
    OPPOAPI.createDesktopIcon = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    //根据配置的概率自动弹出创建图标确认框
    OPPOAPI.autoPopCreateDestopIcon = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        var rate = Math.floor(Math.random() * 100);
        if (rate <= AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.addToDesktop) {
            OPPOAPI.createDesktopIcon(onSuccess, onFail);
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    //显示OPPO原生界面
    OPPOAPI.showNativeAd = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        if (1 == AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.yuanshengSwitch) {
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.OPPONativeView, null, function (v) {
                if (null != onSuccess) {
                    onSuccess(v);
                }
            });
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    OPPOAPI.adUnitId = "";
    OPPOAPI.bannerAdUnitId = "";
    OPPOAPI.InsAdUnitId = "";
    OPPOAPI.OpenScreenAdUnitId = "";
    OPPOAPI.NativeAdId = "";
    OPPOAPI._banner = null;
    return OPPOAPI;
}());
exports.default = OPPOAPI;
},{"./AppConfig":2,"./Config/AppSwitchConfig":5,"./Mgr/ViewMgr":31,"./Net/HttpUnit":35}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QQMiniGameAPI = /** @class */ (function () {
    function QQMiniGameAPI() {
    }
    QQMiniGameAPI.Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    QQMiniGameAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    QQMiniGameAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (QQMiniGameAPI._onRewardedVideoAdFailed) {
            QQMiniGameAPI._onRewardedVideoAdFailed();
        }
    };
    QQMiniGameAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (QQMiniGameAPI._onRewardedVideoAdClose) {
                QQMiniGameAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (QQMiniGameAPI._onRewardedVideoAdClose) {
                QQMiniGameAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    QQMiniGameAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(QQMiniGameAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(QQMiniGameAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(QQMiniGameAPI.onRewardedVideoAdClose);
        QQMiniGameAPI._isRegRewardedVideoAdEvent = true;
    };
    QQMiniGameAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            QQMiniGameAPI._onRewardedVideoAdClose = onAdClose;
            QQMiniGameAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["qq"].createRewardedVideoAd({
                adUnitId: QQMiniGameAPI.adUnitId,
            });
            if (!QQMiniGameAPI._isRegRewardedVideoAdEvent) {
                QQMiniGameAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    QQMiniGameAPI.navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["qq"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    QQMiniGameAPI.share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onQQMiniGame) {
            QQMiniGameAPI._onShow = function () {
                Laya.Browser.window["qq"].offShow(QQMiniGameAPI._onShow);
                QQMiniGameAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["qq"].onShow(QQMiniGameAPI._onShow);
            this._lastShareTime = Date.now();
            Laya.Browser.window["qq"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    QQMiniGameAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            var interstitialAd = Laya.Browser.window["qq"].createInterstitialAd({
                adUnitId: QQMiniGameAPI.InsAdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    QQMiniGameAPI.LoadAppBoxAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            this.mAppboxAd = Laya.Browser.window["qq"].createAppBox({
                adUnitId: QQMiniGameAPI.AppBoxId,
            });
            this.mAppboxAd.load().then(function () {
                console.log('盒子广告 加载完成');
            });
            this.mAppboxAd.onError(function (err) {
                console.log('盒子广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            this.onBoxAdClose = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            this.mAppboxAd.onClose(this.onBoxAdClose);
        }
        else {
            onAdClose();
        }
    };
    QQMiniGameAPI.showAppBoxAd = function (onFailed, onAdClose) {
        if (this.mAppboxAd) {
            console.log("显示盒子广告");
            this.mAppboxAd.offClose(this.onBoxAdClose);
            this.onBoxAdClose = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            this.mAppboxAd.onClose(this.onBoxAdClose);
            this.mAppboxAd.show().catch(function (err) {
                console.log('盒子广告 显示失败 ：' + err);
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            QQMiniGameAPI.LoadAppBoxAd(onAdClose, onFailed);
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/qq.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof QQMiniGameAPI
     */
    QQMiniGameAPI.getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onQQMiniGame) {
            var obj_1 = Laya.Browser.window["qq"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof QQMiniGameAPI
     */
    QQMiniGameAPI.SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["qq"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["qq"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    QQMiniGameAPI.adUnitId = ""; //激励视频Id
    QQMiniGameAPI.bannerAdUnitId = ""; //banner广告Id
    QQMiniGameAPI.InsAdUnitId = ""; //插屏广告Id
    QQMiniGameAPI.AppBoxId = ""; //盒子广告Id
    //-------------------------激励视频---------------------------------
    QQMiniGameAPI._isRegRewardedVideoAdEvent = false;
    QQMiniGameAPI._onRewardedVideoAdFailed = null;
    QQMiniGameAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    QQMiniGameAPI._onShow = null;
    QQMiniGameAPI._lastShareTime = 0;
    //--------------------盒子广告---------------------------------------
    QQMiniGameAPI.mAppboxAd = null;
    QQMiniGameAPI.onBoxAdClose = null;
    return QQMiniGameAPI;
}());
exports.default = QQMiniGameAPI;
},{}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var User_1 = require("../User/User");
var Utilit_1 = require("../Utilit");
var ALD_1 = require("../ALD");
var WXAPI_1 = require("../WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var ShareAd = /** @class */ (function () {
    function ShareAd() {
    }
    ShareAd.refreshAd = function (complate) {
        ShareAd.getAdPosData(function (res) {
            if (1 == res.code) {
                console.log("获取分享广告数据成功");
                ShareAd._adPosition = res.result;
                if (complate) {
                    complate(true);
                }
            }
            else {
                console.log("获取分享广告数据失败 ： " + res.msg);
                if (complate) {
                    complate(false);
                }
            }
        }, function (res) {
            console.log("获取分享广告数据失败");
            if (complate) {
                complate(false);
            }
        });
    };
    ShareAd.getADVs = function (locationid, complate, useRandom, useLocalRandom) {
        if (!ShareAd.isNeedShowAd()) {
            complate(null);
            return;
        }
        useRandom = null == useRandom ? this.UseRandomAdPos : useRandom;
        useLocalRandom = null == useLocalRandom ? true : useLocalRandom;
        if (useRandom) {
            locationid = this.getRandomADPosID();
        }
        var datas = ShareAd._adv[locationid];
        if (datas) {
            for (var i = datas.length - 1; i >= 0; --i) {
                var randomIndex = Math.floor(Math.random() * datas.length);
                var curValue = datas[i];
                var randomValue = datas[randomIndex];
                datas[randomIndex] = curValue;
                datas[i] = randomValue;
            }
            complate(datas);
        }
        else {
            var self = this;
            ShareAd.getADVData(locationid, function (res) {
                if (1 == res.code) {
                    ShareAd._adv[locationid] = res.result;
                    datas = ShareAd._adv[locationid];
                    if (datas && Utilit_1.default.isIphone()) {
                        for (var i = 0; i < datas.length; ++i) {
                            var data = datas[i];
                            for (var j = 0; j < ShareAd._iphoneIgnoreAppIds.length; ++j) {
                                if (data.appid == ShareAd._iphoneIgnoreAppIds[j]) {
                                    datas.splice(i, 1);
                                    --i;
                                    break;
                                }
                            }
                        }
                    }
                    if (datas && useLocalRandom) {
                        datas = self.sortDatas(datas);
                    }
                    if (complate) {
                        complate(datas);
                    }
                }
                else {
                    if (complate) {
                        complate(null);
                    }
                }
            }, function (res) {
                if (complate) {
                    complate(null);
                }
            });
        }
    };
    ShareAd.reportUserClick = function (advid) {
        ShareAd.reqUserClick(advid, function (res) {
            if (1 == res.code) {
                console.log("点击广告上报成功");
            }
            else {
                console.log("点击广告上报失败");
            }
        }, function (res) {
            console.log("点击广告上报失败");
        });
    };
    ShareAd.getRandomADPosID = function () {
        return this.AdLocationids[Math.floor(Math.random() * this.AdLocationids.length)];
    };
    ShareAd.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = ShareAd.mainUrl + req.url;
        }
        var completeFunc = function (res) {
            // console.log(res,"http Success")
            res = JSON.parse(res);
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            var header = [
                "versions", AppConfig_1.default.Versions,
            ];
            xhr.send(req.url, null, req.meth, null, header);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            var header = [
                "Content-Type", "application/x-www-form-urlencoded",
                "versions", AppConfig_1.default.Versions,
            ];
            xhr.send(req.url, para, req.meth, null, header);
        }
    };
    ShareAd.getAdPosData = function (onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.getAdPostion;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.meth = "get";
        ShareAd.request(req);
    };
    ShareAd.reqUserClick = function (advid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.userClick;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.uid = User_1.default.openId;
        req.data.advid = advid;
        ShareAd.request(req);
    };
    ShareAd.getADVData = function (locationid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.getAdv;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.locationid = locationid;
        req.data.preview = 0;
        ShareAd.request(req);
    };
    /**
         * 随机跳转的方法，会从广告列表中随机得到一个AppId并且跳转,输入的参数为概率，大小在0-1之间
         * 如果概率大于1，则自动将其除以100，所以千万注意！
         *
         * @static
         * @param {number} [rate=1]
         * @memberof ShareAd
         */
    ShareAd.RandomJump = function (rate) {
        if (rate === void 0) { rate = 1; }
        console.log("随机跳转,rate：" + rate);
        if (rate > 1) {
            rate = rate / 100;
        }
        var rd = Math.random();
        if (rd <= rate) {
            var adLocationID = ShareAd.LoopAdLocationID;
            var Locations = [
                ShareAd.LoopAdLocationID,
                ShareAd.InsertAdLocationID,
                ShareAd.BannerAdLocationID,
                ShareAd.AniAdLocationID,
            ];
            if (ShareAd.UseRandomAdPos) {
                for (var i = 0; i < ShareAd.AdLocationids.length; ++i) {
                    Locations.push(ShareAd.AdLocationids[i]);
                }
            }
            adLocationID = Locations[Math.floor(Math.random() * Locations.length)];
            var datas = ShareAd.getADVs(adLocationID, function (datas) {
                if (datas) {
                    var rd_1 = Math.floor(datas.length * Math.random());
                    var data_1 = datas[rd_1];
                    console.log("跳转游戏： " + data_1.title);
                    WXAPI_1.default.navigateToMiniProgram(data_1.appid, data_1.url, function (res) {
                        console.log("跳转成功");
                        ShareAd.reportUserClick(data_1.appid);
                        ALD_1.default.aldSendReportAdClickSuccess(data_1);
                    }, function (res) {
                        console.log("跳转失败");
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                        if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                            console.log("用户取消跳转");
                            ALD_1.default.aldSendReportAdClickFail(data_1);
                        }
                    }, function (res) {
                        console.log("跳转完成");
                    });
                }
            }, true);
        }
    };
    ShareAd.isNeedShowAd = function () {
        if (0 == AppSwitchConfig_1.default.getInstance().getAppSwitchData().adSwitch)
            return false;
        if (Laya.Browser.onQGMiniGame) {
            if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.oppoversions != AppConfig_1.default.Versions) {
                return false;
            }
        }
        var mailiang = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailiang;
        var mailianglist = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailianglist;
        var mailiangscenelist = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailiangSceneList;
        if (1 == mailiang) {
            var flag = null;
            var scene = null;
            if (Laya.Browser.onMiniGame) {
                flag = WXAPI_1.default.getLaunchOptionsSync().query['chid'];
                scene = WXAPI_1.default.getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                flag = QQMiniGameAPI_1.default.getLaunchOptionsSync().query['chid'];
                scene = QQMiniGameAPI_1.default.getLaunchOptionsSync().scene;
            }
            if (null != flag && null != mailianglist && mailianglist.length > 0) {
                for (var i = 0; i < mailianglist.length; ++i) {
                    if (flag == mailianglist[i]) {
                        return false;
                    }
                }
            }
            if (null != scene && null != mailiangscenelist && mailiangscenelist.length > 0) {
                for (var i = 0; i < mailiangscenelist.length; ++i) {
                    if (scene == mailiangscenelist[i]) {
                        return false;
                    }
                }
            }
        }
        return true;
    };
    ShareAd.sortDatas = function (datas) {
        if (null == datas || 0 == datas.length)
            return [];
        var dataDic = {};
        var dataArray = new Array();
        for (var i = 0; i < datas.length; ++i) {
            var data = datas[i];
            if (dataDic[data.appid] == null) {
                dataDic[data.appid] = new Array();
                dataDic[data.appid].push(data);
                dataArray.push(dataDic[data.appid]);
            }
            else {
                dataDic[data.appid].push(data);
            }
        }
        //从大到小排序
        for (var i_1 = 0; i_1 < dataArray.length; i_1++) {
            for (var j = i_1 + 1; j < dataArray.length; j++) {
                if (dataArray[i_1].length < dataArray[j].length) {
                    var d = dataArray[j];
                    dataArray[j] = dataArray[i_1];
                    dataArray[i_1] = d;
                }
            }
        }
        //重新分组
        var groupArray = new Array();
        for (var i_2 = 0; i_2 < dataArray[0].length; i_2++) {
            groupArray[i_2] = new Array();
            for (var j = 0; j < dataArray.length; j++) {
                if (dataArray[j].length > i_2) {
                    groupArray[i_2].push(dataArray[j][i_2]);
                }
            }
            // //组内打乱            
            // groupArray[i].sort(() => { return 0.5 - Math.random() })
        }
        //打乱分组
        // groupArray.sort(() => { return 0.5 - Math.random() });
        var res = new Array();
        for (var i_3 = 0; i_3 < groupArray.length; i_3++) {
            for (var j = 0; j < groupArray[i_3].length; j++) {
                res.push(groupArray[i_3][j]);
            }
        }
        return res;
    };
    ShareAd.mainUrl = "https://swwww.mrkzx.cn";
    ShareAd.getAdPostion = "/v1.1/api/getAdPosition.html"; //获取广告位列表
    ShareAd.getAdv = "/v1.1/api/getAdv.html"; //获取第三方广告列表
    ShareAd.userClick = "/v1.1/api/userclick.html"; //用户点击上报
    ShareAd.LoopAdLocationID = 476; //所有轮播
    ShareAd.BannerAdLocationID = 478; //banner
    ShareAd.InsertAdLocationID = 477; //更多好玩大图
    ShareAd.AniAdLocationID = -1; //序列帧
    ShareAd.HistoryLocationID = 479; //伪退出
    ShareAd.UseRandomAdPos = true;
    ShareAd.AdLocationids = [
        476
    ];
    ShareAd._adPosition = {};
    ShareAd._adv = {};
    ShareAd._iphoneIgnoreAppIds = [
        "wx2d2acce3c45f4ddf",
        "wxeb93c1298ec7c62b"
    ];
    return ShareAd;
}());
exports.default = ShareAd;
},{"../ALD":1,"../AppConfig":2,"../Config/AppSwitchConfig":5,"../Event/EventDef":6,"../Event/EventMgr":7,"../Net/HttpUnit":35,"../QQMiniGameAPI":39,"../User/User":45,"../Utilit":46,"../WXAPI":77}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var BannerAdView = /** @class */ (function (_super) {
    __extends(BannerAdView, _super);
    function BannerAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.BannerAdLocationID;
        _this._data = null;
        _this._wxBanner = null;
        _this._onLoad = null;
        _this._onError = null;
        _this._onResize = null;
        return _this;
    }
    BannerAdView.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        if (null == this._displaySp) {
            this._displaySp = this.owner;
        }
    };
    BannerAdView.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.onSpClick);
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (0 == banner) {
            this.refreshBannerDis();
        }
        else if (1 == banner) {
            this.refreshWXBanner();
        }
    };
    BannerAdView.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
        this.clearWXBaner();
    };
    BannerAdView.prototype.refreshBannerDis = function () {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._displaySp.destroyed) {
                        self._displaySp.width = 750;
                        self._displaySp.height = 256;
                    }
                }));
                self._data = data;
            }
        }, false);
    };
    BannerAdView.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    BannerAdView.prototype.refreshWXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame)
            || !this.owner.visible)
            return;
        this.clearWXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._displaySp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBannerWidth ? this.WXBannerWidth / Laya.stage.width * sw : sw;
        if (Laya.Browser.onMiniGame) {
            self._wxBanner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: WXAPI_1.default.bannerAdUnitId,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            self._wxBanner.onLoad(function (res) {
                console.log("WXBanner广告 加载完成");
                console.log(res);
            });
            self._wxBanner.onError(function (err) {
                console.log("WXBanner广告 加载失败");
                console.log(err);
                self.refreshBannerDis();
                self.clearWXBaner();
            });
            self._wxBanner.onResize(function (res) {
            });
            self._wxBanner.show();
        }
        else if (Laya.Browser.onQQMiniGame) {
            self._wxBanner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: QQMiniGameAPI_1.default.bannerAdUnitId,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wxBanner) {
                self._onLoad = function (res) {
                    console.log("QQBanner广告 加载完成 : ", WXAPI_1.default.bannerAdUnitId);
                    console.log(res);
                    self._wxBanner.show();
                };
                self._wxBanner.onLoad(self._onLoad);
                self._onError = function (err) {
                    console.log("QQBanner广告 加载失败 : ", WXAPI_1.default.bannerAdUnitId);
                    console.log(err);
                    self.refreshBannerDis();
                    self.clearWXBaner();
                };
                self._wxBanner.onError(self._onError);
                self._onResize = function (res) {
                };
                self._wxBanner.onResize(self._onResize);
            }
            else {
                self.refreshBannerDis();
            }
        }
    };
    BannerAdView.prototype.clearWXBaner = function () {
        if (this._wxBanner) {
            this._wxBanner.offLoad(this._onLoad);
            this._wxBanner.offError(this._onError);
            this._wxBanner.offResize(this._onResize);
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
    };
    BannerAdView.prototype.onViewShow = function () {
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner && null == this._wxBanner) {
            this.refreshWXBanner();
        }
    };
    BannerAdView.prototype.onViewHide = function () {
        this.clearWXBaner();
    };
    return BannerAdView;
}(Laya.Script));
exports.default = BannerAdView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":5,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":38,"../../QQMiniGameAPI":39,"../../WXAPI":77,"../ShareAd":40}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var HorizontalLoopAdView = /** @class */ (function (_super) {
    __extends(HorizontalLoopAdView, _super);
    function HorizontalLoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._scrollForward = true;
        return _this;
    }
    HorizontalLoopAdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.hScrollBarSkin = "";
    };
    HorizontalLoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list.array = temp;
                }
                else {
                    _this._list.array = datas;
                }
            }
        });
    };
    HorizontalLoopAdView.prototype.onDisable = function () {
    };
    HorizontalLoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    HorizontalLoopAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.setData(data);
    };
    return HorizontalLoopAdView;
}(Laya.Script));
exports.default = HorizontalLoopAdView;
},{"../ShareAd":40,"./LoopAdBox":43}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var LoopAdBox = /** @class */ (function (_super) {
    __extends(LoopAdBox, _super);
    function LoopAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        _this._originW = 150;
        _this._originH = 150;
        _this._fontSize = 25;
        return _this;
    }
    LoopAdBox.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
    };
    LoopAdBox.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.onSpClick);
    };
    LoopAdBox.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
    };
    LoopAdBox.prototype.setData = function (data) {
        if (data) {
            var self = this;
            this._displaySp.loadImage(data.logo, Laya.Handler.create(this, function () {
                if (!self._displaySp.destroyed) {
                    self._displaySp.width = self._originW;
                    self._displaySp.height = self._originH;
                }
            }));
            var str = String(data.title);
            var num = str.length;
            num = Math.max(5, num);
            var fontSize = Math.floor((5 / num) * this._fontSize);
            this._disText.fontSize = fontSize;
            this._disText.text = str;
            this._data = data;
        }
    };
    LoopAdBox.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return LoopAdBox;
}(Laya.Script));
exports.default = LoopAdBox;
},{"../../ALD":1,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":38,"../../QQMiniGameAPI":39,"../../WXAPI":77,"../ShareAd":40}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var AppConfig_2 = require("./AppConfig");
var TTAPI = /** @class */ (function () {
    function TTAPI() {
    }
    TTAPI.ttLogin = function (onSuccess, onFail) {
        if (AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.window["tt"].login({
                force: false,
                success: function (res) {
                    console.log("登陆成功1");
                    var code = res.code;
                    if (code) {
                        onSuccess(code);
                    }
                    else {
                        console.log("用户没有登陆，采用临时code");
                        onFail();
                    }
                },
                fail: function () {
                    console.log("登陆失败1");
                    onFail();
                },
            });
            TTAPI.initRecord();
        }
    };
    TTAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    TTAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (TTAPI._onRewardedVideoAdFailed) {
            TTAPI._onRewardedVideoAdFailed();
        }
    };
    TTAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (TTAPI._onRewardedVideoAdClose) {
                TTAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (TTAPI._onRewardedVideoAdClose) {
                TTAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    TTAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(TTAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(TTAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(TTAPI.onRewardedVideoAdClose);
        TTAPI._isRegRewardedVideoAdEvent = true;
    };
    TTAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (AppConfig_1.default.onTTMiniGame) {
            TTAPI._onRewardedVideoAdClose = onAdClose;
            TTAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["tt"].createRewardedVideoAd({
                adUnitId: TTAPI.adUnitId,
            });
            if (!TTAPI._isRegRewardedVideoAdEvent) {
                TTAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------TODO
    // public static navigateToMiniProgram(appId: string, path: string, onSuccess: Function, onFail: Function, onComplate: Function) {
    //     if (Laya.Browser.onMiniGame) {
    //         console.log("跳转游戏： " + appId);
    //         Laya.Browser.window["tt"].navigateToMiniProgram(
    //             {
    //                 appId: appId,
    //                 path: path,
    //                 extraData: {
    //                     foo: 'bar'
    //                 },
    //                 envVersion: 'release',
    //                 success(res) {
    //                     if (onSuccess) {
    //                         onSuccess(res)
    //                     }
    //                 },
    //                 fail(res) {
    //                     if (onFail) {
    //                         onFail(res)
    //                     }
    //                 },
    //                 complete(res) {
    //                     if (onComplate) {
    //                         onComplate(res)
    //                     }
    //                 }
    //             })
    //     }
    // }
    //-------------------------------------------------------------
    //-------------------录屏-------------------------------------------
    /**
     * 配置录屏
     */
    TTAPI.initRecord = function () {
        TTAPI.record = Laya.Browser.window["tt"].getGameRecorderManager();
        if (TTAPI.record != null) {
            TTAPI.record.onStart(function (res) {
                console.log("录屏开始");
                TTAPI.recordRes = "";
            });
            TTAPI.record.onStop(function (res) {
                console.log("录屏结束");
                TTAPI.recordRes = res.videoPath;
            });
        }
    };
    /**
     * 开始录屏
     */
    TTAPI.startRecord = function (duration) {
        if (duration === void 0) { duration = 300; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TTAPI.record.start({
            duration: duration
        });
    };
    /**
    * 停止录屏
    */
    TTAPI.stopRecord = function () {
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TTAPI.record.stop();
    };
    //----------------------------------------------------------------------
    //---------------------分享录屏----------------------------------------
    TTAPI.shareRecord = function (callback) {
        if (callback === void 0) { callback = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        if (TTAPI.recordRes != "") {
            window["tt"].shareAppMessage({
                channel: "video",
                extra: {
                    videoPath: TTAPI.recordRes,
                    videoTopics: ["快来和我一起玩吧！"]
                },
                success: function () {
                    if (callback != null) {
                        callback();
                    }
                    console.log("分享视频成功");
                },
                fail: function (e) {
                    console.log("分享视频失败");
                }
            });
        }
        else {
            console.log("分享视频为空");
        }
    };
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    //---------------------分享好友----------------------------------------
    TTAPI.share = function (complate) {
        if (complate === void 0) { complate = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        window["tt"].shareAppMessage({
            templateId: this._templateId,
            success: function () {
                if (complate != null) {
                    complate();
                }
            },
            fail: function () {
                console.log("分享失败");
            }
        });
    };
    //------------------------------------------------------------------
    //-------------------------banner-------------------------------------------
    TTAPI.showBanner = function () {
        if (!AppConfig_1.default.onTTMiniGame || this.bannerAdUnitId.length <= 0)
            return;
        if (!TTAPI._banner) {
            var _a = Laya.Browser.window["tt"].getSystemInfoSync(), windowWidth_1 = _a.windowWidth, windowHeight_1 = _a.windowHeight;
            var targetBannerAdWidth = 150;
            // 创建一个居于屏幕底部正中的广告
            TTAPI._banner = Laya.Browser.window["tt"].createBannerAd({
                adUnitId: TTAPI.bannerAdUnitId,
                adIntervals: 30,
                style: {
                    width: targetBannerAdWidth,
                    top: windowHeight_1 - (targetBannerAdWidth / 16) * 9,
                }
            });
            TTAPI._banner.onResize(function (size) {
                console.log(size.width, size.height);
                TTAPI._banner.style.top = windowHeight_1 - size.height;
                TTAPI._banner.style.left = (windowWidth_1 - size.width) / 2;
            });
        }
        TTAPI._banner.show();
    };
    TTAPI.hideBanner = function () {
        if (null != TTAPI._banner) {
            TTAPI._banner.hide();
        }
    };
    TTAPI.showMoreGamesModal = function (onSuccess, onFail) {
        var systemInfo = Laya.Browser.window["tt"].getSystemInfoSync();
        // iOS 不支持，建议先检测再使用
        if (systemInfo.platform !== "ios") {
            // 打开互跳弹窗
            Laya.Browser.window["tt"].showMoreGamesModal({
                appLaunchOptions: [
                    {
                        appId: AppConfig_2.default.AppID,
                        query: "foo=bar&baz=qux",
                        extraData: {}
                    }
                    // {...}
                ],
                success: function (res) {
                    console.log("success", res.errMsg);
                    if (onSuccess) {
                        onSuccess();
                    }
                },
                fail: function (res) {
                    console.log("fail", res.errMsg);
                    if (onFail) {
                        onFail();
                    }
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    TTAPI.adUnitId = "";
    TTAPI.bannerAdUnitId = "";
    TTAPI.InsAdUnitId = "";
    TTAPI._templateId = ""; //分享素材id
    TTAPI.recordRes = "";
    TTAPI._banner = null;
    //-------------------------激励视频---------------------------------
    TTAPI._isRegRewardedVideoAdEvent = false;
    TTAPI._onRewardedVideoAdFailed = null;
    TTAPI._onRewardedVideoAdClose = null;
    return TTAPI;
}());
exports.default = TTAPI;
},{"./AppConfig":2}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var UserGameData = /** @class */ (function () {
    function UserGameData() {
        this.levelNum = 1; //当前关卡
        this.moneyNum = 0; //金币数量
        this.crystalNum = 0; //钻石数量    
    }
    return UserGameData;
}());
exports.UserGameData = UserGameData;
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(User, "isLogin", {
        get: function () {
            return (User.code != "") || (User.token != "");
        },
        enumerable: true,
        configurable: true
    });
    User.getSaveData = function () {
        return JSON.stringify(User._gameData);
    };
    User.testInitUser = function () {
        User._gameData.levelNum = 1;
        User._gameData.moneyNum = 10000000;
        User._gameData.crystalNum = 10000000;
    };
    User.initiUser = function (data) {
        if (data && 0 != data) {
            User._gameData.levelNum = data.levelNum;
            User._gameData.moneyNum = data.moneyNum;
            User._gameData.crystalNum = data.crystalNum;
        }
        else {
            //todo：处理没有获取到玩家数据的情况
        }
    };
    User.setLeveNum = function (levelNum) {
        User._gameData.levelNum = levelNum;
    };
    User.getLeveNum = function () {
        return User._gameData.levelNum;
    };
    User.addMoney = function (add) {
        add = Math.ceil(add);
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
    };
    User.subMoney = function (sub) {
        sub = Math.ceil(sub);
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum -= sub;
        if (User._gameData.moneyNum < 0) {
            User._gameData.moneyNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
    };
    User.getMoney = function () {
        return User._gameData.moneyNum;
    };
    User.addCrystal = function (add) {
        add = Math.ceil(add);
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.subCrystal = function (sub) {
        sub = Math.ceil(sub);
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum -= sub;
        if (User._gameData.crystalNum < 0) {
            User._gameData.crystalNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.getCrystal = function () {
        return User._gameData.crystalNum;
    };
    User.code = "";
    User.openId = "";
    User.token = null;
    User.nickName = "";
    User.gender = 0;
    User._gameData = new UserGameData();
    return User;
}(Laya.Script));
exports.default = User;
},{"../Event/EventDef":6,"../Event/EventMgr":7}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit = /** @class */ (function () {
    function Utilit() {
    }
    Utilit.Lerp = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    Utilit.lerpEulerAngle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = Utilit.Lerp(form, to, delta);
        return next;
    };
    Utilit.getRotationByDir = function (v) {
        var dotValue = (v.x * Utilit.poinDown.x) + (v.y * Utilit.poinDown.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinDown.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    Utilit.getRotationByDirOn3DSpace = function (v) {
        var dotValue = (v.x * Utilit.poinUp.x) + (v.y * Utilit.poinUp.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinUp.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    Utilit.getDirByRotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    Utilit.getDirDirAngle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    Utilit.getDirScalarLength = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    Utilit.setSpOnParentCenter = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    Utilit.getPointToLineDistance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    Utilit.isIphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        if ((Laya.Browser.width == 2436 && Laya.Browser.height == 1125)
            || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125)) {
            return true;
        }
        return false;
    };
    Utilit.isIphone = function () {
        return Laya.Browser.onIPhone;
    };
    Utilit.getChild = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = Utilit.getChild(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    Utilit.forEachChild = function (node, each) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            each(child);
            Utilit.forEachChild(child, each);
        }
    };
    Utilit.OriginStageWidth = 1334;
    Utilit.OriginStageHeight = 750;
    Utilit.grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    Utilit.grayscaleFilter = new Laya.ColorFilter(Utilit.grayscaleMat);
    Utilit.poinDown = new Laya.Point(0, -1);
    Utilit.poinUp = new Laya.Point(0, 1);
    return Utilit;
}());
exports.default = Utilit;
},{}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var ButtonAnim = /** @class */ (function (_super) {
    __extends(ButtonAnim, _super);
    function ButtonAnim() {
        var _this = _super.call(this) || this;
        _this.useSound = true;
        return _this;
    }
    ButtonAnim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp);
    };
    ButtonAnim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    ButtonAnim.prototype.onDown = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this.useSound) {
            SoundMgr_1.default.instance.playSound("anniu");
        }
    };
    ButtonAnim.prototype.onUp = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    return ButtonAnim;
}(Laya.Script));
exports.default = ButtonAnim;
},{"../Mgr/SoundMgr":29}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventDef_1 = require("../../Event/EventDef");
var EventMgr_1 = require("../../Event/EventMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    Event_PK_Mgr.instance.dispatch(Event_PK_Def.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {ViewBase}
 */
var ClickGetPrize = /** @class */ (function (_super) {
    __extends(ClickGetPrize, _super);
    function ClickGetPrize() {
        var _this = _super.call(this) || this;
        _this._totalClickTimer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 7; //点多少次开始显示bannerr套路用户，可微调    
        return _this;
    }
    // private _wudianLoadFlag: boolean;
    ClickGetPrize.prototype.onAwake = function () {
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._bg = this.owner.getChildByName("BG");
        this._open_Btn = this._bg.getChildByName("Open_Btn");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickTime_PBar = this._bg.getChildByName("ClickTime_PBar");
        this._clickTime_PBar$Bar = this._clickTime_PBar.getChildByName("ClickTime_PBar$Bar");
        this._clickBarOriginalWidth = this._clickTime_PBar$Bar.width;
        this._bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this._clickTime_PBar$Bar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
    };
    ClickGetPrize.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickTime_PBar$Bar.width >= spd) {
                this._clickTime_PBar$Bar.width -= spd;
            }
            if ((this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    /**
     * 打开Banner
     *
     * @param {*} [data]
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.OpenPrizeWindow = function () {
        this._bg.visible = false;
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        /* 确认按钮 */
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ShowBanner = function () {
        console.log("AD_WudianBanner_Show");
        CachedWXBannerAd_1.default.show();
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ButtonClicked = function () {
        this._clickTime++;
        this._totalClickTime++;
        //nanner一直没加载成功,保持进度条
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime /*&& this._wudianLoadFlag*/) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            this._bannerClicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        //用户一直没被套路到，让他继续玩
        else if (this._totalClickTime > this._totalClickTimer) {
            console.log("用户一直没点到，放他一马", this._totalClickTime);
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickTime_PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this._open_Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.OpenPrizeWindow();
    };
    ClickGetPrize.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        CachedWXBannerAd_1.default.hide();
    };
    return ClickGetPrize;
}(ViewBase_1.default));
exports.default = ClickGetPrize;
},{"../../CachedWXBannerAd":4,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../View/ViewBase":76}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BannerAdView_1 = require("../../ShareAd/View/BannerAdView");
var UniversalBottomZone = /** @class */ (function (_super) {
    __extends(UniversalBottomZone, _super);
    function UniversalBottomZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniversalBottomZone.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._autoZone = this._ownerSprite.getChildByName("AutoZone");
        this._loopADZone = this._ownerSprite.getChildByName("LoopAD");
        this._bannerADZone = this._ownerSprite.getChildByName("BannerAD");
        this._bannerAd = this._bannerADZone.getComponent(BannerAdView_1.default);
    };
    UniversalBottomZone.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._autoZone.bottom = this._loopADZone.height + this._bannerADZone.height;
            this._loopADZone.bottom = this._bannerADZone.height;
            this._bannerADZone.visible = true;
        }
        else {
            this._autoZone.bottom = this._loopADZone.height;
            this._loopADZone.bottom = 0;
            this._bannerADZone.visible = false;
        }
    };
    UniversalBottomZone.prototype.onDisable = function () {
    };
    UniversalBottomZone.prototype.onUpdate = function () {
        if (!this._bannerADZone.visible) {
            this._bannerAd.clearWXBaner();
        }
    };
    return UniversalBottomZone;
}(Laya.Script));
exports.default = UniversalBottomZone;
},{"../../ShareAd/View/BannerAdView":41}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isIViewStateListener(element) {
    if ((null != element.onViewShow && typeof (element.onViewShow) == "function")
        && (null != element.onViewHide && typeof (element.onViewHide) == "function")) {
        return true;
    }
    return false;
}
exports.isIViewStateListener = isIViewStateListener;
},{}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var LogoAni_1 = require("./LogoAni");
var LoadingView = /** @class */ (function (_super) {
    __extends(LoadingView, _super);
    function LoadingView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._processWidth = 0;
        _this._logoAni = null;
        return _this;
    }
    LoadingView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._bottomZone = this._bg.getChildByName("BottomZone");
        this._processBarBg = this._bottomZone.getChildByName("processBarBg");
        this._processBar = this._processBarBg.getChildByName("processBar");
        this._processWidth = this._processBar.width;
        this._logoAni = this._bottomZone.getChildByName("LogoAni").getComponent(LogoAni_1.default);
    };
    LoadingView.prototype.onStart = function () {
        var _this = this;
        Laya.timer.once(250, this, function () {
            _this._logoAni.playAni();
        });
    };
    LoadingView.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
    };
    LoadingView.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    LoadingView.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    LoadingView.prototype.onUpdate = function () {
        this._bg.width = Laya.stage.width;
        this._bg.height = Laya.stage.height;
    };
    LoadingView.prototype.setProcess = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        var width = this._processWidth * process;
        if (width < 1)
            width = 1;
        this._processBar.width = width;
    };
    return LoadingView;
}(ViewBase_1.default));
exports.default = LoadingView;
},{"../ViewBase":76,"./LogoAni":52}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LogoAni = /** @class */ (function (_super) {
    __extends(LogoAni, _super);
    function LogoAni() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._aniSprites = [];
        _this._aniSpriteOriginPos = [];
        return _this;
    }
    LogoAni.prototype.onAwake = function () {
        for (var i = 0; i < this.owner.numChildren; ++i) {
            var child = this.owner.getChildAt(i);
            child.alpha = 0;
            this._aniSprites.push(child);
            this._aniSpriteOriginPos.push(new Laya.Point(child.x, child.y));
        }
    };
    LogoAni.prototype.playAni = function () {
        if (Laya.Browser.onQGMiniGame) {
            for (var i = 0; i < this._aniSprites.length; ++i) {
                this._aniSprites[i].visible = false;
            }
            return;
        }
        var _loop_1 = function (i) {
            var isLast = i == (this_1._aniSprites.length - 1) ? true : false;
            var sp = this_1._aniSprites[i];
            var originPos = this_1._aniSpriteOriginPos[i];
            sp.alpha = 0;
            sp.y += originPos.y + 50;
            var self_1 = this_1;
            Laya.Tween.to(sp, {
                y: originPos.y,
                alpha: 1
            }, 450, Laya.Ease.elasticOut, Laya.Handler.create(this_1, function () {
                if (isLast) {
                    Laya.timer.once(300, self_1, function () {
                        self_1.playAni();
                    });
                }
            }), i * 80);
        };
        var this_1 = this;
        for (var i = 0; i < this._aniSprites.length; ++i) {
            _loop_1(i);
        }
    };
    return LogoAni;
}(Laya.Script));
exports.default = LogoAni;
},{}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQGameFailViewTemplate = /** @class */ (function (_super) {
    __extends(QQGameFailViewTemplate, _super);
    function QQGameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._continueBtn = null;
        _this._clickTag = false;
        _this._clickTimingTag = false;
        return _this;
    }
    QQGameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._continueBtn = this._centerZone.getChildByName("ContinueBtn");
    };
    QQGameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._continueBtn.y = yPos;
        }
        var self = this;
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.box == 1) {
            QQMiniGameAPI_1.default.showAppBoxAd(function () {
            }, function () {
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
            });
        }
        else {
            var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
            var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
            Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
            Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
        }
    };
    QQGameFailViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    QQGameFailViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    QQGameFailViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameFailViewTemplate.prototype.onContinueBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameFailViewTemplate.prototype.BannerUp = function () {
        //todo：显示Banner
    };
    QQGameFailViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._continueBtn.y = 720;
    };
    QQGameFailViewTemplate.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return QQGameFailViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQGameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":33,"../../../QQMiniGameAPI":39,"../../../Utilit":46,"../QQTemplateViewBase":59}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQGameWinViewTemplate = /** @class */ (function (_super) {
    __extends(QQGameWinViewTemplate, _super);
    function QQGameWinViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._nextBtn = null;
        _this._clickTag = false;
        _this._clickTimingTag = false;
        return _this;
    }
    QQGameWinViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._nextBtn = this._centerZone.getChildByName("NextBtn");
    };
    QQGameWinViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag && 1 == AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.weiyi) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._nextBtn.y = yPos;
        }
        var self = this;
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.box == 1) {
            QQMiniGameAPI_1.default.showAppBoxAd(function () {
            }, function () {
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
            });
        }
        else {
            var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
            var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
            Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
            Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
        }
    };
    QQGameWinViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.on(Laya.Event.CLICK, this, this.onNextBtn);
    };
    QQGameWinViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.off(Laya.Event.CLICK, this, this.onNextBtn);
    };
    QQGameWinViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameWinViewTemplate.prototype.onNextBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameWinViewTemplate.prototype.BannerUp = function () {
        //todo：显示Banner
    };
    QQGameWinViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._nextBtn.y = 720;
    };
    QQGameWinViewTemplate.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return QQGameWinViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQGameWinViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":33,"../../../QQMiniGameAPI":39,"../../../Utilit":46,"../QQTemplateViewBase":59}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQInGameViewTemplate = /** @class */ (function (_super) {
    __extends(QQInGameViewTemplate, _super);
    function QQInGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        return _this;
    }
    QQInGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
    };
    QQInGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    QQInGameViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    QQInGameViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return QQInGameViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQInGameViewTemplate;
},{"../../../Utilit":46,"../QQTemplateViewBase":59}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQMainViewTemplate = /** @class */ (function (_super) {
    __extends(QQMainViewTemplate, _super);
    function QQMainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._startBtn = null;
        _this._levelNum = null;
        _this._moneyNum = null;
        _this._moreGameBtn = null;
        return _this;
    }
    QQMainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._moreGameBtn = this._centerZone.getChildByName("MoreGameBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        this._startBtn = this._centerZone.getChildByName("StartBtn");
        this._levelNum = this._centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._moneyNum = this._centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    QQMainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._moneyNum.value = String(User_1.default.getMoney());
        this._levelNum.value = String(User_1.default.getLeveNum());
    };
    QQMainViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._startBtn.on(Laya.Event.CLICK, this, this.onStartBtn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    QQMainViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._startBtn.off(Laya.Event.CLICK, this, this.onStartBtn);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    QQMainViewTemplate.prototype.onStartBtn = function () {
    };
    QQMainViewTemplate.prototype.onMoreGameBtn = function () {
        QQMiniGameAPI_1.default.showAppBoxAd(function () {
        });
    };
    QQMainViewTemplate.prototype.onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._moneyNum.value = String(curr);
    };
    return QQMainViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQMainViewTemplate;
},{"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../QQMiniGameAPI":39,"../../../User/User":45,"../../../Utilit":46,"../QQTemplateViewBase":59}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var CachedQQBannerAd_1 = require("../../../CachedQQBannerAd");
var QQCrazyClick = /** @class */ (function (_super) {
    __extends(QQCrazyClick, _super);
    function QQCrazyClick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._clickBar = null;
        _this._totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        return _this;
    }
    QQCrazyClick.prototype.onAwake = function () {
        this.drgon = this.owner.getChildByName("panch");
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._clickBarOriginalWidth = this._clickBar.width;
        this._clickBar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
    };
    QQCrazyClick.prototype.onUpdate = function () {
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickBar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickBar.width >= spd) {
                this._clickBar.width -= spd;
            }
            if ((this._clickBar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
    };
    QQCrazyClick.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    QQCrazyClick.prototype.OpenPrizeWindow = function () {
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            CachedQQBannerAd_1.default.hide();
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    QQCrazyClick.prototype.ShowBanner = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBanner == 1) {
            CachedQQBannerAd_1.default.show();
        }
    };
    QQCrazyClick.prototype.ButtonClicked = function () {
        var _this = this;
        this._clickTime++;
        this._totalClickTime++;
        this.drgon.play(1, false);
        this.drgon.once(Laya.Event.STOPPED, this, function () {
            _this.drgon.play(0, true);
        });
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            if (this._bannerClicked) {
                return;
            }
            this._bannerClicked = true;
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._totalClickTime > this._totalClickTimer) {
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickBar.width = progress;
    };
    QQCrazyClick.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickBar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this.OpenPrizeWindow();
    };
    QQCrazyClick.prototype.onDestroy = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBanner == 1) {
            CachedQQBannerAd_1.default.hide();
        }
    };
    return QQCrazyClick;
}(ViewBase_1.default));
exports.default = QQCrazyClick;
},{"../../../CachedQQBannerAd":3,"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../View/ViewBase":76}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQCrazyClick2 = /** @class */ (function (_super) {
    __extends(QQCrazyClick2, _super);
    function QQCrazyClick2() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._clickBar = null;
        _this._totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        _this._clickBtn = null;
        return _this;
    }
    QQCrazyClick2.prototype.onAwake = function () {
        this._clickBtn = this.owner.getChildByName("ClickBtn");
        this.drgon = this.owner.getChildByName("panch");
        this._clickBtn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._clickBarOriginalWidth = this._clickBar.width;
        this._clickBar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
    };
    QQCrazyClick2.prototype.onUpdate = function () {
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickBar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickBar.width >= spd) {
                this._clickBar.width -= spd;
            }
            if ((this._clickBar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
    };
    QQCrazyClick2.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    QQCrazyClick2.prototype.OpenPrizeWindow = function () {
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    QQCrazyClick2.prototype.ShowBanner = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBox == 1) {
            QQMiniGameAPI_1.default.showAppBoxAd(function () {
            });
        }
    };
    QQCrazyClick2.prototype.ButtonClicked = function () {
        var _this = this;
        this._clickTime++;
        this._totalClickTime++;
        this.drgon.play(1, false);
        this.drgon.once(Laya.Event.STOPPED, this, function () {
            _this.drgon.play(0, true);
        });
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            if (this._bannerClicked) {
                return;
            }
            this._bannerClicked = true;
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._totalClickTime > this._totalClickTimer) {
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickBar.width = progress;
    };
    QQCrazyClick2.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickBar.width = this._clickBarOriginalWidth;
        this._clickBtn.visible = false;
        this.OpenPrizeWindow();
    };
    QQCrazyClick2.prototype.onDestroy = function () {
    };
    return QQCrazyClick2;
}(ViewBase_1.default));
exports.default = QQCrazyClick2;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../QQMiniGameAPI":39,"../../../View/ViewBase":76}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var QQTemplateViewBase = /** @class */ (function (_super) {
    __extends(QQTemplateViewBase, _super);
    function QQTemplateViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    QQTemplateViewBase.prototype.onAwake = function () {
    };
    QQTemplateViewBase.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    QQTemplateViewBase.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return QQTemplateViewBase;
}(ViewBase_1.default));
exports.default = QQTemplateViewBase;
},{"../ViewBase":76}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var TTGameFailViewTemplate = /** @class */ (function (_super) {
    __extends(TTGameFailViewTemplate, _super);
    function TTGameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._clickTag = false;
        _this._clickTimingTag = false;
        _this._moreGameBtn = null;
        _this._shareBtn = null;
        _this._backBtn = null;
        _this._okBtn = null;
        _this._videoBtn = null;
        return _this;
    }
    TTGameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._moreGameBtn = this._centerZone.getChildByName("MoreGameBtn");
        this._shareBtn = this._centerZone.getChildByName("ShareBtn");
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._okBtn = this._centerZone.getChildByName("OkBtn");
        this._videoBtn = this._centerZone.getChildByName("VideoBtn");
        this._moreGameBtn.visible = AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.moreGameSwitch == 1;
    };
    TTGameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._okBtn.y = yPos;
            this._videoBtn.y = yPos;
        }
        var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.luping == 1) {
            TTAPI_1.default.shareRecord(function () {
            });
        }
    };
    TTGameFailViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._okBtn.on(Laya.Event.CLICK, this, this.onOkBtn);
        this._videoBtn.on(Laya.Event.CLICK, this, this.onOkBtn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.on(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTGameFailViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._okBtn.off(Laya.Event.CLICK, this, this.onOkBtn);
        this._videoBtn.off(Laya.Event.CLICK, this, this.onOkBtn);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.off(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTGameFailViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    TTGameFailViewTemplate.prototype.onOkBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    TTGameFailViewTemplate.prototype.onVideoBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        TTAPI_1.default.shareRecord(function () {
        });
    };
    TTGameFailViewTemplate.prototype.BannerUp = function () {
        TTAPI_1.default.showBanner();
    };
    TTGameFailViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._okBtn.y = 720;
        this._videoBtn.y = 720;
    };
    TTGameFailViewTemplate.prototype.onMoreGameBtn = function () {
        TTAPI_1.default.showMoreGamesModal(function () {
        }, function () {
        });
    };
    TTGameFailViewTemplate.prototype.onShareBtn = function () {
        TTAPI_1.default.share(function () {
        });
    };
    TTGameFailViewTemplate.prototype.onDestroy = function () {
        TTAPI_1.default.hideBanner();
    };
    return TTGameFailViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = TTGameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":33,"../../../TTAPI":44,"../../../Utilit":46,"../TTTemplateViewBase":63}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var TTMainViewTemplate = /** @class */ (function (_super) {
    __extends(TTMainViewTemplate, _super);
    function TTMainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._startBtn = null;
        _this._levelNum = null;
        _this._moneyNum = null;
        _this._moreGameBtn = null;
        _this._shareBtn = null;
        return _this;
    }
    TTMainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._moreGameBtn = this._centerZone.getChildByName("MoreGameBtn");
        this._shareBtn = this._centerZone.getChildByName("ShareBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        this._startBtn = this._centerZone.getChildByName("StartBtn");
        this._levelNum = this._centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._moneyNum = this._centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
        this._moreGameBtn.visible = AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.moreGameSwitch == 1;
    };
    TTMainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._moneyNum.value = String(User_1.default.getMoney());
        this._levelNum.value = String(User_1.default.getLeveNum());
    };
    TTMainViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._startBtn.on(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.on(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTMainViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._startBtn.off(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.off(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTMainViewTemplate.prototype.onStartBtn = function () {
    };
    TTMainViewTemplate.prototype.onMoreGameBtn = function () {
        TTAPI_1.default.showMoreGamesModal(function () {
        }, function () {
        });
    };
    TTMainViewTemplate.prototype.onShareBtn = function () {
        TTAPI_1.default.share(function () {
        });
    };
    TTMainViewTemplate.prototype.onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._moneyNum.value = String(curr);
    };
    return TTMainViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = TTMainViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../TTAPI":44,"../../../User/User":45,"../../../Utilit":46,"../TTTemplateViewBase":63}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var TTAPI_1 = require("../../../TTAPI");
var TTCrazyClick = /** @class */ (function (_super) {
    __extends(TTCrazyClick, _super);
    function TTCrazyClick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._clickBar = null;
        _this._totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        return _this;
    }
    TTCrazyClick.prototype.onAwake = function () {
        this.drgon = this.owner.getChildByName("panch");
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._clickBarOriginalWidth = this._clickBar.width;
        this._clickBar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
    };
    TTCrazyClick.prototype.onUpdate = function () {
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickBar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickBar.width >= spd) {
                this._clickBar.width -= spd;
            }
            if ((this._clickBar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
    };
    TTCrazyClick.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    TTCrazyClick.prototype.OpenPrizeWindow = function () {
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            TTAPI_1.default.hideBanner();
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    TTCrazyClick.prototype.ShowBanner = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.kuangdianBanner == 1) {
            TTAPI_1.default.showBanner();
        }
    };
    TTCrazyClick.prototype.ButtonClicked = function () {
        var _this = this;
        this._clickTime++;
        this._totalClickTime++;
        this.drgon.play(1, false);
        this.drgon.once(Laya.Event.STOPPED, this, function () {
            _this.drgon.play(0, true);
        });
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            if (this._bannerClicked) {
                return;
            }
            this._bannerClicked = true;
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._totalClickTime > this._totalClickTimer) {
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickBar.width = progress;
    };
    TTCrazyClick.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickBar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this.OpenPrizeWindow();
    };
    TTCrazyClick.prototype.onDestroy = function () {
        TTAPI_1.default.hideBanner();
    };
    return TTCrazyClick;
}(ViewBase_1.default));
exports.default = TTCrazyClick;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../TTAPI":44,"../../../View/ViewBase":76}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TTTemplateViewBase = /** @class */ (function (_super) {
    __extends(TTTemplateViewBase, _super);
    function TTTemplateViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TTTemplateViewBase.prototype.onAwake = function () {
    };
    TTTemplateViewBase.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    TTTemplateViewBase.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return TTTemplateViewBase;
}(ViewBase_1.default));
exports.default = TTTemplateViewBase;
},{"../ViewBase":76}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Exprot2ViewTemplate = /** @class */ (function (_super) {
    __extends(Exprot2ViewTemplate, _super);
    function Exprot2ViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._continueBtn = null;
        _this._krqVLoopAd = null;
        return _this;
    }
    Exprot2ViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqVLoopAd = this.View.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._continueBtn = this.View.getChildByName("ContinueBtn");
        this._continueBtn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.getInstance().getAppSwitchData().continueBtnDelayTime * 1000, this, function () {
            self._continueBtn.visible = true;
        });
    };
    Exprot2ViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    Exprot2ViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    Exprot2ViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    Exprot2ViewTemplate.prototype.onContinueBtn = function () {
    };
    return Exprot2ViewTemplate;
}(TemplateViewBase_1.default));
exports.default = Exprot2ViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"../TemplateViewBase":73}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var ExportViewTemplate = /** @class */ (function (_super) {
    __extends(ExportViewTemplate, _super);
    function ExportViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._continueBtn = null;
        _this._krqVLoopAd = null;
        return _this;
    }
    ExportViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqVLoopAd = this.View.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._continueBtn = this._krqVLoopAd.Sprite.getChildByName("ContinueBtn");
        this._continueBtn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.getInstance().getAppSwitchData().continueBtnDelayTime * 1000, this, function () {
            self._continueBtn.visible = true;
        });
    };
    ExportViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ExportViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    ExportViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    ExportViewTemplate.prototype.onContinueBtn = function () {
    };
    return ExportViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ExportViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"../TemplateViewBase":73}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var GameManager_1 = require("../../../game/GameManager");
var GameFailViewTemplate = /** @class */ (function (_super) {
    __extends(GameFailViewTemplate, _super);
    function GameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._continueBtn = null;
        _this._rollSingleAds = new Array();
        _this._clickTag = false;
        _this._clickTimingTag = false;
        _this._banner = null;
        return _this;
    }
    GameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._continueBtn = this._centerZone.getChildByName("ContinueBtn");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var ad = this._centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this._rollSingleAds.push(ad);
        }
        if (WudianMgr_1.default.WudianFlag) {
            this.HistoryBtn.visible = false;
        }
    };
    GameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._continueBtn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1._rollSingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rollSingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
    };
    GameFailViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    GameFailViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    GameFailViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
        GameManager_1.default.Instance().LoadLevels();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MainView);
        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.GameFailView);
    };
    GameFailViewTemplate.prototype.onContinueBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
        GameManager_1.default.Instance().LoadLevels();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MainView);
        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.GameFailView);
    };
    GameFailViewTemplate.prototype.BannerUp = function () {
        var _this = this;
        WXADMgr_1.default.getBanner(function (banner) {
            if (null != _this._banner) {
                _this._banner.hide();
            }
            _this._banner = banner;
            if (null != _this._banner) {
                _this._banner.show();
            }
        });
    };
    GameFailViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._continueBtn.y = 720;
        this.HistoryBtn.visible = true;
    };
    GameFailViewTemplate.prototype.onDestroy = function () {
        if (null != this._banner) {
            this._banner.hide();
        }
        this._banner = null;
    };
    GameFailViewTemplate.prototype.onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MiniGameView, null, function (v) {
            self.hide();
            if (null != self._banner) {
                self._banner.hide();
            }
            v.onCloseEvent = function () {
                if (null != self.View && !self.View.destroyed) {
                    self.show();
                    if (null != self._banner) {
                        self._banner.show();
                    }
                }
            };
        });
    };
    return GameFailViewTemplate;
}(TemplateViewBase_1.default));
exports.default = GameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":18,"../../../Mgr/ViewMgr":31,"../../../Mgr/WXADMgr":32,"../../../Mgr/WudianMgr":33,"../../../Utilit":46,"../../../game/GameManager":82,"../TemplateViewBase":73}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var GameManager_1 = require("../../../game/GameManager");
var GameWinViewTemplate = /** @class */ (function (_super) {
    __extends(GameWinViewTemplate, _super);
    function GameWinViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._nextBtn = null;
        _this._rollSingleAds = new Array();
        _this._clickTag = false;
        _this._clickTimingTag = false;
        _this._banner = null;
        return _this;
    }
    GameWinViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._nextBtn = this._centerZone.getChildByName("NextBtn");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var ad = this._centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this._rollSingleAds.push(ad);
        }
        if (WudianMgr_1.default.WudianFlag) {
            this.HistoryBtn.visible = false;
        }
    };
    GameWinViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._nextBtn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1._rollSingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rollSingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
    };
    GameWinViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.on(Laya.Event.CLICK, this, this.onNextBtn);
    };
    GameWinViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.off(Laya.Event.CLICK, this, this.onNextBtn);
    };
    GameWinViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
        GameManager_1.default.Instance().LoadLevels();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MainView);
        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.GameWinView);
    };
    GameWinViewTemplate.prototype.onNextBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
        GameManager_1.default.Instance().LoadLevels();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.InGameView);
        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.GameWinView);
    };
    GameWinViewTemplate.prototype.BannerUp = function () {
        var _this = this;
        WXADMgr_1.default.getBanner(function (banner) {
            if (null != _this._banner) {
                _this._banner.hide();
            }
            _this._banner = banner;
            if (null != _this._banner) {
                _this._banner.show();
            }
        });
    };
    GameWinViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._nextBtn.y = 720;
        this.HistoryBtn.visible = true;
    };
    GameWinViewTemplate.prototype.onDestroy = function () {
        if (null != this._banner) {
            this._banner.hide();
        }
        this._banner = null;
    };
    GameWinViewTemplate.prototype.onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MiniGameView, null, function (v) {
            self.hide();
            if (null != self._banner) {
                self._banner.hide();
            }
            v.onCloseEvent = function () {
                if (null != self.View && !self.View.destroyed) {
                    self.show();
                    if (null != self._banner) {
                        self._banner.show();
                    }
                }
            };
        });
    };
    return GameWinViewTemplate;
}(TemplateViewBase_1.default));
exports.default = GameWinViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":18,"../../../Mgr/ViewMgr":31,"../../../Mgr/WXADMgr":32,"../../../Mgr/WudianMgr":33,"../../../Utilit":46,"../../../game/GameManager":82,"../TemplateViewBase":73}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var Utilit_1 = require("../../../Utilit");
var GameManager_1 = require("../../../game/GameManager");
var PlayerManager_1 = require("../../../game/PlayerManager");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var StorageMgr_1 = require("../../../Mgr/StorageMgr");
var InGameShowType;
(function (InGameShowType) {
    InGameShowType[InGameShowType["Normal"] = 0] = "Normal";
    InGameShowType[InGameShowType["NoLoopAd"] = 1] = "NoLoopAd";
    InGameShowType[InGameShowType["NoBannerAd"] = 2] = "NoBannerAd";
})(InGameShowType = exports.InGameShowType || (exports.InGameShowType = {}));
var InGameViewTemplate = /** @class */ (function (_super) {
    __extends(InGameViewTemplate, _super);
    function InGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._krqMain = null;
        _this._levelNum = null;
        _this._MoveStartPos = new Laya.Vector2(0, 0);
        _this._MoveChangePos = new Laya.Vector2(0, 0);
        return _this;
    }
    InGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._krqMain = this.View.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        this._MoveNode = this.View.getChildByName("MoveNode");
        this.AddMouseEventOn();
        this._levelNum = this._centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
    };
    InGameViewTemplate.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        if (null != data && null != data.showType) {
            var showType = data.showType;
            switch (showType) {
                case InGameShowType.Normal:
                    this._krqMain.switchState(KRQ_Main_1.KRQ_MainState.Normal);
                    break;
                case InGameShowType.NoLoopAd:
                    this._krqMain.switchState(KRQ_Main_1.KRQ_MainState.NoLoopAd);
                    break;
                case InGameShowType.NoBannerAd:
                    this._krqMain.switchState(KRQ_Main_1.KRQ_MainState.NoBannerAd);
                    break;
            }
        }
    };
    InGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._levelNum.value = String(StorageMgr_1.default.getNowLevel());
    };
    InGameViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    InGameViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    InGameViewTemplate.prototype.AddMouseEventOn = function () {
        this._MoveNode.on(Laya.Event.MOUSE_DOWN, this, this.MouseDownHandler);
        this._MoveNode.on(Laya.Event.MOUSE_UP, this, this.MouseDownHandler);
        this._MoveNode.on(Laya.Event.MOUSE_OUT, this, this.MouseDownHandler);
    };
    InGameViewTemplate.prototype.offMouseDownHandler = function () {
        // console.log("取消全部事件")
        this._MoveNode.off(Laya.Event.MOUSE_DOWN, this, this.MouseDownHandler);
        this._MoveNode.off(Laya.Event.MOUSE_UP, this, this.MouseDownHandler);
        this._MoveNode.off(Laya.Event.MOUSE_OUT, this, this.MouseDownHandler);
        this._MoveNode.off(Laya.Event.MOUSE_MOVE, this, this.MouseDownHandler);
    };
    InGameViewTemplate.prototype.MouseDownHandler = function (e) {
        if (e.type == Laya.Event.MOUSE_DOWN) {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.MOUSE_DOWN);
            this._MoveStartPos.x = e.stageX;
            this._MoveStartPos.y = e.stageY;
            this._MoveNode.on(Laya.Event.MOUSE_MOVE, this, this.MouseMoveHandler);
        }
        else if (e.type == Laya.Event.MOUSE_UP || e.type == Laya.Event.MOUSE_OUT) {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.MOUSE_UP);
            this._MoveNode.off(Laya.Event.MOUSE_MOVE, this, this.MouseMoveHandler);
        }
    };
    InGameViewTemplate.prototype.MouseMoveHandler = function (e) {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.MOUSE_UP);
        var moveEndX = e.stageX;
        var moveEndY = e.stageY;
        this._MoveChangePos.x = moveEndX - this._MoveStartPos.x;
        this._MoveChangePos.y = moveEndY - this._MoveStartPos.y;
        this._MoveStartPos.x = e.stageX;
        this._MoveStartPos.y = e.stageY;
        var PlayNode = GameManager_1.default.Instance()._Player;
        if (Math.abs(this._MoveChangePos.x) > Math.abs(this._MoveChangePos.y) && this._MoveChangePos.x > 0) {
            // console.log("从左到右", this._MoveChangePos.x);
            PlayNode.getComponent(PlayerManager_1.default).PlayMove("Left", -this._MoveChangePos.x / 2);
        }
        else if (Math.abs(this._MoveChangePos.x) > Math.abs(this._MoveChangePos.y) && this._MoveChangePos.x < 0) {
            // console.log("从右到左", this._MoveChangePos.x);
            PlayNode.getComponent(PlayerManager_1.default).PlayMove("Right", -this._MoveChangePos.x / 2);
        }
    };
    return InGameViewTemplate;
}(TemplateViewBase_1.default));
exports.default = InGameViewTemplate;
},{"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../KRQ/ViewCom/KRQ_Main":23,"../../../Mgr/StorageMgr":30,"../../../Utilit":46,"../../../game/GameManager":82,"../../../game/PlayerManager":83,"../TemplateViewBase":73}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var StorageMgr_1 = require("../../../Mgr/StorageMgr");
var MainViewTemplate = /** @class */ (function (_super) {
    __extends(MainViewTemplate, _super);
    function MainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krqMain = null;
        _this._centerZone = null;
        _this._startBtn = null;
        _this._levelNum = null;
        _this._moneyNum = null;
        return _this;
    }
    MainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqMain = this.View.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        this._centerZone = this.View.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        this._startBtn = this._centerZone.getChildByName("StartBtn");
        this._levelNum = this._centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._moneyNum = this._centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    MainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._moneyNum.value = String(User_1.default.getMoney());
        // this._levelNum.value = String(User.getLeveNum());
        this._levelNum.value = String(StorageMgr_1.default.getNowLevel());
    };
    MainViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._startBtn.on(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    MainViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._startBtn.off(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    MainViewTemplate.prototype.onStartBtn = function () {
        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.MainView);
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.InGameView);
    };
    MainViewTemplate.prototype.onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._moneyNum.value = String(curr);
    };
    return MainViewTemplate;
}(TemplateViewBase_1.default));
exports.default = MainViewTemplate;
},{"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../KRQ/ViewCom/KRQ_Main":23,"../../../Mgr/StorageMgr":30,"../../../Mgr/ViewMgr":31,"../../../User/User":45,"../../../Utilit":46,"../TemplateViewBase":73}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var KRQ_History_1 = require("../../../KRQ/Com/KRQ_History/KRQ_History");
var MiniGameViewTemplate = /** @class */ (function (_super) {
    __extends(MiniGameViewTemplate, _super);
    function MiniGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krqhistory = null;
        return _this;
    }
    MiniGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqhistory = this.View.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        this._krqhistory.OnBackBtnClick = function () {
            self.closeView();
        };
    };
    MiniGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    MiniGameViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    MiniGameViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return MiniGameViewTemplate;
}(ViewBase_1.default));
exports.default = MiniGameViewTemplate;
},{"../../../KRQ/Com/KRQ_History/KRQ_History":12,"../../ViewBase":76}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../../OPPOAPI");
var OPPONativeAdViewTemplate = /** @class */ (function (_super) {
    __extends(OPPONativeAdViewTemplate, _super);
    function OPPONativeAdViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._nativeAd = null;
        _this._curAdItem = null;
        return _this;
    }
    OPPONativeAdViewTemplate.prototype.onAwake = function () {
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._display = this._centerZone.getChildByName("Display");
        this._okBtn = this._centerZone.getChildByName("OkBtn");
        this._closeBtn = this._centerZone.getChildByName("CloseBtn");
        this._bg = this.owner.getChildByName("BG");
    };
    OPPONativeAdViewTemplate.prototype.onEnable = function () {
        var _this = this;
        _super.prototype.onEnable.call(this);
        this.loadAd();
        this._bg.height = Laya.stage.height;
        this._closeBtn.visible = false;
        Laya.timer.once(AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.btnShowTimer, this, function () {
            _this._closeBtn.visible = true;
        });
    };
    OPPONativeAdViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._okBtn.on(Laya.Event.CLICK, this, this.onOkBtn);
        this._closeBtn.on(Laya.Event.CLICK, this, this.onCloseBtn);
        this._display.on(Laya.Event.CLICK, this, this.onDisplayClick);
    };
    OPPONativeAdViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._okBtn.off(Laya.Event.CLICK, this, this.onOkBtn);
        this._closeBtn.off(Laya.Event.CLICK, this, this.onCloseBtn);
        this._display.off(Laya.Event.CLICK, this, this.onDisplayClick);
    };
    OPPONativeAdViewTemplate.prototype.loadAd = function () {
        var self = this;
        if (Laya.Browser.onQGMiniGame) {
            if (this._nativeAd) {
                this._nativeAd.destroy();
                this._nativeAd = null;
            }
            this._curAdItem = null;
            this._nativeAd = qg.createNativeAd({
                posId: OPPOAPI_1.default.NativeAdId
            });
            this._nativeAd.load();
            this._nativeAd.onLoad(function (res) {
                console.log("原生广告加载成功：", res);
                var adlist = res.adList;
                for (var i = 0; i < adlist.length; ++i) {
                    var ad = adlist[i];
                    console.log("原生广告数据：", i);
                    for (var key in ad) {
                        console.log(key, ad[key]);
                    }
                }
                self._curAdItem = adlist[Math.floor(Math.random() * adlist.length)];
                if (null != self._curAdItem) {
                    for (var i = 0; i < self._curAdItem.imgUrlList.length; ++i) {
                        console.log("imgUrlList : ", i + " ", self._curAdItem.imgUrlList[i]);
                    }
                    var imgulr = self._curAdItem.imgUrlList[Math.floor(Math.random() * self._curAdItem.imgUrlList.length)];
                    self._display.loadImage(imgulr);
                    self._nativeAd.reportAdShow({
                        adId: self._curAdItem.adId
                    });
                    console.log("加载图片", imgulr);
                    console.log("点击上报！！！");
                }
                self._centerZone.visible = true;
            });
            this._nativeAd.onError(function (res) {
                console.log("原生广告加载失败：", res);
                for (var key in res) {
                    console.log(key, res[key]);
                }
                self.closeView();
            });
            this._centerZone.visible = false;
        }
    };
    OPPONativeAdViewTemplate.prototype.onCloseBtn = function () {
        this.closeView();
    };
    OPPONativeAdViewTemplate.prototype.onOkBtn = function () {
        if (Math.random() * 100 <= AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.yuansheng) {
            console.log("进入变态广告");
            this.onDisplayClick();
        }
        this.closeView();
    };
    OPPONativeAdViewTemplate.prototype.onDisplayClick = function () {
        if (null != this._nativeAd && null != this._curAdItem) {
            console.log("点击上报！！！");
            this._nativeAd.reportAdClick({
                adId: this._curAdItem.adId
            });
        }
    };
    OPPONativeAdViewTemplate.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        if (Laya.Browser.onQGMiniGame) {
            if (this._nativeAd) {
                this._nativeAd.destroy();
            }
            this._nativeAd = null;
            this._curAdItem = null;
        }
    };
    return OPPONativeAdViewTemplate;
}(ViewBase_1.default));
exports.default = OPPONativeAdViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../OPPOAPI":38,"../../ViewBase":76}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var RewardViewTemplate = /** @class */ (function (_super) {
    __extends(RewardViewTemplate, _super);
    function RewardViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._rewardBtn = null;
        _this._skipBtn = null;
        return _this;
    }
    RewardViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._rewardBtn = this._centerZone.getChildByName("RewradBtn");
        this._skipBtn = this._centerZone.getChildByName("SkipBtn");
    };
    RewardViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    RewardViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._rewardBtn.on(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skipBtn.on(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    RewardViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._rewardBtn.off(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skipBtn.off(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    RewardViewTemplate.prototype.onRewardBtn = function () {
    };
    RewardViewTemplate.prototype.onSkipBtn = function () {
    };
    return RewardViewTemplate;
}(TemplateViewBase_1.default));
exports.default = RewardViewTemplate;
},{"../TemplateViewBase":73}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var TemplateViewBase = /** @class */ (function (_super) {
    __extends(TemplateViewBase, _super);
    function TemplateViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._historyBtn = null;
        _this._topZone = null;
        return _this;
    }
    Object.defineProperty(TemplateViewBase.prototype, "HistoryBtn", {
        get: function () {
            if (null == this._historyBtn) {
                this._historyBtn = this.TopZone.getChildByName("HistoryBtn");
            }
            return this._historyBtn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TemplateViewBase.prototype, "TopZone", {
        get: function () {
            if (null == this._topZone) {
                this._topZone = this.View.getChildByName("TopZone");
            }
            return this._topZone;
        },
        enumerable: true,
        configurable: true
    });
    TemplateViewBase.prototype.onAwake = function () {
        this._topZone = this.View.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = this._topZone.top + 75;
        }
        this._historyBtn = this._topZone.getChildByName("HistoryBtn");
        if (Laya.Browser.onQGMiniGame) {
            this._historyBtn.visible = false;
        }
    };
    TemplateViewBase.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this.HistoryBtn.on(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    TemplateViewBase.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this.HistoryBtn.off(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    TemplateViewBase.prototype.onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MiniGameView, null, function (v) {
            self.hide();
            v.onCloseEvent = function () {
                if (null != self.View && !self.View.destroyed) {
                    self.show();
                }
            };
        });
    };
    return TemplateViewBase;
}(ViewBase_1.default));
exports.default = TemplateViewBase;
},{"../../Mgr/ViewMgr":31,"../../Utilit":46,"../ViewBase":76}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TipsView = /** @class */ (function (_super) {
    __extends(TipsView, _super);
    function TipsView() {
        return _super.call(this) || this;
    }
    TipsView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._bg.x = Laya.stage.width / 2 - this._bg.width / 2;
        this._tipsText = this._bg.getChildByName("Text");
    };
    TipsView.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        this.setTipsMsg(data);
        Laya.timer.clearAll(this);
        var self = this;
        Laya.timer.once(3000, this, function () {
            self.closeView();
        });
    };
    TipsView.prototype.setTipsMsg = function (msg) {
        this._tipsText.text = msg;
    };
    return TipsView;
}(ViewBase_1.default));
exports.default = TipsView;
},{"../ViewBase":76}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TwinkleSprite = /** @class */ (function (_super) {
    __extends(TwinkleSprite, _super);
    function TwinkleSprite() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this._aniForward = false;
        _this._fontSize = 25;
        _this._originSize = 1;
        return _this;
    }
    TwinkleSprite.prototype.onAwake = function () {
        this._displaySp = this.owner;
        this._disText = this.owner.getChildByName("TitelText");
        this._originSize = this._displaySp.scaleX;
        if (this._disText != null) {
            this._disText.text = "";
            this._fontSize = this._disText.fontSize;
        }
    };
    TwinkleSprite.prototype.onEnable = function () {
        this._displaySp.scale(this._originSize, this._originSize);
    };
    TwinkleSprite.prototype.onDisable = function () {
    };
    TwinkleSprite.prototype.onUpdate = function () {
        this.displayAni();
    };
    TwinkleSprite.prototype.displayAni = function () {
        if (!this._aniForward) {
            var scale = this._displaySp.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX <= this.TwinkleMinSize * this._originSize) {
                this._aniForward = true;
            }
        }
        else {
            var scale = this._displaySp.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX >= this.TwinkleMaxSize * this._originSize) {
                this._aniForward = false;
            }
        }
    };
    return TwinkleSprite;
}(Laya.Script));
exports.default = TwinkleSprite;
},{}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var IViewStateListener_1 = require("./IViewStateListener");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var ViewBase = /** @class */ (function (_super) {
    __extends(ViewBase, _super);
    function ViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onCloseEvent = null;
        _this.onOpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.ViewDef.None;
        _this._data = {};
        return _this;
    }
    Object.defineProperty(ViewBase.prototype, "View", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    ViewBase.prototype.onAwake = function () {
        this.View.autoDestroyAtClosed = true;
    };
    ViewBase.prototype.onEnable = function () {
        this.addEvent();
    };
    ViewBase.prototype.onDisable = function () {
        this.removeEvent();
    };
    ViewBase.prototype.onDestroy = function () {
        this.removeEvent();
    };
    ViewBase.prototype.openView = function (data) {
        this._data = data;
        this.show();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewOpen, { view: this._viewDef });
        if (this.onOpenEvent) {
            this.onOpenEvent();
        }
    };
    ViewBase.prototype.addEvent = function () {
    };
    ViewBase.prototype.removeEvent = function () {
        Laya.timer.clearAll(this);
    };
    ViewBase.prototype.closeView = function () {
        ViewMgr_1.default.instance.closeView(this._viewDef);
    };
    ViewBase.prototype.hide = function () {
        var _this = this;
        this.View.visible = false;
        this.onHide();
        Utilit_1.default.forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewHide(_this);
                    }
                }
            }
        });
    };
    ViewBase.prototype.show = function () {
        var _this = this;
        this.View.visible = true;
        this.onShow();
        Utilit_1.default.forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewShow(_this);
                    }
                }
            }
        });
    };
    ViewBase.prototype.viewIsHide = function () {
        return this.View.visible;
    };
    ViewBase.prototype.onHide = function () { };
    ViewBase.prototype.onShow = function () { };
    ViewBase.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewClose, { view: this._viewDef });
        if (this.onCloseEvent) {
            this.onCloseEvent();
        }
    };
    return ViewBase;
}(Laya.Script));
exports.default = ViewBase;
},{"../Event/EventDef":6,"../Event/EventMgr":7,"../Mgr/ViewMgr":31,"../Utilit":46,"./IViewStateListener":50}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI = /** @class */ (function () {
    function WXAPI() {
    }
    WXAPI.wxLogin = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    WXAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    WXAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (WXAPI._onRewardedVideoAdFailed) {
            WXAPI._onRewardedVideoAdFailed();
        }
    };
    WXAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    WXAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(WXAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(WXAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(WXAPI.onRewardedVideoAdClose);
        WXAPI._isRegRewardedVideoAdEvent = true;
    };
    WXAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            WXAPI._onRewardedVideoAdClose = onAdClose;
            WXAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: WXAPI.adUnitId,
            });
            if (!WXAPI._isRegRewardedVideoAdEvent) {
                WXAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    WXAPI.navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    WXAPI.share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            WXAPI._onShow = function () {
                Laya.Browser.window["wx"].offShow(WXAPI._onShow);
                WXAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(WXAPI._onShow);
            this._lastShareTime = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    WXAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: WXAPI.InsAdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    WXAPI.getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    WXAPI.SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //检测更新
    WXAPI.checkUpdate = function () {
        if (Laya.Browser.onMiniGame) {
            var updateManager = Laya.Browser.window["wx"].getUpdateManager();
            updateManager.onCheckForUpdate(function (res) {
                console.log("是否需要更新 : ", res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                Laya.Browser.window["wx"].showModal({
                    title: '更新提示',
                    content: '新版本已经准备好，是否重启小游戏？',
                    success: function (res) {
                        if (res.confirm) {
                            updateManager.applyUpdate();
                        }
                    }
                });
            });
            updateManager.onUpdateFailed(function () {
                console.log("新版本下载失败!!!");
            });
        }
    };
    WXAPI.adUnitId = "adunit-eef36f84c44bbdc1";
    WXAPI.bannerAdUnitId = "adunit-440e21cc02c0d282";
    WXAPI.InsAdUnitId = "adunit-440e21cc02c0d282";
    //-------------------------激励视频---------------------------------
    WXAPI._isRegRewardedVideoAdEvent = false;
    WXAPI._onRewardedVideoAdFailed = null;
    WXAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    WXAPI._onShow = null;
    WXAPI._lastShareTime = 0;
    return WXAPI;
}());
exports.default = WXAPI;
},{}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CollisionAnimator = /** @class */ (function (_super) {
    __extends(CollisionAnimator, _super);
    function CollisionAnimator() {
        var _this = _super.call(this) || this;
        _this.Distance = -1;
        _this.IsCollision = false;
        _this.collisionNode = null;
        return _this;
    }
    CollisionAnimator.prototype.onAwake = function () {
        this._mOwner = this.owner;
        this.GetPlayAnimator();
    };
    CollisionAnimator.prototype.onDisable = function () {
    };
    CollisionAnimator.prototype.GetPlayAnimator = function () {
        if (this._mOwner.name == "xiaoqiuBox") {
            this.PlayAnimator = this._mOwner.parent.getChildByName("xiaoqiu").getComponent(Laya.Animator);
            this.Effects = this._mOwner.parent.getChildByName("FX_YanWu");
            this.Distance = 0.50;
        }
        else if (this._mOwner.name == "dahuojiBox") {
            this.PlayAnimator = this._mOwner.parent.getChildByName("dahuoji").getComponent(Laya.Animator);
            this.Distance = 0.20;
        }
        else if (this._mOwner.name == "xiaohuocheBox") {
            this.PlayAnimator = this._mOwner.parent.getChildByName("xiaohuoche").getComponent(Laya.Animator);
            this.Distance = 0.20;
        }
        else if (this._mOwner.name == "juziBox") {
            this.PlayAnimator = this._mOwner.parent.getChildByName("juzi").getComponent(Laya.Animator);
            this.Distance = 0.20;
        }
        else if (this._mOwner.name == "bingkuaiBox") {
            this.PlayAnimator = this._mOwner.parent.getChildByName("bingkuai").getComponent(Laya.Animator);
            this.Distance = 0.40;
        }
    };
    CollisionAnimator.prototype.onCollisionEnter = function (collision) {
        this.IsCollision = true;
        this.collisionNode = collision.other.owner;
    };
    CollisionAnimator.prototype.onCollisionExit = function (collision) {
        this.IsCollision = false;
        this.collisionNode = null;
    };
    CollisionAnimator.prototype.v3GetDistance = function (d1, d2) {
        var Distance = Math.sqrt(Math.pow(d1.x - d2.x, 2) + Math.pow(d1.z - d2.z, 2));
        // console.log("------------------------------- Distance:", Distance.toFixed(2));
        return Number(Distance.toFixed(2));
    };
    CollisionAnimator.prototype.onUpdate = function () {
        if (this.IsCollision && this.collisionNode != null) {
            var Distance = this.v3GetDistance(this._mOwner.transform.position, this.collisionNode.transform.position);
            if (Distance <= this.Distance) {
                this.PlayAnimator.play("Take 001");
                this._mOwner.active = false;
                this.IsCollision = false;
                this.collisionNode = null;
                if (this.Effects != null && this.Effects.active == false) {
                    this.Effects.active = true;
                }
            }
        }
    };
    return CollisionAnimator;
}(Laya.Script3D));
exports.default = CollisionAnimator;
},{}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DistanceManager;
(function (DistanceManager) {
    DistanceManager[DistanceManager["MaxLevel"] = 5] = "MaxLevel";
    DistanceManager[DistanceManager["yaziBox"] = 1.32] = "yaziBox";
    DistanceManager[DistanceManager["zuqiuBox"] = 1.49] = "zuqiuBox";
    DistanceManager[DistanceManager["keleBox"] = 1.08] = "keleBox";
    DistanceManager[DistanceManager["yagaoBox"] = 0.86] = "yagaoBox";
    DistanceManager[DistanceManager["zhibeiBox"] = 1.2] = "zhibeiBox";
    DistanceManager[DistanceManager["MilkCubeBox"] = 1.37] = "MilkCubeBox";
    DistanceManager[DistanceManager["qiqiuBox"] = 1.02] = "qiqiuBox";
    DistanceManager[DistanceManager["zuanshiBox"] = 1] = "zuanshiBox";
    DistanceManager[DistanceManager["bingqilingBox"] = 1] = "bingqilingBox";
    DistanceManager[DistanceManager["zhuangyuBox"] = 1] = "zhuangyuBox";
    DistanceManager[DistanceManager["jianpanBox"] = 1] = "jianpanBox";
    DistanceManager[DistanceManager["cunqianguanBox"] = 1.28] = "cunqianguanBox";
    DistanceManager[DistanceManager["canjiaojiBox"] = 1.14] = "canjiaojiBox";
    DistanceManager[DistanceManager["dengBox"] = 0.76] = "dengBox";
    DistanceManager[DistanceManager["mofangBox"] = 1.15] = "mofangBox";
})(DistanceManager = exports.DistanceManager || (exports.DistanceManager = {}));
},{}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var TriggerAnimator = /** @class */ (function (_super) {
    __extends(TriggerAnimator, _super);
    function TriggerAnimator() {
        var _this = _super.call(this) || this;
        _this.playerAnimatorKTime = 0;
        _this.playerAnimatorHTime = 1;
        _this.Distance = -1;
        _this.IsPlayAni01Ani = false;
        _this.IsPlayAni02Ani = false;
        _this.IsCollision = false;
        _this.collisionNode = null;
        _this.CollisionBox = null;
        _this.playerAnimatorTime = 0;
        _this.Process1 = 1;
        _this.Process2 = 1;
        return _this;
    }
    TriggerAnimator.prototype.onAwake = function () {
        this._mOwner = this.owner;
        this.GetPlayAnimator();
    };
    TriggerAnimator.prototype.onDisable = function () {
    };
    TriggerAnimator.prototype.GetPlayAnimator = function () {
        // console.log("------------------------------- this._mOwner.name:", this._mOwner.name);
        if (this._mOwner.name == "yaziBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("yz1d");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("yz2d");
            this.PlayAni01 = this.PlayAniNode01.getChildByName("xiaoyazi03").getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getChildByName("xiaoyazi04").getComponent(Laya.Animator);
            this.Process1 = 0.8;
            this.Process2 = 1;
        }
        else if (this._mOwner.name == "zuqiuBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("zuqiu01");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("zuqiu02");
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0.6;
            this.Process2 = 0.8;
        }
        else if (this._mOwner.name == "keleBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("kele");
            this.PlayAniNode02 = this.PlayAniNode01;
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Effects = this._mOwner.parent.getChildByName("FX_kele");
            this.Process1 = 0.6;
            this.Process2 = 0.8;
        }
        else if (this._mOwner.name == "yagaoBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("yagao");
            this.PlayAniNode02 = this.PlayAniNode01;
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Effects = this._mOwner.parent.getChildByName("FX_YaGao");
            this.Process1 = 0.6;
            this.Process2 = 0.7;
        }
        else if (this._mOwner.name == "zhibeiBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("zhibei");
            this.PlayAniNode02 = this.PlayAniNode01;
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0.6;
            this.Process2 = 0.8;
        }
        else if (this._mOwner.name == "MilkCubeBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("MilkBox");
            this.PlayAniNode02 = this.PlayAniNode01;
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0.6;
            this.Process2 = 0.8;
        }
        else if (this._mOwner.name == "qiqiuBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("qiqiu");
            this.PlayAniNode02 = this.PlayAniNode01;
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Effects = this._mOwner.parent.getChildByName("FX_QiQiu");
            this.Process1 = 0.2;
            this.Process2 = 0.25;
        }
        else if (this._mOwner.name == "bingqilingBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("bingqiling");
            this.PlayAniNode02 = this.PlayAniNode01;
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0.2;
            this.Process2 = 0.25;
        }
        else if (this._mOwner.name == "zhuangyuBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("zhuangyu01");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("zhuangyu02");
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0.8;
            this.Process2 = 1;
        }
        else if (this._mOwner.name == "jianpanBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("jianpan");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("jianpan");
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0;
            this.Process2 = 0.5;
        }
        else if (this._mOwner.name == "cunqianguanBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("cunqianguan");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("cunqianguan");
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0;
            this.Process2 = 0;
        }
        else if (this._mOwner.name == "canjiaojiBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("canjiaoji");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("canjiaoji");
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0.2;
            this.Process2 = 0.5;
        }
        else if (this._mOwner.name == "dengBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("deng");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("deng");
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.CollisionBox = this._mOwner.parent.getChildByName("dengBox1");
            this.Process1 = 0;
            this.Process2 = 0.38;
        }
        else if (this._mOwner.name == "mofangBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("mofang");
            this.PlayAniNode02 = this._mOwner.parent.getChildByName("mofang");
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.CollisionBox = this._mOwner.parent.getChildByName("mofangBox1");
            this.Process1 = 0;
            this.Process2 = 0.34;
        }
        else if (this._mOwner.name == "zuanshiBox") {
            this.PlayAniNode01 = this._mOwner.parent.getChildByName("zuanshi");
            this.PlayAniNode02 = this.PlayAniNode01;
            this.PlayAni01 = this.PlayAniNode01.getComponent(Laya.Animator);
            this.PlayAni02 = this.PlayAniNode02.getComponent(Laya.Animator);
            this.Process1 = 0;
            this.Process2 = 0;
        }
        this.PlayAnimator = this.PlayAni01;
    };
    TriggerAnimator.prototype.setDistance = function (Distance) {
        if (this.Distance == -1) {
            this.Distance = Distance.toFixed(2);
        }
    };
    TriggerAnimator.prototype.playerAnimation = function (is, name) {
        // console.log("------------------------------- this.IsCollision:", this.IsCollision);
        // console.log("------------------------------- this.collisionNode:", this.collisionNode);
        if (this.IsPlayAni02Ani) {
            return;
        }
        if (is) {
            if (this.playerAnimatorKTime < 1) {
                this.PlayAnimator.speed = 1;
                // this.playerAnimatorKTime += 0.005;
                // this.playerAnimatorHTime -= 0.005;
                this.PlayAnimator.play(name, 0, this.playerAnimatorKTime);
                this.PlayAnimator._update();
                this.PlayAnimator.speed = 0;
                if (this.playerAnimatorHTime < 0) {
                    this.playerAnimatorHTime = 0;
                }
                if (this.playerAnimatorKTime > 1) {
                    this.playerAnimatorKTime = 1;
                }
            }
        }
        else {
            if (this.playerAnimatorHTime < 1) {
                this.PlayAnimator.speed = 1;
                this.playerAnimatorHTime += 0.05;
                this.playerAnimatorKTime -= 0.05;
                this.PlayAnimator.play(name, 0, this.playerAnimatorKTime);
                this.PlayAnimator._update();
                this.PlayAnimator.speed = 0;
                if (this.playerAnimatorHTime > 1) {
                    this.playerAnimatorHTime = 1;
                }
                if (this.playerAnimatorKTime < 0) {
                    this.playerAnimatorKTime = 0;
                }
            }
        }
    };
    TriggerAnimator.prototype.onTriggerEnter = function (other) {
        if (this.IsPlayAni02Ani) {
            return;
        }
        this.IsCollision = true;
        this.collisionNode = other.owner;
    };
    TriggerAnimator.prototype.onTriggerExit = function (other) {
        this.IsCollision = false;
        this.collisionNode = null;
    };
    TriggerAnimator.prototype.v3GetDistance = function (d1, d2) {
        var Distance = Math.sqrt(Math.pow(d1.x - d2.x, 2) + Math.pow(d1.z - d2.z, 2));
        // console.log("------------------------------- Distance:", Distance.toFixed(2));
        return Distance.toFixed(2);
    };
    TriggerAnimator.prototype.GetProcess = function (Distance) {
        var Process = Number((1 - (Distance / this.Distance)).toFixed(2));
        this.playerAnimatorKTime = Process;
        if (this._mOwner.name == "keleBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "yagaoBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "zhibeiBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "MilkCubeBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "bingqilingBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "zhuangyuBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "jianpanBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "cunqianguanBox" && this.playerAnimatorKTime <= this.playerAnimatorTime ||
            this._mOwner.name == "dengBox" && this.playerAnimatorKTime <= this.playerAnimatorTime) {
            this.playerAnimatorKTime = this.playerAnimatorTime;
        }
        if (Number(Process.toFixed(1)) >= this.Process1) {
            this.PlayAniNode01.active = false;
            this.PlayAniNode02.active = true;
        }
        // console.log("------------------------------- Process111:", Number(Process.toFixed(1)));
        if (Number(Process.toFixed(1)) >= this.Process2) {
            this.IsPlayAni01Ani = true;
            this.playerAnimatorTime = this.playerAnimatorKTime;
            if (this.Effects != null && this.Effects.active == false) {
                this.Effects.active = true;
            }
        }
        // console.log("------------------------------- Process:" + this.Distance + ",Process:", Process);
        if (this._mOwner.name == "keleBox" ||
            this._mOwner.name == "yagaoBox" ||
            this._mOwner.name == "zhibeiBox" ||
            this._mOwner.name == "MilkCubeBox" ||
            this._mOwner.name == "zuanshiBox" ||
            this._mOwner.name == "bingqilingBox" ||
            this._mOwner.name == "jianpanBox") {
            this.IsPlayAni01Ani = false;
        }
    };
    TriggerAnimator.prototype.IsCollisionBox = function () {
        var Distance = Number(this.v3GetDistance(this._mOwner.transform.position, this.collisionNode.transform.position));
        var Process = Number((1 - (Distance / this.Distance)).toFixed(2));
        // console.log("------------------------------- Process:", Process);
        if (Process >= this.Process2) {
            this.PlayAni01.play("Take 001");
            if (this.CollisionBox != null) {
                this.CollisionBox.active = false;
            }
        }
    };
    TriggerAnimator.prototype.onUpdate = function () {
        if (this.IsCollision && this.collisionNode != null) {
            if (this._mOwner.name == "zuanshiBox") {
                this.PlayAni01.play("Take 001");
                return;
            }
            if (this._mOwner.name == "dengBox" || this._mOwner.name == "mofangBox") {
                this.IsCollisionBox();
                return;
            }
            var Distance = this.v3GetDistance(this._mOwner.transform.position, this.collisionNode.transform.position);
            this.GetProcess(Distance);
            if (!this.IsPlayAni01Ani) {
                this.playerAnimation(true, "Take 001");
            }
            else {
                if (this._mOwner.name == "qiqiuBox") {
                    this.playerAnimatorTime = 0.85;
                    this.playerAnimatorKTime = this.playerAnimatorTime;
                    this.playerAnimation(true, "Take 001");
                    this.IsCollision = false;
                    this.collisionNode = null;
                    this.IsPlayAni02Ani = true;
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.BaoZha);
                    if (this.Effects != null && this.Effects.active == false) {
                        this.Effects.active = true;
                    }
                    return;
                }
                if (this._mOwner.name == "keleBox" ||
                    this._mOwner.name == "yagaoBox" ||
                    this._mOwner.name == "zhibeiBox" ||
                    this._mOwner.name == "MilkCubeBox" ||
                    this._mOwner.name == "zuanshiBox") {
                    return;
                }
                this.PlayAniNode01.active = false;
                this.PlayAniNode02.active = true;
                this.PlayAni02.play("Take 001");
                this.IsCollision = false;
                this.collisionNode = null;
                this.IsPlayAni02Ani = true;
                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.BaoZha);
            }
        }
    };
    return TriggerAnimator;
}(Laya.Script3D));
exports.default = TriggerAnimator;
},{"../../Event/EventDef":6,"../../Event/EventMgr":7}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CameraManager = /** @class */ (function (_super) {
    __extends(CameraManager, _super);
    function CameraManager() {
        var _this = _super.call(this) || this;
        _this._Stargensui = false;
        _this.StartPont = new Laya.Vector3(4.6, 2.7, 24.8);
        return _this;
    }
    CameraManager.Instance = function () {
        return this._instance;
    };
    CameraManager.prototype.onAwake = function () {
        CameraManager._instance = this;
        this._mCamera = this.owner;
        this._mCamera.transform.position = this.StartPont;
        console.log("----------------------------------------- this._mCamera.transform.position:", this._mCamera.transform.position);
    };
    CameraManager.prototype.onDisable = function () {
    };
    //获取摄像机与玩家的差值
    CameraManager.prototype.Timerweizhi = function () {
        this._Distancepla.y += 0.8;
        this._Distancepla.z += 0.8;
        var camerapoin = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.add(this._Distancepla, this._FollowTar.transform.position, camerapoin);
        Laya.Tween.clearAll(this._mCamera);
        Laya.Tween.to(this._mCamera.transform, { localPositionY: this._mCamera.transform.position.y + 0.8, localPositionZ: this._mCamera.transform.position.z + 0.8 }, 500);
    };
    CameraManager.prototype.onLateUpdate = function () {
        if (this._Stargensui == true) {
            this.Cameramove();
        }
    };
    CameraManager.prototype.setFollowTar = function (FollowTar) {
        if (FollowTar == null) {
            return;
        }
        this._mCamera.transform.position = this.StartPont;
        this._FollowTar = FollowTar;
        this.disX = this._mCamera.transform.position.x - this._FollowTar.transform.position.x;
        this.disY = this._mCamera.transform.position.y - this._FollowTar.transform.position.y;
        this.disZ = this._mCamera.transform.position.z - this._FollowTar.transform.position.z;
    };
    //开启跟随
    CameraManager.prototype.Startgensui = function (Stargensui) {
        this._Stargensui = Stargensui;
    };
    //摄像机跟随
    CameraManager.prototype.Cameramove = function () {
        if (this._FollowTar == null) {
            return;
        }
        var lerpValue = 1;
        var position = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.lerp(this._mCamera.transform.position, new Laya.Vector3(this._FollowTar.transform.position.x + this.disX, this._FollowTar.transform.position.y + this.disY, this._FollowTar.transform.position.z + this.disZ), lerpValue, position);
        this._mCamera.transform.position = position;
        // this._mCamera.transform.position = this._FollowTar.transform.position;
    };
    return CameraManager;
}(Laya.Script));
exports.default = CameraManager;
},{}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CameraManager_1 = require("./CameraManager");
var PlayerManager_1 = require("./PlayerManager");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var StorageMgr_1 = require("../Mgr/StorageMgr");
var DistanceManager_1 = require("./Animator/DistanceManager");
var GameManager = /** @class */ (function (_super) {
    __extends(GameManager, _super);
    function GameManager() {
        var _this = _super.call(this) || this;
        _this._GameOver = false;
        return _this;
    }
    GameManager.Instance = function () {
        return GameManager._instance;
    };
    GameManager.prototype.onAwake = function () {
        GameManager._instance = this;
        this._scene = this.owner;
        this._camera = this._scene.getChildByName("Main Camera");
        this._camera.addComponent(CameraManager_1.default);
        this.LoadGameScene();
    };
    GameManager.prototype.onDisable = function () {
    };
    GameManager.prototype.destroyGame = function () {
        CameraManager_1.default.Instance().setFollowTar(null);
        CameraManager_1.default.Instance().Startgensui(false);
        var AddChildNodeArr = StorageMgr_1.default.getAddChildNodeArr();
        for (var key in AddChildNodeArr) {
            AddChildNodeArr[key]._destroyAllComponent();
            AddChildNodeArr[key].destroy();
        }
        StorageMgr_1.default.setAddChildNodeArr([]);
    };
    GameManager.prototype.LoadLevels = function () {
        var _this = this;
        this.destroyGame();
        var Level = StorageMgr_1.default.getNowLevel();
        var SceneNum = 3;
        if (Level > DistanceManager_1.DistanceManager.MaxLevel) {
            Level = Math.floor(Math.random() * DistanceManager_1.DistanceManager.MaxLevel) + 1;
        }
        var urls = [
            "subRes1/LayaScene_DemoScene/Conventional/Level" + Level + ".lh",
            "subRes1/LayaScene_DemoScene/Conventional/Scene" + SceneNum + ".lh"
        ];
        this.LoadGamePrefab(urls, this, function () {
            // ViewMgr.instance.openView(ViewDef.MainView);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.LoadLevels);
            _this.LoadGameScene();
        });
    };
    GameManager.prototype.LoadGameScene = function () {
        this._Player = this._scene.getChildByName("Player");
        this._Player.addComponent(PlayerManager_1.default);
        CameraManager_1.default.Instance().setFollowTar(this._Player);
        CameraManager_1.default.Instance().Startgensui(true);
    };
    GameManager.prototype.LoadGamePrefab = function (urls, caller, complete) {
        // console.log("--------------------------------- LoadGamePrefab")
        var loadFinishCount = 0;
        var prepareLoadPrefabs = [].concat(urls);
        function LoadPrefabs() {
            var _this = this;
            if (prepareLoadPrefabs.length == 0) {
                complete && complete.call(caller);
                return;
            }
            var url = prepareLoadPrefabs.shift();
            Laya.Sprite3D.load(url, Laya.Handler.create(this, function (prefab) {
                var name = Laya.URL.getFileName(url);
                // this.Prefabs[name.split(".")[0]] = prefab;
                var AddChildNodeArr = StorageMgr_1.default.getAddChildNodeArr();
                var prefabNode = prefab;
                prefabNode.transform.position = new Laya.Vector3(0, 0, 0);
                for (var i = 0; i < prefabNode.numChildren; i++) {
                    var prefabChildNode = prefabNode.getChildAt(i);
                    var ChildNode = Laya.Sprite3D.instantiate(prefabChildNode, null, false);
                    AddChildNodeArr.push(ChildNode);
                }
                // console.log("------------------------------------- AddChildNodeArr:", AddChildNodeArr);
                for (var i = 0; i < AddChildNodeArr.length; i++) {
                    var AddChildNode = AddChildNodeArr[i];
                    _this._scene.addChild(AddChildNode);
                }
                StorageMgr_1.default.setAddChildNodeArr(AddChildNodeArr);
                LoadPrefabs.call(_this);
            }));
        }
        LoadPrefabs.call(this);
    };
    return GameManager;
}(Laya.Script3D));
exports.default = GameManager;
},{"../Event/EventDef":6,"../Event/EventMgr":7,"../Mgr/StorageMgr":30,"./Animator/DistanceManager":79,"./CameraManager":81,"./PlayerManager":83}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var GameManager_1 = require("./GameManager");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var TriggerAnimator_1 = require("./Animator/TriggerAnimator");
var CollisionAnimator_1 = require("./Animator/CollisionAnimator");
var CameraManager_1 = require("./CameraManager");
var StorageMgr_1 = require("../Mgr/StorageMgr");
var DistanceManager_1 = require("./Animator/DistanceManager");
var PlayerManager = /** @class */ (function (_super) {
    __extends(PlayerManager, _super);
    function PlayerManager() {
        var _this = _super.call(this) || this;
        _this.speedVector = new Laya.Vector3(0, 0, 1);
        _this.playerAnimatorKTime = 0;
        _this.playerAnimatorHTime = 1;
        _this.MOUSE_DOWN = false;
        _this.IsCollision = false;
        _this.collisionNode = null;
        return _this;
    }
    PlayerManager.Instance = function () {
        return this._instance;
    };
    PlayerManager.prototype.onAwake = function () {
        this._mOwner = this.owner;
        this.mOwnerRigidBody = this._mOwner.getComponent(Laya.Rigidbody3D);
        this.mOwnerRigidBody.friction = 10;
        this.mOwnerRigidBody.linearFactor = new Laya.Vector3(0, 1, 1);
        this.mOwnerRigidBody.angularFactor = new Laya.Vector3(1, 0, 0);
        this.mOwnerRigidBody.linearDamping = 0.5;
        this.mOwnerRigidBody.ccdMotionThreshold = 0.0001;
        this.mOwnerRigidBody.ccdSweptSphereRadius = 1.2;
        this.mOwnerRigidBody.mass = 10;
        this.speedVector = new Laya.Vector3(0, 0, 1);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.BaoZha, this, this.ApplyForce);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.MOUSE_DOWN, this, function () {
            this.MOUSE_DOWN = true;
        });
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.MOUSE_UP, this, function () {
            this.MOUSE_DOWN = false;
        });
    };
    PlayerManager.prototype.onDisable = function () {
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.BaoZha, this, this.ApplyForce);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.MOUSE_DOWN, this, function () {
            this.MOUSE_DOWN = true;
        });
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.MOUSE_UP, this, function () {
            this.MOUSE_DOWN = false;
        });
    };
    PlayerManager.prototype.ApplyForce = function () {
        var Force = new Laya.Vector3(0, 1000, 0);
        this.mOwnerRigidBody.applyForce(Force);
    };
    PlayerManager.prototype.clearLinearVelocity = function () {
        if (!this.MOUSE_DOWN) {
            this.mOwnerRigidBody.linearFactor = new Laya.Vector3(0, 1, 1);
            return;
        }
        // console.log("--------------------------- clearLinearVelocity");
        var veloctity = this.mOwnerRigidBody.linearVelocity;
        veloctity.z = 0;
        this.mOwnerRigidBody.linearVelocity = veloctity;
        this.mOwnerRigidBody.linearFactor = new Laya.Vector3(0, 1, 0);
    };
    PlayerManager.prototype.PlayMove = function (direction, Vector) {
        if (Vector >= 10) {
            Vector = 10;
        }
        else if (Vector <= -10) {
            Vector = -10;
        }
        if (GameManager_1.default.Instance()._GameOver == true) {
            return;
        }
        var speed = 1;
        this.speedVector = new Laya.Vector3(0, 0, Vector);
        this.mOwnerRigidBody.overrideGravity = true;
        this.mOwnerRigidBody.gravity = new Laya.Vector3(0, -15, 0);
        this.mOwnerRigidBody.friction = 15;
        this.mOwnerRigidBody.linearFactor = new Laya.Vector3(0, 1, 1);
        this.mOwnerRigidBody.angularFactor = new Laya.Vector3(1, 0, 0);
        this.mOwnerRigidBody.linearDamping = 0.5;
        this.mOwnerRigidBody.restitution = 0;
        // this.mOwnerRigidBody.rollingFriction = 0.1;
        this.mOwnerRigidBody.linearVelocity = new Laya.Vector3(this.speedVector.x, this.mOwnerRigidBody.linearVelocity.y, this.speedVector.z * speed);
    };
    PlayerManager.prototype.onCollisionEnter = function (collision) {
        var collisionNode = collision.other.owner;
        var name = collisionNode.name;
        if (name == "dikenler_0") {
            this.mOwnerRigidBody.isKinematic = true;
            ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.InGameView);
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameFailView);
            return;
        }
        if (name != "Road" && name != "pCube7") {
            // console.log("---------------------- name11111111111:", name);
            if (this.collisionNode == collisionNode) {
                return;
            }
            this.IsCollision = true;
            this.collisionNode = collisionNode;
            this.playerAnimatorKTime = 0;
        }
        else {
            this.collisionNode = null;
            // console.log("---------------------- name11111111111:", name);
        }
    };
    PlayerManager.prototype.onTriggerEnter = function (other) {
        var TriggerNode = other.owner;
        var name = TriggerNode.name;
        var Component = TriggerNode.getComponent(TriggerAnimator_1.default);
        var Distance = this.v3GetDistance(this._mOwner.transform.position, TriggerNode.transform.position);
        // console.log("---------------------- name11111111111:", name);
        if (name == "key") {
            TriggerNode.active = false;
        }
        else if (name == "yaziBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.yaziBox);
        }
        else if (name == "zuqiuBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.zuqiuBox);
        }
        else if (name == "keleBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.keleBox);
        }
        else if (name == "yagaoBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.yagaoBox);
        }
        else if (name == "zhibeiBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.zhibeiBox);
        }
        else if (name == "MilkCubeBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.MilkCubeBox);
        }
        else if (name == "qiqiuBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.qiqiuBox);
        }
        else if (name == "zuanshiBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.zuanshiBox);
        }
        else if (name == "bingqilingBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.bingqilingBox);
        }
        else if (name == "zhuangyuBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.zhuangyuBox);
        }
        else if (name == "jianpanBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.jianpanBox);
        }
        else if (name == "cunqianguanBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.cunqianguanBox);
        }
        else if (name == "canjiaojiBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.canjiaojiBox);
        }
        else if (name == "dengBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.dengBox);
        }
        else if (name == "mofangBox") {
            if (Component == null) {
                TriggerNode.addComponent(TriggerAnimator_1.default);
            }
            TriggerNode.getComponent(TriggerAnimator_1.default).setDistance(DistanceManager_1.DistanceManager.dengBox);
        }
        else if (name == "Finish") {
            console.log("---------------------- 游戏结束");
            GameManager_1.default.Instance()._GameOver = true;
        }
    };
    PlayerManager.prototype.v3GetDistance = function (d1, d2) {
        var Distance = Math.sqrt(Math.pow(d1.x - d2.x, 2) + Math.pow(d1.z - d2.z, 2));
        return Distance;
    };
    PlayerManager.prototype.Collision = function () {
        if (this.collisionNode == null) {
            return;
        }
        var collisionNode = this.collisionNode;
        var Component = collisionNode.getComponent(CollisionAnimator_1.default);
        var Distance = this.v3GetDistance(this._mOwner.transform.position, this.collisionNode.transform.position);
        if (collisionNode.name == "xiaoqiuBox") {
            if (Component == null) {
                collisionNode.addComponent(CollisionAnimator_1.default);
            }
        }
        else if (collisionNode.name == "dahuojiBox") {
            if (Component == null) {
                collisionNode.addComponent(CollisionAnimator_1.default);
            }
        }
        else if (collisionNode.name == "xiaohuocheBox") {
            if (Component == null) {
                collisionNode.addComponent(CollisionAnimator_1.default);
            }
        }
        else if (collisionNode.name == "juziBox") {
            if (Component == null) {
                collisionNode.addComponent(CollisionAnimator_1.default);
            }
        }
        else if (collisionNode.name == "bingkuaiBox") {
            if (Component == null) {
                collisionNode.addComponent(CollisionAnimator_1.default);
            }
        }
    };
    PlayerManager.prototype.onUpdate = function () {
        this.clearLinearVelocity();
        this.Collision();
        this.mOwnerRigidBody.wakeUp();
        if (this.mOwnerRigidBody.linearVelocity.z > -0.3 && GameManager_1.default.Instance()._GameOver == true) {
            ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.InGameView);
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameWinView);
            this.mOwnerRigidBody.isKinematic = true;
            GameManager_1.default.Instance()._GameOver = false;
            CameraManager_1.default.Instance().setFollowTar(null);
            CameraManager_1.default.Instance().Startgensui(false);
            var Level = StorageMgr_1.default.getNowLevel();
            StorageMgr_1.default.setNowLevel(Level + 1);
        }
    };
    return PlayerManager;
}(Laya.Script3D));
exports.default = PlayerManager;
},{"../Event/EventDef":6,"../Event/EventMgr":7,"../Mgr/StorageMgr":30,"../Mgr/ViewMgr":31,"./Animator/CollisionAnimator":78,"./Animator/DistanceManager":79,"./Animator/TriggerAnimator":80,"./CameraManager":81,"./GameManager":82}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            LoadingUI.uiView = { "type": "Scene", "props": { "width": 750, "top": 0, "right": 0, "left": 0, "height": 1334, "bottom": 0 }, "compId": 2, "child": [{ "type": "Clip", "props": { "y": 0, "x": 1, "width": 750, "name": "Bg", "height": 1334 }, "compId": 6, "child": [{ "type": "Clip", "props": { "right": 0, "name": "BottomZone", "left": 0, "height": 570, "bottom": 99 }, "compId": 23, "child": [{ "type": "Clip", "props": { "y": 326, "x": 376, "width": 615, "skin": "Loading/loading下条.png", "pivotY": 22, "pivotX": 308, "name": "processBarBg", "height": 44, "sizeGrid": "0,25,0,25" }, "compId": 8, "child": [{ "type": "Clip", "props": { "y": 22, "x": 10, "width": 594, "skin": "Loading/loading上条.png", "pivotY": 13, "name": "processBar", "left": 11, "height": 26, "bottom": 9, "sizeGrid": "0,12,0,12" }, "compId": 5 }, { "type": "Sprite", "props": { "y": -24, "x": 292, "width": 143, "texture": "Loading/资源加载中.png", "pivotY": 12, "pivotX": 72, "height": 23 }, "compId": 10, "child": [{ "type": "Sprite", "props": { "y": 15, "x": 149, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 11 }, { "type": "Sprite", "props": { "y": 15, "x": 159, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 12 }, { "type": "Sprite", "props": { "y": 15, "x": 168, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 13 }] }] }, { "type": "Clip", "props": { "y": 144, "x": 375, "width": 513, "visible": false, "pivotY": 50, "pivotX": 257, "name": "LogoAni", "height": 100 }, "compId": 14, "child": [{ "type": "Sprite", "props": { "y": 50, "x": 139, "width": 64, "texture": "Loading/任.png", "pivotY": 32, "pivotX": 32, "height": 63 }, "compId": 15 }, { "type": "Sprite", "props": { "y": 50, "x": 209, "width": 70, "texture": "Loading/游.png", "pivotY": 33, "pivotX": 35, "height": 66 }, "compId": 16 }, { "type": "Sprite", "props": { "y": 51, "x": 286, "width": 77, "texture": "Loading/玩.png", "pivotY": 28, "pivotX": 39, "height": 56 }, "compId": 17 }, { "type": "Sprite", "props": { "y": 63, "x": 340, "width": 23, "texture": "Loading/R.png", "pivotY": 16, "pivotX": 12, "height": 32 }, "compId": 18 }, { "type": "Sprite", "props": { "y": 63, "x": 363, "width": 21, "texture": "Loading/Y.png", "pivotY": 16, "pivotX": 11, "height": 31 }, "compId": 19 }, { "type": "Sprite", "props": { "y": 62, "x": 392, "width": 33, "texture": "Loading/W.png", "pivotY": 15, "pivotX": 17, "height": 30 }, "compId": 20 }, { "type": "Script", "props": { "runtime": "View/LoadingView/LogoAni.ts" }, "compId": 21 }] }, { "type": "Sprite", "props": { "y": 493, "x": 375, "width": 558, "texture": "Loading/健康游戏忠告.png", "pivotY": 53, "pivotX": 279, "height": 105 }, "compId": 22 }] }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["Loading/loading下条.png", "Loading/loading上条.png", "Loading/资源加载中.png", "Loading/加载顿号.png", "Loading/任.png", "Loading/游.png", "Loading/玩.png", "Loading/R.png", "Loading/Y.png", "Loading/W.png", "Loading/健康游戏忠告.png"], "loadList3D": [] };
            return LoadingUI;
        }(Scene));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[27])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
